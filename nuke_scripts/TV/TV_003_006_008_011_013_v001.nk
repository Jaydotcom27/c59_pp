#! C:/Program Files/Nuke14.0v5/nuke-14.0.5.dll -nx
version 14.0 v5
define_window_layout_xml {<?xml version="1.0" encoding="UTF-8"?>
<layout version="1.0">
    <window x="0" y="0" w="2557" h="1360" screen="0">
        <splitter orientation="1">
            <split size="40"/>
            <dock id="" hideTitles="1" activePageId="Toolbar.1">
                <page id="Toolbar.1"/>
            </dock>
            <split size="1894" stretch="1"/>
            <splitter orientation="2">
                <split size="888"/>
                <dock id="" activePageId="Viewer.1">
                    <page id="Viewer.1"/>
                </dock>
                <split size="430"/>
                <dock id="" activePageId="DAG.1" focus="true">
                    <page id="DAG.1"/>
                    <page id="Curve Editor.1"/>
                    <page id="DopeSheet.1"/>
                </dock>
            </splitter>
            <split size="615"/>
            <dock id="" activePageId="Properties.1">
                <page id="Properties.1"/>
                <page id="uk.co.thefoundry.backgroundrenderview.1"/>
                <page id="Scenegraph.1"/>
            </dock>
        </splitter>
    </window>
</layout>
}
Root {
 inputs 0
 name C:/3D_Temp/PP/nuke_scripts/TV/TV_003_006_008_011_013_v001.nk
 frame 1034
 first_frame 1001
 last_frame 86514
 format "3840 2160 0 0 3840 2160 1 UHD_4K"
 proxy true
 proxy_type scale
 proxy_format "1024 778 0 0 1024 778 1 1K_Super_35(full-ap)"
 colorManagement Nuke
 workingSpaceLUT linear
 monitorLut sRGB
 monitorOutLUT rec709
 int8Lut sRGB
 int16Lut sRGB
 logLut Cineon
 floatLut linear
}
BackdropNode {
 inputs 0
 name BackdropNode1
 label PLATE
 note_font "Verdana Bold"
 note_font_size 41
 xpos -671
 ypos -378
 bdwidth 604
 bdheight 391
}
BackdropNode {
 inputs 0
 name BackdropNode2
 tile_color 0x7195c6ff
 label "TV_Plates\n"
 note_font_size 42
 xpos -3424
 ypos -508
 bdwidth 1698
 bdheight 800
}
BackdropNode {
 inputs 0
 name BackdropNode3
 tile_color 0x71c67100
 label CRT_RAYS
 note_font "Verdana Bold"
 note_font_size 18
 xpos -645
 ypos 425
 bdwidth 200
 bdheight 237
}
BackdropNode {
 inputs 0
 name Roto_Batch
 tile_color 0xc6ab71ff
 label Roto_Batch
 note_font_size 42
 xpos -3690
 ypos -508
 bdwidth 256
 bdheight 798
}
Blur {
 inputs 0
 size 5.6
 name Blur3
 xpos -1565
 ypos 6
}
Read {
 inputs 0
 file_type exr
 file C:/3D_Temp/PP/Footage/TV_013/V1-0013_TV_%05d.exr
 format "3840 2160 0 0 3840 2160 1 UHD_4K"
 first 86776
 last 86915
 origfirst 86776
 origlast 86915
 origset true
 name Read11
 xpos -203
 ypos -163
}
set N13d3d000 [stack 0]
Read {
 inputs 0
 file_type exr
 file C:/3D_Temp/PP/Footage/TV_011/V1-0011_TV_%05d.exr
 format "3840 2160 0 0 3840 2160 1 UHD_4K"
 first 86671
 last 86735
 origfirst 86671
 origlast 86735
 origset true
 name Read10
 xpos -203
 ypos -287
}
set N13d3d400 [stack 0]
Read {
 inputs 0
 file_type png
 file "C:/3D_Temp/Action Essentials/Bookeh/Iris_Messy.png"
 format "270 270 0 0 270 270 1 "
 origset true
 name Read2
 xpos -1320
 ypos 54
}
CheckerBoard2 {
 inputs 0
 name CheckerBoard1
 xpos -1196
 ypos 58
}
Roto {
 inputs 0
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px
        {x447a4000 x44800000}
        {{{xc26199a0 -}}
	 {{x3fb33400 -}}}
        {{{x44d81001 0 1 xbcb22164 1}
	  {x44d80000 xbcb22164 1 0 1}}
	 {{x44f01000 0 1 x3f000000 1}
	  {x44f18000 x3f000000 1 0 1}}}
        {{{x426199a0 -}}
	 {{xbfb33400 -}}}
        {{{0 -}}
	 {{0 -}}}
        {{{x44ecc001 0 1 xbcb22164 1}
	  {x44ecb000 xbcb22164 1 0 1}}
	 {{x44ef2000 0 1 x3f000000 1}
	  {x44f09000 x3f000000 1 0 1}}}
        {{{0 -}}
	 {{0 -}}}
        {{{1 -}}
	 {{x427c0000 -}}}
        {{{x44f3e000 0 1 x3db21643 1}
	  {x44f42000 x3db21643 1 0 1}}
	 {{x44e80000 0 1 x3f10b216 1}
	  {x44e9a000 x3f10b216 1 0 1}}}
        {{{xbf800000 -}}
	 {{xc27c0000 -}}}
        {{{0 -}}
	 {{0 -}}}
        {{{x44f3db6e 0 1 xbcb21643 1}
	  {x44f3cb6e xbcb21643 1 0 1}}
	 {{x44d93492 0 1 x3f37a6f5 1}
	  {x44db4492 x3f37a6f5 1 0 1}}}
        {{{0 -}}
	 {{0 -}}}
        {{{x42a40000 -}}
	 {{xc0e5a600 -}}}
        {{{x44ea96db 0 1 x3dde9bd3 1}
	  {x44eae6db x3dde9bd3 1 0 1}}
	 {{x44d4becc 0 1 xbe485a6f 1}
	  {x44d42ecb xbe485a6f 1 0 1}}}
        {{{0 -}}
	 {{0 -}}}
        {{{0 -}}
	 {{0 -}}}
        {{{x44df8000 0 1 x3dde9bd3 1}
	  {x44dfd000 x3dde9bd3 1 0 1}}
	 {{x44d5a001 0 1 xbe485a6f 1}
	  {x44d51000 xbe485a6f 1 0 1}}}
        {{{0 -}}
	 {{0 -}}}
        {{{x41300000 -}}
	 {{xc1fb3340 -}}}
        {{{x44d55666 0 1 xbe1bd37a 1}
	  {x44d4e666 xbe1bd37a 1 0 1}}
	 {{x44d9f666 0 1 xbd8590b2 1}
	  {x44d9c666 xbd8590b2 1 0 1}}}
        {{{xc1300000 -}}
	 {{x41fb3340 -}}}
        {{{0 -}}
	 {{xbeccd000 -}}}
        {{{x44d36ccd 0 1 xbe8590b2 1}
	  {x44d2accd xbe8590b2 1 0 1}}
	 {{x44e5accd 0 1 xbd321643 1}
	  {x44e58ccd xbd321643 1 0 1}}}
        {{{0 -}}
	 {{x3eccd000 -}}}}}     idem}
     {tx x44800000 x44e3dcb0 x44e1f0d2}
     {a osw x41200000 osf 0 str 1 spx x44800000 spy x44428000 sb 1 ltn x44800000 ltm x44800000 tt x40800000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 tt 5 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 tt 6 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 tt 7 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 tt 8 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 tt 9 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1024 778}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1024
 lifetime_end 1024
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto1
 xpos -3608
 ypos -187
}
Roto {
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px
        {x447a4000 x44800000}
        {{{xc26fffe0 -}}
      {{x40b99a00 -}}}
        {{{x44fccf78 0 1 xbd1469bd 1}
       {x44fc8ccd xbd1469bd 1 0 1}}
      {{x44edb6f0 0 1 x3e81da6f 1}
       {x44ee999a x3e81da6f 1 0 1}}}
        {{{x42700000 0 1 xb6b21643 1}
       {x426fffe0 xb6b21643 1 0 1}}
      {{xc0b99a00 -}}}
        {{{0 -}}
      {{0 -}}}
        {{{x4509eaf0 0 1 xbd146f4e 1}
       {x4509c99a xbd146f4e 1 0 1}}
      {{x44eb83bc 0 1 x3e81da6f 1}
       {x44ec6666 x3e81da6f 1 0 1}}}
        {{{0 -}}
      {{0 -}}}
        {{{x40f33400 -}}
      {{x427b3340 -}}}
        {{{x450bd845 0 1 xbd5e9bd3 1}
       {x450bf99a xbd5e9bd3 1 0 1}}
      {{x44e3a555 0 1 x3efa6f4e 1}
       {x44e50000 x3efa6f4e 1 0 1}}}
        {{{xc0f33400 -}}
      {{xc27b3340 -}}}
        {{{0 -}}
      {{xbeccd000 -}}}
        {{{x450b0aab -}
       {x450b4000 -}}
      {{x44d3ad55 -}
       {x44d3a000 -}}}
        {{{0 -}}
      {{x3eccd000 -}}}
        {{x4224ccc0}
      {xbeccd000}}
        {{{x450846ab 0 1 x3e26f4df 1}
       {x4508e000 x3e26f4df 1 0 1}}
      {{x44d0c000 0 1 xbdde9bd3 1}
       {x44d02000 xbdde9bd3 1 0 1}}}
        {{xc224ccc0}
      {x3eccd000}}
        {{x41f00000}
      {xc194ccc0}}
        {{{x44f8b000 -}
       {x44f86000 -}}
      {{x44d3b99a -}
       {x44d3199a -}}}
        {{xc1f00000}
      {x4194ccc0}}
        {{xbf999800}
      {xc20a6680}}
        {{{x44f53800 0 1 xbe4c0f4e 1}
       {x44f4c000 xbe4c0f4e 1 0 1}}
      {{x44dd2666 -}}}
        {{x3f999800}
      {x420a6680}}
        {{0}
      {0}}
        {{{x44f59223 -}
       {x44f50ccd -}}
      {{x44e93bbb -}
       {x44eae666 -}}}
        {{0}
      {0}}}}     idem}
     {tx x44800000 x45032800 x44dfdccd}
     {a osw x41200000 osf 0 str 1 spx x44800000 spy x44428000 sb 1 ltn x44800000 ltm x44800000 tt x40800000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1024 778}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1024
 lifetime_end 1024
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto2
 xpos -3608
 ypos -151
}
Roto {
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px
        {x447a4000 x44800000}
        {{{xc2480000 -}}
      {{x40b99a00 -}}}
        {{{x450f0000 -}}
      {{x44ce6000 -}}}
        {{{x42480000 -}}
      {{xc0b99a00 -}}}
        {{{xc26199c0 -}}
      {{xc10ccc80 -}}}
        {{{x451b68ad 0 1 x3d18bd38 1}
       {x451b7666 x3d18bd38 1 0 1}}
      {{x44cd65e8 0 1 xbe80c4df 1}
       {x44ccaccd xbe80c4df 1 0 1}}}
        {{{x41cf8d80 0 1 xb7321643 1}
       {x41cf8d00 xb7321643 1 0 1}}
      {{x40818800 0 1 x36b21643 1}
       {x40818900 x36b21643 1 0 1}}}
        {{{xc102a800 0 1 xbc03d37a 1}
       {xc1059e00 xbc03d37a 1 0 1}}
      {{xc1a79580 0 1 xbddc590b 1}
       {xc1bb6180 xbddc590b 1 0 1}}}
        {{{x451dd37e 0 1 x3ef9a164 1}
       {x451e86ea x3ef9a164 1 0 1}}
      {{x44d01b14 0 1 x3f7dd42d 1}
       {x44d2f4d6 x3f7dd42d 1 0 1}}}
        {{{x41196000 0 1 x3c1ac859 1}
       {x411cda00 x3c1ac859 1 0 1}}
      {{x41c4ba80 0 1 x3e0157a7 1}
       {x41dbf840 x3e0157a7 1 0 1}}}
        {{{xb9800000 -}}
      {{xb9000000 -}}}
        {{{x451f0bce 0 1 x3ddea164 1}
       {x451f33cf x3ddea164 1 0 1}}
      {{x44d9422a 0 1 x3e732000 1}
       {x44d9f0e9 x3e732000 1 0 1}}}
        {{{0 -}}
      {{0 -}}}
        {{{0 -}}
      {{0 -}}}
        {{{x451f8aa9 0 1 x3e146c86 1}
       {x451fc000 x3e146c86 1 0 1}}
      {{x44e12aab 0 1 x3ded7216 1}
       {x44e18000 x3ded7216 1 0 1}}}
        {{{0 -}}
      {{0 -}}}
        {{{x421e6640 -}}
      {{xc0866600 -}}}
        {{{x451d7911 0 1 x3e2aa9bd 1}
       {x451db666 x3e2aa9bd 1 0 1}}
      {{x44e8319a 0 1 x3eb7a6f5 1}
       {x44e9399a x3eb7a6f5 1 0 1}}}
        {{{xc21e6640 -}}
      {{x40866600 -}}}
        {{{x41f33300 -}}
      {{x417ccc80 -}}}
        {{{x450ec000 0 1 x3e0590b2 1}
       {x450ef000 x3e0590b2 1 0 1}}
      {{x44ea5666 0 1 x3ed37a6f 1}
       {x44eb8666 x3ed37a6f 1 0 1}}}
        {{{xc1f33300 -}}
      {{xc17ccc80 -}}}
        {{{x40666800 -}}
      {{x42200000 -}}}
        {{{x450c7507 0 1 xbd9f0000 1}
       {x450c699a xbd9f0000 1 0 1}}
      {{x44e19999 0 1 x3f1bd3d3 1}
       {x44e3599a x3f1bd3d3 1 0 1}}}
        {{{xc0666800 -}}
      {{xc2200000 -}}}
        {{{0 -}}
      {{xbeccd000 -}}}
        {{{x450be1d3 0 1 xbd9f0000 1}
       {x450bd666 xbd9f0000 1 0 1}}
      {{x44d3efff 0 1 x3dde9e9c 1}
       {x44d44000 x3dde9e9c 1 0 1}}}
        {{{0 -}}
      {{x3eccd000 -}}}}}     idem}
     {tx x44800000 x4515ca13 x44dc5aea}
     {a osw x41200000 osf 0 str 1 spx x44800000 spy x44428000 sb 1 ltn x44800000 ltm x44800000 tt x40800000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { addPoints str 1 ssx 1 ssy 1 sf 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1024 778}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1024
 lifetime_end 1024
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto3
 xpos -3608
 ypos -115
}
Roto {
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px
        {x447a4000 x44800000}
        {{0}
      {0}}
        {{{x44dbebe3 -}
       {x44dad99a -}}
      {{x4507cc1d -}
       {x4507c666 -}}}
        {{0}
      {0}}
        {{xc20f2800}
      {x418c3480}}
        {{x44dea666}
      {x44fd5d55 x44fccd55}}
        {{x4214cce0}
      {xc191bbc0}}
        {{xc2803eb0}
      {xbfb24800}}
        {{{x44f4146b 0 1 xbf15bac8 1}
       {x44f18df2 xbf15bac8 1 0 1}}
      {{x44f94b94 0 1 x3d0374df 1}
       {x44f94333 x3d0374df 1 0 1}}}
        {{x4280e660}
      {x3fb33400}}
        {{1}
      {xc3003340}}
        {{{x44fe02e5 0 1 x3dbed0b2 1}
       {x44fecccd x3dbed0b2 1 0 1}}
      {{x45040266 0 1 xbf26f4df 1}
       {x45032666 xbf26f4df 1 0 1}}}
        {{xbf800000}
      {x43003340}}
        {{0}
      {0}}
        {{x44fe9333}
      {x4509999a}}
        {{0}
      {0}}}}     idem}
     {tx x44800000 x44ee828e x45031333}
     {a osw x41200000 osf 0 str 1 spx x44800000 spy x44428000 sb 1 ltn x44800000 ltm x44800000 tt x40800000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1024 778}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1024
 lifetime_end 1024
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto4
 xpos -3608
 ypos -79
}
Roto {
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px
        {x447a4000 x44800000}
        {{0}
      {xbf000000}}
        {{x4506c8f1 x45065800}
      {x4507d7ff x4507d800}}
        {{0}
      {x3f000000}}
        {{xc1d80000}
      {x421c0000}}
        {{x4506f8f1 x45068800}
      {x44facfff x44fad000}}
        {{x41d80000}
      {xc21c0000}}
        {{{0 -}}
      {{0 -}}}
        {{{x4516ccb5 -}
       {x45171800 -}}
      {{x44f70000 -}}}
        {{{0 -}}
      {{0 -}}}
        {{{xc0600000 -}}
      {{xc2da0000 -}}}
        {{{x4519e4b5 -}
       {x451a3000 -}}
      {{x45029000 -}}}
        {{{x40600000 -}}
      {{x42da0000 -}}}
        {{{0 -}}
      {{0 -}}}
        {{{x451a34b5 -}
       {x451a8000 -}}
      {{x450a2800 -}}}
        {{{0 -}}
      {{0 -}}}}}     idem}
     {tx x44800000 x4511bb33 x4502b19a}
     {a osw x41200000 osf 0 str 1 spx x44800000 spy x44428000 sb 1 ltn x44800000 ltm x44800000 tt x40800000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1024 778}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1024
 lifetime_end 1024
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto5
 xpos -3608
 ypos -43
}
Roto {
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1920 1080}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1035
 lifetime_end 1035
 view {}
 motionblur_on true
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto6
 xpos -3608
 ypos -7
}
Roto {
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x44810000
        {0 xbef1a000}
        {x44e35bc3 x44c83e1d}
        {0 x3ef1b000}
        {xc1f5ce40 x410f7980}
        {x44e64135 x44bd9090}
        {x41f5ce40 xc10f7900}
        {0 0}
        {x44ecbd67 x44bc3535}
        {0 0}
        {0 0}
        {x44ee505d x44c71f2b}
        {0 0}}}     idem}
     {tx x44810000 x44ea0800 x44bed800}
     {a fx x41f00000 fy x41f00000 osw x41200000 osf 0 str 1 spx x44f00000 spy x44870000 sb 1 ltn x44810000 ltm x44810000 tt x40800000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 tt 5 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1920 1080}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1032
 lifetime_end 1032
 motionblur_shutter_offset_type centred
 feather 30
 source_black_outside true
 name Roto14
 xpos -3608
 ypos 65
}
Roto {
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x44810000
        {0 0}
        {x44fef115 x44c5134d}
        {0 0}
        {0 0}
        {x44fdb9a1 x44bb2bd7}
        {0 0}
        {0 0}
        {x45077106 x44c04bc3}
        {0 0}
        {0 0}
        {x4507906a x44c39814}
        {0 0}}}     idem}
     {tx x44810000 x4503919a x44c0dccc}
     {a fx x41f00000 fy x41f00000 osw x41200000 osf 0 str 1 spx x44f00000 spy x44870000 sb 1 ltn x44810000 ltm x44810000 tt x40800000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1920 1080}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1032
 lifetime_end 1032
 motionblur_shutter_offset_type centred
 feather 30
 source_black_outside true
 name Roto15
 xpos -3608
 ypos 101
}
FilterErode {
 size 3.3
 name FilterErode1
 xpos -3608
 ypos 192
}
Blur {
 size 9.4
 name Blur1
 xpos -3608
 ypos 235
 disable true
}
Dot {
 name Dot2
 xpos -3574
 ypos 513
}
set N125a1000 [stack 0]
Dot {
 name Dot4
 xpos -1406
 ypos 513
}
set N125a1800 [stack 0]
Dot {
 name Dot9
 xpos -1405
 ypos 357
}
set N125a1c00 [stack 0]
Roto {
 inputs 0
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Rectangle1 512 bezier
     {{cc
       {f 8192}
       {px x447ac000
        {0 xc40a5554}
        {x43848004 x44f28005}
        {x44891556 0}
        {xc4891554 0}
        {x455e3001 x44f28005}
        {0 xc40a5554}
        {0 x440a5555}
        {x455e3001 x438c000e}
        {xc4891554 0}
        {x44891556 0}
        {x43848004 x438c000e}
        {0 x440a5555}}}
      {cc
       {f 8192}
       {px x447ac000
        {0 xc40a5554}
        {0 0}
        {x44891556 0}
        {xc4891554 0}
        {0 0}
        {0 xc40a5554}
        {0 x440a5555}
        {0 0}
        {xc4891554 0}
        {x44891556 0}
        {0 0}
        {0 x440a5555}}}}
     {tx x447ac000 x44eec000 x4488e000}
     {a osw x41200000 osf 0 str 1 spx x44f00000 spy x44870000 sb 1 ltn x447ac000 ltm x447ac000 tt x41000000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 tt 8 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1920 1080}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1003
 lifetime_end 1003
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto8
 xpos -2918
 ypos -205
}
Invert {
 name Invert2
 xpos -2918
 ypos -169
}
Blur {
 size 600
 name Blur6
 xpos -2918
 ypos -133
}
Dot {
 name Dot12
 xpos -2884
 ypos -92
}
Read {
 inputs 0
 file_type exr
 file C:/3D_Temp/PP/Footage/Chica/CHICA_003_v1/V1_CHICA_003_%05d.exr
 format "3840 2160 0 0 3840 2160 1 UHD_4K"
 first 95417
 before loop
 last 95490
 after loop
 origfirst 95417
 origlast 95490
 origset true
 name Read14
 xpos -3278
 ypos -412
}
TimeOffset {
 time_offset -20
 time ""
 name TimeOffset1
 xpos -3278
 ypos -328
}
Grade {
 blackpoint {0.03531807289 0.03941735625 0.03999999911 0}
 whitepoint {0.3883192241 0.2372538149 0.1959296316 0}
 black {-0.006000000052 -0.006000000052 -0.006000000052 0}
 multiply 0.5
 name Grade10
 xpos -3278
 ypos -294
}
Dot {
 name Dot17
 xpos -3244
 ypos -248
}
set N3335e800 [stack 0]
Dot {
 name Dot18
 xpos -2986
 ypos -248
}
set N3335f800 [stack 0]
Retime {
 input.last 36
 output.first 1001
 output.first_lock true
 output.last 1036
 before loop
 after loop
 time ""
 name Retime3
 xpos -3020
 ypos -228
}
TimeOffset {
 time_offset 10
 time ""
 name TimeOffset2
 xpos -3020
 ypos -204
}
Transform {
 scale {1.824000001 1.200000048}
 center {960 540}
 name Transform3
 xpos -3020
 ypos -164
}
Reformat {
 name Reformat2
 xpos -3020
 ypos -132
}
Grade {
 inputs 1+1
 black 0.02
 name Grade3
 xpos -3019
 ypos -95
}
LensDistortion2 {
 distortionDenominator0 0.25
 output Undistort
 outputBBox {381 76 3459 2084}
 featuresKnob "
version 1
entries 0
entries 0
"
 distortionModelDisplayX "xu = xd / (1 + k0 * rd^2 + k1 * rd^4)"
 distortionModelDisplayY "yu = yd / (1 + k0 * rd^2 + k1 * rd^4)"
 name LensDistortion2
 xpos -3019
 ypos -58
}
Transform {
 scale 1.3
 center {1920 1080}
 name Transform4
 xpos -3019
 ypos -22
}
Dot {
 name Dot25
 xpos -2985
 ypos 2
}
set Nf514e000 [stack 0]
Dot {
 name Dot26
 xpos -2864
 ypos 2
}
Mirror2 {
 flip true
 name Mirror2_2
 xpos -2898
 ypos 24
}
CornerPin2D {
 to1 {1968.5 1462}
 to2 {2220 1451.5}
 to3 {2228.5 1613.5}
 to4 {1985.5 1622.5}
 invert false
 from1 {0 0}
 from2 {3840 0}
 from3 {3840 2160}
 from4 {0 2160}
 name CornerPin2D8
 xpos -2898
 ypos 48
}
Blur {
 name Blur12
 xpos -2898
 ypos 72
}
Grade {
 white 0.15
 name Grade13
 xpos -2898
 ypos 108
}
Roto {
 inputs 0
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Rectangle1 512 bezier
     {{cc
       {f 8192}
       {px x447ac000
        {0 xc40a5554}
        {x43848004 x44f28005}
        {x44891556 0}
        {xc4891554 0}
        {x455e3001 x44f28005}
        {0 xc40a5554}
        {0 x440a5555}
        {x455e3001 x438c000e}
        {xc4891554 0}
        {x44891556 0}
        {x43848004 x438c000e}
        {0 x440a5555}}}
      {cc
       {f 8192}
       {px x447ac000
        {0 xc40a5554}
        {0 0}
        {x44891556 0}
        {xc4891554 0}
        {0 0}
        {0 xc40a5554}
        {0 x440a5555}
        {0 0}
        {xc4891554 0}
        {x44891556 0}
        {0 0}
        {0 x440a5555}}}}
     {tx x447ac000 x44eec000 x4488e000}
     {a osw x41200000 osf 0 str 1 spx x44f00000 spy x44870000 sb 1 ltn x447ac000 ltm x447ac000 tt x41000000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 tt 8 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1920 1080}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1003
 lifetime_end 1003
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto7
 xpos -3176
 ypos -207
}
Invert {
 name Invert1
 xpos -3176
 ypos -171
}
Blur {
 size 600
 name Blur5
 xpos -3176
 ypos -135
}
Dot {
 name Dot11
 xpos -3142
 ypos -94
}
push $N3335e800
Retime {
 input.last 36
 output.first 1001
 output.first_lock true
 output.last 1036
 before loop
 after loop
 time ""
 name Retime2
 xpos -3278
 ypos -227
}
Transform {
 scale {1.824000001 1.200000048}
 center {960 540}
 name Transform1
 xpos -3278
 ypos -166
}
Reformat {
 name Reformat1
 xpos -3278
 ypos -134
}
Grade {
 inputs 1+1
 black 0.02
 name Grade2
 xpos -3277
 ypos -97
}
LensDistortion2 {
 distortionDenominator0 0.25
 output Undistort
 outputBBox {381 76 3459 2084}
 featuresKnob "
version 1
entries 0
entries 0
"
 distortionModelDisplayX "xu = xd / (1 + k0 * rd^2 + k1 * rd^4)"
 distortionModelDisplayY "yu = yd / (1 + k0 * rd^2 + k1 * rd^4)"
 name LensDistortion1
 xpos -3277
 ypos -60
}
Transform {
 scale 1.3
 center {1920 1080}
 name Transform2
 xpos -3277
 ypos -24
}
Dot {
 name Dot23
 xpos -3243
 ypos 6
}
set N89ebb800 [stack 0]
Dot {
 name Dot24
 xpos -3124
 ypos 6
}
Mirror2 {
 flip true
 name Mirror2_1
 xpos -3158
 ypos 24
}
CornerPin2D {
 to1 {1784 1440}
 to2 {1952 1460}
 to3 {1956 1616}
 to4 {1756 1626}
 invert false
 from1 {0 0}
 from2 {3840 0}
 from3 {3840 2160}
 from4 {0 2160}
 name CornerPin2D7
 xpos -3158
 ypos 48
}
Blur {
 name Blur11
 xpos -3158
 ypos 72
}
Grade {
 white 0.15
 name Grade12
 xpos -3158
 ypos 108
}
push $N89ebb800
CornerPin2D {
 to1 {1662 1701.5}
 to2 {1950 1708}
 to3 {1956 1921.5}
 to4 {1680 1921.5}
 invert false
 from1 {0 0}
 from2 {3840 0}
 from3 {3840 2160}
 from4 {0 2160}
 name CornerPin2D1
 xpos -3277
 ypos 108
}
Dot {
 name Dot3
 xpos -3244
 ypos 197
}
Merge2 {
 inputs 2
 name Merge13
 xpos -3159
 ypos 194
}
push $Nf514e000
CornerPin2D {
 to1 {1949.5 1695}
 to2 {2224 1667.5}
 to3 {2245.5 1899}
 to4 {1963 1906}
 invert false
 from1 {0 0}
 from2 {3840 0}
 from3 {3840 2160}
 from4 {0 2160}
 name CornerPin2D2
 xpos -3019
 ypos 72
}
Merge2 {
 inputs 2
 name Merge3
 xpos -3019
 ypos 194
}
Merge2 {
 inputs 2
 name Merge14
 xpos -2899
 ypos 194
}
Roto {
 inputs 0
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Rectangle1 512 bezier
     {{cc
       {f 8192}
       {px x447ac000
        {0 xc40a5554}
        {x43848004 x44f28005}
        {x44891556 0}
        {xc4891554 0}
        {x455e3001 x44f28005}
        {0 xc40a5554}
        {0 x440a5555}
        {x455e3001 x438c000e}
        {xc4891554 0}
        {x44891556 0}
        {x43848004 x438c000e}
        {0 x440a5555}}}     idem}
     {tx x447ac000 x44eec000 x4488e000}
     {a osw x41200000 osf 0 str 1 spx x44f00000 spy x44870000 sb 1 ltn x447ac000 ltm x447ac000 tt x41000000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 tt 8 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1920 1080}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1003
 lifetime_end 1003
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto9
 xpos -2668
 ypos -202
}
Invert {
 name Invert3
 xpos -2668
 ypos -166
}
Blur {
 size 600
 name Blur7
 xpos -2668
 ypos -130
}
Dot {
 name Dot13
 xpos -2634
 ypos -89
}
push $N3335f800
Dot {
 name Dot19
 xpos -2736
 ypos -248
}
set N3335f000 [stack 0]
Retime {
 input.last 36
 output.first 1001
 output.first_lock true
 output.last 1036
 before loop
 after loop
 time ""
 name Retime4
 xpos -2770
 ypos -225
}
Transform {
 scale {1.824000001 1.200000048}
 center {960 540}
 name Transform5
 xpos -2770
 ypos -161
}
Reformat {
 name Reformat7
 xpos -2770
 ypos -129
}
Grade {
 inputs 1+1
 black 0.02
 name Grade5
 xpos -2769
 ypos -92
}
LensDistortion2 {
 distortionDenominator0 0.25
 output Undistort
 outputBBox {381 76 3459 2084}
 featuresKnob "
version 1
entries 0
entries 0
"
 distortionModelDisplayX "xu = xd / (1 + k0 * rd^2 + k1 * rd^4)"
 distortionModelDisplayY "yu = yd / (1 + k0 * rd^2 + k1 * rd^4)"
 name LensDistortion3
 xpos -2769
 ypos -55
}
Transform {
 scale 1.3
 center {1920 1080}
 name Transform6
 xpos -2769
 ypos -19
}
CornerPin2D {
 to1 {2236 1663}
 to2 {2534 1645.5}
 to3 {2564 1861.5}
 to4 {2250 1894}
 invert false
 from1 {0 0}
 from2 {3840 0}
 from3 {3840 2160}
 from4 {0 2160}
 name CornerPin2D3
 xpos -2769
 ypos 45
}
Merge2 {
 inputs 2
 name Merge4
 xpos -2770
 ypos 194
}
Roto {
 inputs 0
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Rectangle1 512 bezier
     {{cc
       {f 8192}
       {px x447ac000
        {0 xc40a5554}
        {x43848004 x44f28005}
        {x44891556 0}
        {xc4891554 0}
        {x455e3001 x44f28005}
        {0 xc40a5554}
        {0 x440a5555}
        {x455e3001 x438c000e}
        {xc4891554 0}
        {x44891556 0}
        {x43848004 x438c000e}
        {0 x440a5555}}}
      {cc
       {f 8192}
       {px x447ac000
        {0 xc40a5554}
        {0 0}
        {x44891556 0}
        {xc4891554 0}
        {0 0}
        {0 xc40a5554}
        {0 x440a5555}
        {0 0}
        {xc4891554 0}
        {x44891556 0}
        {0 0}
        {0 x440a5555}}}}
     {tx x447ac000 x44eec000 x4488e000}
     {a osw x41200000 osf 0 str 1 spx x44f00000 spy x44870000 sb 1 ltn x447ac000 ltm x447ac000 tt x41000000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 tt 8 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1920 1080}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1003
 lifetime_end 1003
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto10
 xpos -2403
 ypos -207
}
Invert {
 name Invert4
 xpos -2403
 ypos -171
}
Blur {
 size 600
 name Blur8
 xpos -2403
 ypos -135
}
Dot {
 name Dot14
 xpos -2369
 ypos -94
}
push $N3335f000
Dot {
 name Dot20
 xpos -2471
 ypos -248
}
set N3335f400 [stack 0]
Retime {
 input.last 36
 output.first 1001
 output.first_lock true
 output.last 1036
 before loop
 after loop
 time ""
 name Retime5
 xpos -2505
 ypos -230
}
TimeOffset {
 time_offset 16
 time ""
 name TimeOffset3
 xpos -2505
 ypos -206
}
Transform {
 scale {1.824000001 1.200000048}
 center {960 540}
 name Transform7
 xpos -2505
 ypos -166
}
Reformat {
 name Reformat3
 xpos -2505
 ypos -134
}
Grade {
 inputs 1+1
 black 0.02
 name Grade6
 xpos -2504
 ypos -97
}
LensDistortion2 {
 distortionDenominator0 0.25
 output Undistort
 outputBBox {381 76 3459 2084}
 featuresKnob "
version 1
entries 0
entries 0
"
 distortionModelDisplayX "xu = xd / (1 + k0 * rd^2 + k1 * rd^4)"
 distortionModelDisplayY "yu = yd / (1 + k0 * rd^2 + k1 * rd^4)"
 name LensDistortion4
 xpos -2504
 ypos -60
}
Transform {
 scale 1.3
 center {1920 1080}
 name Transform8
 xpos -2504
 ypos -24
}
CornerPin2D {
 to1 {1750.5 2014.5}
 to2 {2049 2006}
 to3 {2053 2261}
 to4 {1750 2262}
 invert false
 from1 {0 0}
 from2 {3840 0}
 from3 {3840 2160}
 from4 {0 2160}
 name CornerPin2D4
 xpos -2504
 ypos 43
}
Merge2 {
 inputs 2
 name Merge5
 xpos -2505
 ypos 194
}
Roto {
 inputs 0
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Rectangle1 512 bezier
     {{cc
       {f 8192}
       {px x447ac000
        {0 xc40a5554}
        {x43848004 x44f28005}
        {x44891556 0}
        {xc4891554 0}
        {x455e3001 x44f28005}
        {0 xc40a5554}
        {0 x440a5555}
        {x455e3001 x438c000e}
        {xc4891554 0}
        {x44891556 0}
        {x43848004 x438c000e}
        {0 x440a5555}}}
      {cc
       {f 8192}
       {px x447ac000
        {0 xc40a5554}
        {0 0}
        {x44891556 0}
        {xc4891554 0}
        {0 0}
        {0 xc40a5554}
        {0 x440a5555}
        {0 0}
        {xc4891554 0}
        {x44891556 0}
        {0 0}
        {0 x440a5555}}}}
     {tx x447ac000 x44eec000 x4488e000}
     {a osw x41200000 osf 0 str 1 spx x44f00000 spy x44870000 sb 1 ltn x447ac000 ltm x447ac000 tt x41000000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 tt 8 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1920 1080}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1003
 lifetime_end 1003
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto11
 xpos -2151
 ypos -208
}
Invert {
 name Invert5
 xpos -2151
 ypos -172
}
Blur {
 size 600
 name Blur9
 xpos -2151
 ypos -136
}
Dot {
 name Dot15
 xpos -2117
 ypos -95
}
push $N3335f400
Dot {
 name Dot21
 xpos -2219
 ypos -248
}
set N3335e400 [stack 0]
Retime {
 input.last 36
 output.first 1001
 output.first_lock true
 output.last 1036
 before loop
 after loop
 time ""
 name Retime6
 xpos -2253
 ypos -231
}
Transform {
 scale {1.824000001 1.200000048}
 center {960 540}
 name Transform9
 xpos -2253
 ypos -167
}
Reformat {
 name Reformat8
 xpos -2253
 ypos -135
}
Grade {
 inputs 1+1
 black 0.02
 name Grade7
 xpos -2252
 ypos -98
}
LensDistortion2 {
 distortionDenominator0 0.25
 output Undistort
 outputBBox {381 76 3459 2084}
 featuresKnob "
version 1
entries 0
entries 0
"
 distortionModelDisplayX "xu = xd / (1 + k0 * rd^2 + k1 * rd^4)"
 distortionModelDisplayY "yu = yd / (1 + k0 * rd^2 + k1 * rd^4)"
 name LensDistortion5
 xpos -2252
 ypos -61
}
Transform {
 scale 1.3
 center {1920 1080}
 name Transform10
 xpos -2252
 ypos -25
}
CornerPin2D {
 to1 {2134 1994}
 to2 {2456 1976}
 to3 {2470 2234}
 to4 {2166 2256}
 invert false
 from1 {0 0}
 from2 {3840 0}
 from3 {3840 2160}
 from4 {0 2160}
 name CornerPin2D5
 xpos -2252
 ypos 45
}
Merge2 {
 inputs 2
 name Merge6
 xpos -2253
 ypos 194
}
Roto {
 inputs 0
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Rectangle1 512 bezier
     {{cc
       {f 8192}
       {px x447ac000
        {0 xc40a5554}
        {x43848004 x44f28005}
        {x44891556 0}
        {xc4891554 0}
        {x455e3001 x44f28005}
        {0 xc40a5554}
        {0 x440a5555}
        {x455e3001 x438c000e}
        {xc4891554 0}
        {x44891556 0}
        {x43848004 x438c000e}
        {0 x440a5555}}}
      {cc
       {f 8192}
       {px x447ac000
        {0 xc40a5554}
        {0 0}
        {x44891556 0}
        {xc4891554 0}
        {0 0}
        {0 xc40a5554}
        {0 x440a5555}
        {0 0}
        {xc4891554 0}
        {x44891556 0}
        {0 0}
        {0 x440a5555}}}}
     {tx x447ac000 x44eec000 x4488e000}
     {a osw x41200000 osf 0 str 1 spx x44f00000 spy x44870000 sb 1 ltn x447ac000 ltm x447ac000 tt x41000000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 tt 8 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1920 1080}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1003
 lifetime_end 1003
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto12
 xpos -1881
 ypos -207
 disable true
}
Invert {
 name Invert6
 xpos -1881
 ypos -171
 disable true
}
Blur {
 size 600
 name Blur10
 xpos -1881
 ypos -135
 disable true
}
Dot {
 name Dot16
 xpos -1847
 ypos -94
}
push $N3335e400
Dot {
 name Dot22
 xpos -1949
 ypos -248
}
Retime {
 input.last 36
 output.first 1001
 output.first_lock true
 output.last 1036
 before loop
 after loop
 time ""
 name Retime7
 xpos -1983
 ypos -193
 disable true
}
Transform {
 scale {1.824000001 1.200000048}
 center {960 540}
 name Transform11
 xpos -1983
 ypos -166
 disable true
}
Reformat {
 name Reformat9
 xpos -1983
 ypos -134
 disable true
}
Grade {
 inputs 1+1
 black 0.02
 name Grade8
 xpos -1982
 ypos -97
 disable true
}
LensDistortion2 {
 distortionDenominator0 0.25
 output Undistort
 outputBBox {381 76 3459 2084}
 featuresKnob "
version 1
entries 0
entries 0
"
 distortionModelDisplayX "xu = xd / (1 + k0 * rd^2 + k1 * rd^4)"
 distortionModelDisplayY "yu = yd / (1 + k0 * rd^2 + k1 * rd^4)"
 name LensDistortion6
 xpos -1982
 ypos -60
 disable true
}
Transform {
 scale 1.3
 center {1920 1080}
 name Transform12
 xpos -1982
 ypos -24
 disable true
}
CornerPin2D {
 to1 {2122.600098 284.3999939}
 to2 {2503 376}
 to3 {2490 852}
 to4 {2128.399902 889.7999878}
 invert false
 from1 {0 0}
 from2 {3840 0}
 from3 {3840 2160}
 from4 {0 2160}
 name CornerPin2D6
 xpos -1982
 ypos 43
 disable true
}
Merge2 {
 inputs 2
 name Merge7
 xpos -1983
 ypos 194
}
Grade {
 black {0.0700000003 0.05518027768 0.05206711963 0.9999898672}
 white {1.08032763 1.200000048 1.027425408 0.999953866}
 name Grade1
 xpos -1642
 ypos 194
}
Merge2 {
 inputs 2
 operation mask
 name Merge2
 xpos -1440
 ypos 194
}
Group {
 inputs 3
 name PxF_IDefocus
 help "Variable blur/defocus/convolve based on a control channel."
 onCreate "m = nuke.thisNode\nfl = nuke.toNode('Flare1')\n\nfl\['position'].setEnabled(False)"
 knobChanged "m = nuke.thisNode()\nkc = nuke.thisKnob()\n\n\n\nif kc.name() in \[\"filter\", \"slices\"]:\n    i = nuke.toNode('img')\n    i2 = nuke.toNode('Gamma1')\n    i3 = nuke.toNode('Switch1')\n    o = nuke.toNode('mask_keymix')    \n    \n    for n in nuke.allNodes():\n      if \"static\" not in n\['label'].getValue():\n        nuke.delete(n)\n    \n    \n    slices = int(m\['slices'].value())\n    step = int(1)\n    ii = i\n    for x in range(1,slices+step,step):\n      \n      defoExpression = 'pow(parent.size/parent.slices*' + str(x) + '/parent.size,parent.sliceGamma)*parent.size'\n      \n    \n      k = nuke.nodes.Keyer()\n      k.setInput(0, i2)\n      k\['operation'].setValue(\"red keyer\")\n      k\['range'].setExpression(\"(1/parent.slices*\" + str(x) +\")-1/parent.slices\", 0)\n      k\['range'].setExpression(\"(1/parent.slices*\" + str(x-1) + \") + (1/parent.slices*parent.overlap)\", 1)\n      k\['range'].setValue(1.0, 2)\n      k\['range'].setValue(1.0, 3)\n    \n     \n      f = m\['filter'].value()\n\n      if f == \"defocus\":\n        d = nuke.nodes.Defocus()\n        d.setInput(0, i)\n        d\['defocus'].setExpression(defoExpression)\n        d\['ratio'].setExpression('parent.aspect')\n\n      if f in \[\"box\", \"triangle\", \"quadratic\", \"gaussian\"]:\n        d = nuke.nodes.Blur()\n        d.setInput(0, i)\n        d\['size'].setSingleValue(False)\n        #d\['size'].setExpression('parent.size/parent.slices*' + str(x) + \"*parent.aspect\", 0 )\n        d\['size'].setExpression(defoExpression + '*parent.aspect' , 0)\n        #d\['size'].setExpression('parent.size/parent.slices*' + str(x), 1)\n        d\['size'].setExpression(defoExpression , 1) \n        d\['filter'].setValue(m\['filter'].value())\n\n      if f == \"bokeh\":\n        r1 = nuke.nodes.Reformat()\n        r1.setInput(0, i3)\n        r1\['type'].setValue(\"to box\")\n        r1\['box_width'].setExpression(defoExpression + \"*2 > 3 ? \" + defoExpression + \"*2 \" + \": 3\" )\n        r1\['pbb'].setValue(1)\n        \n        r15 = nuke.nodes.Reformat()\n        r15.setInput(0, r1)\n        r15\['type'].setValue(\"scale\")\n        r15\['resize'].setValue(\"deform\")\n        r15\['scale'].setSingleValue(False)\n        r15\['scale'].setValue(1,1)\n        r15\['scale'].setExpression('parent.aspect',0)\n        r15\['pbb'].setValue(1)\n        \n        t1 = nuke.nodes.Transform()\n        t1.setInput(0, r15)\n        t1\['translate'].setExpression(\"fmod(width,2)?0:0.5\", 0)\n        t1\['translate'].setExpression(\"fmod(height,2)?0:0.5\", 1)\n        \n        r2 = nuke.nodes.Reformat()\n        r2.setInput(0, t1)\n        r2\['type'].setValue(\"to box\")\n        r2\['box_width'].setExpression(\"fmod(width,2)?width:width+1\")\n        r2\['box_height'].setExpression(\"fmod(height,2)?height:height+1\")\n        r2\['resize'].setValue(\"none\")\n        r2\['pbb'].setValue(1)\n        \n        c1 = nuke.nodes.Crop()\n        c1.setInput(0,r2)\n        c1\['box'].setValue(-1,0)\n        c1\['box'].setValue(-1,1)\n        c1\['box'].setExpression('width+1',2)\n        c1\['box'].setExpression('height+1',3)\n\n        d = nuke.nodes.Convolve2()\n        d.setInput(0, i)\n        d.setInput(1, c1)\n        d\['useGPUIfAvailable'].setExpression('parent.useGPU')\n        d\['use_input_channels'].setExpression('parent.filterChannel')\n        d\['mix'].setExpression(defoExpression + \"*2 > 3 ? 1 : \" + defoExpression + \"*2/3\")\n        \n    \n        \n    \n    \n      km = nuke.nodes.Keymix()\n      km.setInput(0, ii)\n      km.setInput(1, d)\n      km.setInput(2, k)\n      km\['bbox'].setValue(\"A side\")\n    \n      ii = km\n    \n    o.setInput(0, ii)\n\n\n"
 tile_color 0x733520ff
 xpos -1257
 ypos 194
 addUserKnob {20 IDefocus}
 addUserKnob {4 filter t "box, triangle, quadratic, gaussian = Blur node\ndefocus = Defocus node\nbokeh = Convolve node. See 'bokeh' tab to customize bokeh or plug your own in the 'bokeh' input." M {box triangle quadratic gaussian defocus bokeh "" "" "" "" "" ""}}
 filter bokeh
 addUserKnob {6 useGPU l "use GPU if available" t "Enable GPU rendering on Convolve node." +STARTLINE}
 useGPU true
 addUserKnob {4 controlChannel t "Which channel of the 'map' input used to drive the defocus." M {red green blue alpha "" "" "" "" ""}}
 controlChannel alpha
 addUserKnob {7 size l "max size" t "Maximum amount of defocus (i.e when the control channel is 1.0)." R 0 100}
 size 15
 addUserKnob {7 aspect t "Aspect ratio of the kernel. Use this to simulate 'oval' bokeh from an anamorphic lens." R 0 4}
 aspect 1
 addUserKnob {3 slices t "How many slices are generated from the 'map' image. More slices are more precise, but slower."}
 slices 10
 addUserKnob {7 sliceGamma t "Adds a bias to the slices. A value of 1.0 is a linear bias (i.e. no bias). Values greater than 1.0 bias the slices so that smaller defocus values get more slices. " R 0 5}
 sliceGamma 2.58
 addUserKnob {7 overlap t "Percentage of overlap between slices. An overlap of 0 means hard slices with no soft transition. "}
 overlap 0.5
 addUserKnob {7 mix t "Dissolve between the original (0) and the full effect (1)."}
 mix 1
 addUserKnob {26 ""}
 addUserKnob {26 Credits l "" t "PxF_IDefocus 1.3.1 - &copy; 2014-2023 - Xavier Bourque - pixelfudger.com \n\nPixelfudger gizmos are free to use for personal and commercial use as long as you leave the credit text intact in the gizmo's knobs and in the source files. " +STARTLINE T "<font size=2>PxF_IDefocus 1.3.1 - &copy; 2014-2023 - </font><a href=\"http://www.xavierbourque.com\"><font color=\"#bbbbbb\" size=2>Xavier Bourque</a></font> - <a href=\"http://www.pixelfudger.com\"><font color=\"#bbbbbb\" size=2>pixelfudger.com</a></font> - <a href=\"http://www.pixelfudger.com/userguides/PxF_IDefocus.html\"><font color=\"#bbbbbb\" size=2>Video Tutorial</a></font>"}
 addUserKnob {20 Bokeh}
 addUserKnob {6 viewKernel l "view bokeh" t "View the image being used as the kernel when the filter mode is set to 'Bokeh'. Use this to see what you're doing when adjusting the kernel shape.\n\nDon't forget to turn it off when you're done!" +STARTLINE}
 addUserKnob {26 "" l "@b;Colors"}
 addUserKnob {7 ringWidth t "Thickness of the 'donut' around the edge of the kernel."}
 ringWidth 0.25
 addUserKnob {41 ring_color l "ring color" t "Color of the 'donut' around the edge of the kernel." T Flare1.ring_color}
 addUserKnob {41 inner_color l "inner color" t "Color of the center of the kernel." T Flare1.inner_color}
 addUserKnob {41 outer_falloff l "outer falloff" t "Falloff on the outer edge of the 'donut'." T Flare1.outer_falloff}
 addUserKnob {41 inner_falloff l "inner falloff" t "Falloff on the inner edge of the 'donut'." T Flare1.inner_falloff}
 addUserKnob {26 "" l "@b;Shape"}
 addUserKnob {41 corners t "How many 'blades' are in the iris." T Flare1.corners}
 addUserKnob {41 flattening l "edge flattening" t "0 = round aperture (no blades).\n1 = flat edges between corners." T Flare1.flattening}
 addUserKnob {41 sharpness l "corner sharpness" T Flare1.sharpness}
 addUserKnob {41 corners_angle l angle t "Rotate the aperture." T Flare1.corners_angle}
 addUserKnob {26 Noise l "@b;Noise"}
 addUserKnob {6 enableNoise l enable t "Add noise to the bokeh." +STARTLINE}
 enableNoise true
 addUserKnob {7 noiseSize l size R 0 50}
 noiseSize 35
 addUserKnob {7 noiseGain l gain t "Gain of the noise."}
 noiseGain 0.85
 addUserKnob {7 noiseGamma l gamma t "Gamma of the noise."}
 noiseGamma 0.85
 addUserKnob {7 noiseMix l mix t "Adjusts how much noise is present in the bokeh."}
 noiseMix 0.5
 addUserKnob {26 ChromaAb l "@b;Chroma Aberration"}
 addUserKnob {6 chromaAbEnable l enable t "Enable chroma aberration on the bokeh.\n\nMake sure to set filter channels to rgb colour." +STARTLINE}
 chromaAbEnable true
 addUserKnob {7 chromaAbScale l scale t "Amount of chroma aberration on the bokeh. 1.0 = no chroma aberration." R 0 2}
 chromaAbScale 1.02
 addUserKnob {26 ""}
 addUserKnob {4 filterChannel l "filter channel" t "When using Bokeh mode, which channels to use from the bokeh image.\n\nrgb luma: Use the RGB luminance of the bokeh input to defocus all channels.\n\nrgb colour: Use the RGB channels to defocus RGB and RGB luminance to defocus the alpha." M {"rgb luminance" "rgb colour" "" ""}}
 filterChannel "rgb colour"
}
 Input {
  inputs 0
  name bokeh
  label static
  xpos 4496
  ypos -1111
  number 2
 }
 Keyer {
  operation "luminance key"
  name Keyer4
  label static
  xpos 4496
  ypos -1028
 }
 Reformat {
  inputs 0
  type "to box"
  box_width 501
  box_height 501
  box_fixed true
  name Reformat4
  label static
  xpos 4714
  ypos -1369
 }
set N6e106c00 [stack 0]
 Noise {
  size {{parent.noiseSize i}}
  gain {{parent.noiseGain i}}
  gamma {{parent.noiseGamma i}}
  center {1440 810}
  name Noise1
  label static
  xpos 4825
  ypos -1305
 }
push $N6e106c00
 Flare {
  position {250 250}
  radius {{0 i} {"249 - (parent.ringWidth*249)" i} {249 i}}
  inner_color 0.75
  outer_falloff 0.35
  inner_falloff 10
  vis_in 0
  vis_out 1
  vis_mask_size 0
  corners 8
  flattening 0.9
  sharpness 0.99
  name Flare1
  label static
  xpos 4717
  ypos -1303
 }
 Merge2 {
  inputs 2
  operation multiply
  mix {{parent.noiseMix i}}
  name Merge1
  label static
  xpos 4717
  ypos -1232
  disable {{parent.enableNoise?0:1 i}}
 }
 Shuffle {
  alpha red
  name Shuffle2
  label static
  xpos 4717
  ypos -1153
 }
 TransformMasked {
  channels {rgba.red -rgba.green -rgba.blue none}
  scale {{parent.chromaAbScale}}
  center {250.5 250.5}
  name Transform6
  label static
  xpos 4717
  ypos -1077
  disable {{"parent.chromaAbEnable ? 0 : 1"}}
 }
 TransformMasked {
  channels {-rgba.red -rgba.green rgba.blue none}
  scale {{"1 / parent.chromaAbScale"}}
  center {250.5 250.5}
  name Transform7
  label static
  xpos 4717
  ypos -1014
  disable {{"parent.chromaAbEnable ? 0 : 1"}}
 }
 Switch {
  inputs 2
  which {{"\[exists parent.input2]" i}}
  name Switch1
  label static
  xpos 4717
  ypos -912
 }
set N3738f000 [stack 0]
 Input {
  inputs 0
  name mask
  label static
  xpos 4439
  ypos -46
  number 3
 }
 Input {
  inputs 0
  name img
  label static
  xpos 3511
  ypos -1238
 }
set N3738e400 [stack 0]
 Input {
  inputs 0
  name map
  label static
  xpos 1952
  ypos -1413
  number 1
 }
set N53e47800 [stack 0]
 Shuffle {
  red alpha
  green black
  blue black
  alpha black
  name Shuffle5
  label "static\nalpha"
  xpos 2052
  ypos -1219
 }
push $N53e47800
 Shuffle {
  red blue
  green black
  blue black
  alpha black
  name Shuffle4
  label "static\nblue"
  xpos 1957
  ypos -1220
 }
push $N53e47800
 Shuffle {
  red green
  green black
  blue black
  alpha black
  name Shuffle3
  label "static\ngreen"
  xpos 1862
  ypos -1215
 }
push $N53e47800
 Shuffle {
  green black
  blue black
  alpha black
  name Shuffle1
  label "static\nred"
  xpos 1766
  ypos -1217
 }
 Switch {
  inputs 4
  which {{parent.controlChannel i}}
  name Switch3
  label static
  xpos 1952
  ypos -1116
 }
 Gamma {
  channels rgba
  value {{parent.sliceGamma i}}
  name Gamma1
  label static
  xpos 1952
  ypos -935
 }
set N53e47c00 [stack 0]
 Keyer {
  operation "red keyer"
  range {{(1/parent.slices*10)-1/parent.slices} {"(1/parent.slices*9) + (1/parent.slices*parent.overlap)"} 1 1}
  name Keyer11
 }
push $N3738f000
 Reformat {
  type "to box"
  box_width {{"pow(parent.size/parent.slices*10/parent.size,parent.sliceGamma)*parent.size*2 > 3 ? pow(parent.size/parent.slices*10/parent.size,parent.sliceGamma)*parent.size*2 : 3"}}
  pbb true
  name Reformat29
 }
 Reformat {
  type scale
  scale {{parent.aspect} 1}
  resize distort
  pbb true
  name Reformat30
 }
 Transform {
  translate {{fmod(width,2)?0:0.5} {fmod(height,2)?0:0.5}}
  name Transform12
 }
 Reformat {
  type "to box"
  box_width {{fmod(width,2)?width:width+1}}
  box_height {{fmod(height,2)?height:height+1}}
  resize none
  pbb true
  name Reformat31
 }
 Crop {
  box {-1 -1 {width+1} {height+1}}
  name Crop10
 }
push $N3738e400
 Convolve2 {
  inputs 2
  useGPUIfAvailable {{parent.useGPU}}
  use_input_channels {{parent.filterChannel}}
  mix {{"pow(parent.size/parent.slices*10/parent.size,parent.sliceGamma)*parent.size*2 > 3 ? 1 : pow(parent.size/parent.slices*10/parent.size,parent.sliceGamma)*parent.size*2/3"}}
  name Convolve10
 }
push $N53e47c00
 Keyer {
  operation "red keyer"
  range {{(1/parent.slices*9)-1/parent.slices} {"(1/parent.slices*8) + (1/parent.slices*parent.overlap)"} 1 1}
  name Keyer10
 }
push $N3738f000
 Reformat {
  type "to box"
  box_width {{"pow(parent.size/parent.slices*9/parent.size,parent.sliceGamma)*parent.size*2 > 3 ? pow(parent.size/parent.slices*9/parent.size,parent.sliceGamma)*parent.size*2 : 3"}}
  pbb true
  name Reformat26
 }
 Reformat {
  type scale
  scale {{parent.aspect} 1}
  resize distort
  pbb true
  name Reformat27
 }
 Transform {
  translate {{fmod(width,2)?0:0.5} {fmod(height,2)?0:0.5}}
  name Transform11
 }
 Reformat {
  type "to box"
  box_width {{fmod(width,2)?width:width+1}}
  box_height {{fmod(height,2)?height:height+1}}
  resize none
  pbb true
  name Reformat28
 }
 Crop {
  box {-1 -1 {width+1} {height+1}}
  name Crop9
 }
push $N3738e400
 Convolve2 {
  inputs 2
  useGPUIfAvailable {{parent.useGPU}}
  use_input_channels {{parent.filterChannel}}
  mix {{"pow(parent.size/parent.slices*9/parent.size,parent.sliceGamma)*parent.size*2 > 3 ? 1 : pow(parent.size/parent.slices*9/parent.size,parent.sliceGamma)*parent.size*2/3"}}
  name Convolve9
 }
push $N53e47c00
 Keyer {
  operation "red keyer"
  range {{(1/parent.slices*8)-1/parent.slices} {"(1/parent.slices*7) + (1/parent.slices*parent.overlap)"} 1 1}
  name Keyer9
 }
push $N3738f000
 Reformat {
  type "to box"
  box_width {{"pow(parent.size/parent.slices*8/parent.size,parent.sliceGamma)*parent.size*2 > 3 ? pow(parent.size/parent.slices*8/parent.size,parent.sliceGamma)*parent.size*2 : 3"}}
  pbb true
  name Reformat23
 }
 Reformat {
  type scale
  scale {{parent.aspect} 1}
  resize distort
  pbb true
  name Reformat24
 }
 Transform {
  translate {{fmod(width,2)?0:0.5} {fmod(height,2)?0:0.5}}
  name Transform10
 }
 Reformat {
  type "to box"
  box_width {{fmod(width,2)?width:width+1}}
  box_height {{fmod(height,2)?height:height+1}}
  resize none
  pbb true
  name Reformat25
 }
 Crop {
  box {-1 -1 {width+1} {height+1}}
  name Crop8
 }
push $N3738e400
 Convolve2 {
  inputs 2
  useGPUIfAvailable {{parent.useGPU}}
  use_input_channels {{parent.filterChannel}}
  mix {{"pow(parent.size/parent.slices*8/parent.size,parent.sliceGamma)*parent.size*2 > 3 ? 1 : pow(parent.size/parent.slices*8/parent.size,parent.sliceGamma)*parent.size*2/3"}}
  name Convolve8
 }
push $N53e47c00
 Keyer {
  operation "red keyer"
  range {{(1/parent.slices*7)-1/parent.slices} {"(1/parent.slices*6) + (1/parent.slices*parent.overlap)"} 1 1}
  name Keyer8
 }
push $N3738f000
 Reformat {
  type "to box"
  box_width {{"pow(parent.size/parent.slices*7/parent.size,parent.sliceGamma)*parent.size*2 > 3 ? pow(parent.size/parent.slices*7/parent.size,parent.sliceGamma)*parent.size*2 : 3"}}
  pbb true
  name Reformat20
 }
 Reformat {
  type scale
  scale {{parent.aspect} 1}
  resize distort
  pbb true
  name Reformat21
 }
 Transform {
  translate {{fmod(width,2)?0:0.5} {fmod(height,2)?0:0.5}}
  name Transform9
 }
 Reformat {
  type "to box"
  box_width {{fmod(width,2)?width:width+1}}
  box_height {{fmod(height,2)?height:height+1}}
  resize none
  pbb true
  name Reformat22
 }
 Crop {
  box {-1 -1 {width+1} {height+1}}
  name Crop7
 }
push $N3738e400
 Convolve2 {
  inputs 2
  useGPUIfAvailable {{parent.useGPU}}
  use_input_channels {{parent.filterChannel}}
  mix {{"pow(parent.size/parent.slices*7/parent.size,parent.sliceGamma)*parent.size*2 > 3 ? 1 : pow(parent.size/parent.slices*7/parent.size,parent.sliceGamma)*parent.size*2/3"}}
  name Convolve7
 }
push $N53e47c00
 Keyer {
  operation "red keyer"
  range {{(1/parent.slices*6)-1/parent.slices} {"(1/parent.slices*5) + (1/parent.slices*parent.overlap)"} 1 1}
  name Keyer7
 }
push $N3738f000
 Reformat {
  type "to box"
  box_width {{"pow(parent.size/parent.slices*6/parent.size,parent.sliceGamma)*parent.size*2 > 3 ? pow(parent.size/parent.slices*6/parent.size,parent.sliceGamma)*parent.size*2 : 3"}}
  pbb true
  name Reformat17
 }
 Reformat {
  type scale
  scale {{parent.aspect} 1}
  resize distort
  pbb true
  name Reformat18
 }
 Transform {
  translate {{fmod(width,2)?0:0.5} {fmod(height,2)?0:0.5}}
  name Transform8
 }
 Reformat {
  type "to box"
  box_width {{fmod(width,2)?width:width+1}}
  box_height {{fmod(height,2)?height:height+1}}
  resize none
  pbb true
  name Reformat19
 }
 Crop {
  box {-1 -1 {width+1} {height+1}}
  name Crop6
 }
push $N3738e400
 Convolve2 {
  inputs 2
  useGPUIfAvailable {{parent.useGPU}}
  use_input_channels {{parent.filterChannel}}
  mix {{"pow(parent.size/parent.slices*6/parent.size,parent.sliceGamma)*parent.size*2 > 3 ? 1 : pow(parent.size/parent.slices*6/parent.size,parent.sliceGamma)*parent.size*2/3"}}
  name Convolve6
 }
push $N53e47c00
 Keyer {
  operation "red keyer"
  range {{(1/parent.slices*5)-1/parent.slices} {"(1/parent.slices*4) + (1/parent.slices*parent.overlap)"} 1 1}
  name Keyer6
 }
push $N3738f000
 Reformat {
  type "to box"
  box_width {{"pow(parent.size/parent.slices*5/parent.size,parent.sliceGamma)*parent.size*2 > 3 ? pow(parent.size/parent.slices*5/parent.size,parent.sliceGamma)*parent.size*2 : 3"}}
  pbb true
  name Reformat14
 }
 Reformat {
  type scale
  scale {{parent.aspect} 1}
  resize distort
  pbb true
  name Reformat15
 }
 Transform {
  translate {{fmod(width,2)?0:0.5} {fmod(height,2)?0:0.5}}
  name Transform5
 }
 Reformat {
  type "to box"
  box_width {{fmod(width,2)?width:width+1}}
  box_height {{fmod(height,2)?height:height+1}}
  resize none
  pbb true
  name Reformat16
 }
 Crop {
  box {-1 -1 {width+1} {height+1}}
  name Crop5
 }
push $N3738e400
 Convolve2 {
  inputs 2
  useGPUIfAvailable {{parent.useGPU}}
  use_input_channels {{parent.filterChannel}}
  mix {{"pow(parent.size/parent.slices*5/parent.size,parent.sliceGamma)*parent.size*2 > 3 ? 1 : pow(parent.size/parent.slices*5/parent.size,parent.sliceGamma)*parent.size*2/3"}}
  name Convolve5
 }
push $N53e47c00
 Keyer {
  operation "red keyer"
  range {{(1/parent.slices*4)-1/parent.slices} {"(1/parent.slices*3) + (1/parent.slices*parent.overlap)"} 1 1}
  name Keyer5
 }
push $N3738f000
 Reformat {
  type "to box"
  box_width {{"pow(parent.size/parent.slices*4/parent.size,parent.sliceGamma)*parent.size*2 > 3 ? pow(parent.size/parent.slices*4/parent.size,parent.sliceGamma)*parent.size*2 : 3"}}
  pbb true
  name Reformat11
 }
 Reformat {
  type scale
  scale {{parent.aspect} 1}
  resize distort
  pbb true
  name Reformat12
 }
 Transform {
  translate {{fmod(width,2)?0:0.5} {fmod(height,2)?0:0.5}}
  name Transform4
 }
 Reformat {
  type "to box"
  box_width {{fmod(width,2)?width:width+1}}
  box_height {{fmod(height,2)?height:height+1}}
  resize none
  pbb true
  name Reformat13
 }
 Crop {
  box {-1 -1 {width+1} {height+1}}
  name Crop4
 }
push $N3738e400
 Convolve2 {
  inputs 2
  useGPUIfAvailable {{parent.useGPU}}
  use_input_channels {{parent.filterChannel}}
  mix {{"pow(parent.size/parent.slices*4/parent.size,parent.sliceGamma)*parent.size*2 > 3 ? 1 : pow(parent.size/parent.slices*4/parent.size,parent.sliceGamma)*parent.size*2/3"}}
  name Convolve4
 }
push $N53e47c00
 Keyer {
  operation "red keyer"
  range {{(1/parent.slices*3)-1/parent.slices} {"(1/parent.slices*2) + (1/parent.slices*parent.overlap)"} 1 1}
  name Keyer3
 }
push $N3738f000
 Reformat {
  type "to box"
  box_width {{"pow(parent.size/parent.slices*3/parent.size,parent.sliceGamma)*parent.size*2 > 3 ? pow(parent.size/parent.slices*3/parent.size,parent.sliceGamma)*parent.size*2 : 3"}}
  pbb true
  name Reformat8
 }
 Reformat {
  type scale
  scale {{parent.aspect} 1}
  resize distort
  pbb true
  name Reformat9
 }
 Transform {
  translate {{fmod(width,2)?0:0.5} {fmod(height,2)?0:0.5}}
  name Transform3
 }
 Reformat {
  type "to box"
  box_width {{fmod(width,2)?width:width+1}}
  box_height {{fmod(height,2)?height:height+1}}
  resize none
  pbb true
  name Reformat10
 }
 Crop {
  box {-1 -1 {width+1} {height+1}}
  name Crop3
 }
push $N3738e400
 Convolve2 {
  inputs 2
  useGPUIfAvailable {{parent.useGPU}}
  use_input_channels {{parent.filterChannel}}
  mix {{"pow(parent.size/parent.slices*3/parent.size,parent.sliceGamma)*parent.size*2 > 3 ? 1 : pow(parent.size/parent.slices*3/parent.size,parent.sliceGamma)*parent.size*2/3"}}
  name Convolve3
 }
push $N53e47c00
 Keyer {
  operation "red keyer"
  range {{(1/parent.slices*2)-1/parent.slices} {"(1/parent.slices*1) + (1/parent.slices*parent.overlap)"} 1 1}
  name Keyer2
 }
push $N3738f000
 Reformat {
  type "to box"
  box_width {{"pow(parent.size/parent.slices*2/parent.size,parent.sliceGamma)*parent.size*2 > 3 ? pow(parent.size/parent.slices*2/parent.size,parent.sliceGamma)*parent.size*2 : 3"}}
  pbb true
  name Reformat5
 }
 Reformat {
  type scale
  scale {{parent.aspect} 1}
  resize distort
  pbb true
  name Reformat6
 }
 Transform {
  translate {{fmod(width,2)?0:0.5} {fmod(height,2)?0:0.5}}
  name Transform2
 }
 Reformat {
  type "to box"
  box_width {{fmod(width,2)?width:width+1}}
  box_height {{fmod(height,2)?height:height+1}}
  resize none
  pbb true
  name Reformat7
 }
 Crop {
  box {-1 -1 {width+1} {height+1}}
  name Crop2
 }
push $N3738e400
 Convolve2 {
  inputs 2
  useGPUIfAvailable {{parent.useGPU}}
  use_input_channels {{parent.filterChannel}}
  mix {{"pow(parent.size/parent.slices*2/parent.size,parent.sliceGamma)*parent.size*2 > 3 ? 1 : pow(parent.size/parent.slices*2/parent.size,parent.sliceGamma)*parent.size*2/3"}}
  name Convolve2
 }
push $N53e47c00
 Keyer {
  operation "red keyer"
  range {{(1/parent.slices*1)-1/parent.slices} {"(1/parent.slices*0) + (1/parent.slices*parent.overlap)"} 1 1}
  name Keyer1
 }
push $N3738f000
 Reformat {
  type "to box"
  box_width {{"pow(parent.size/parent.slices*1/parent.size,parent.sliceGamma)*parent.size*2 > 3 ? pow(parent.size/parent.slices*1/parent.size,parent.sliceGamma)*parent.size*2 : 3"}}
  pbb true
  name Reformat1
 }
 Reformat {
  type scale
  scale {{parent.aspect} 1}
  resize distort
  pbb true
  name Reformat2
 }
 Transform {
  translate {{fmod(width,2)?0:0.5} {fmod(height,2)?0:0.5}}
  name Transform1
 }
 Reformat {
  type "to box"
  box_width {{fmod(width,2)?width:width+1}}
  box_height {{fmod(height,2)?height:height+1}}
  resize none
  pbb true
  name Reformat3
 }
 Crop {
  box {-1 -1 {width+1} {height+1}}
  name Crop1
 }
push $N3738e400
 Convolve2 {
  inputs 2
  useGPUIfAvailable {{parent.useGPU}}
  use_input_channels {{parent.filterChannel}}
  mix {{"pow(parent.size/parent.slices*1/parent.size,parent.sliceGamma)*parent.size*2 > 3 ? 1 : pow(parent.size/parent.slices*1/parent.size,parent.sliceGamma)*parent.size*2/3"}}
  name Convolve1
 }
push $N3738e400
 Keymix {
  inputs 3
  bbox A
  name Keymix1
 }
 Keymix {
  inputs 3
  bbox A
  name Keymix2
 }
 Keymix {
  inputs 3
  bbox A
  name Keymix3
 }
 Keymix {
  inputs 3
  bbox A
  name Keymix4
 }
 Keymix {
  inputs 3
  bbox A
  name Keymix5
 }
 Keymix {
  inputs 3
  bbox A
  name Keymix6
 }
 Keymix {
  inputs 3
  bbox A
  name Keymix7
 }
 Keymix {
  inputs 3
  bbox A
  name Keymix8
 }
 Keymix {
  inputs 3
  bbox A
  name Keymix9
 }
 Keymix {
  inputs 3
  bbox A
  name Keymix10
 }
 Keymix {
  inputs 3
  invertMask true
  bbox B
  name mask_keymix
  label static
  xpos 4061
  ypos -34
  disable {{"\[exists parent.input3] ? 0 : 1" x1 0}}
 }
push $N3738e400
 Dissolve {
  inputs 2
  which {{parent.mix}}
  name Dissolve1
  label static
  xpos 4061
  ypos 86
 }
 Switch {
  inputs 2
  which {{parent.viewKernel i}}
  name Switch2
  label static
  xpos 4060
  ypos 203
 }
 Output {
  name Output1
  label static
  xpos 4060
  ypos 275
 }
end_group
Crop {
 box {0 0 3840 2160}
 name Crop1
 xpos -1050
 ypos 194
}
Dot {
 name Dot7
 xpos -730
 ypos 197
}
set N13a9d800 [stack 0]
Group {
 name ExponentialGlow1
 tile_color 0xcc804eff
 label v6
 note_font "Bitstream Vera Sans"
 xpos -764
 ypos 910
 mapsize {0.15 0.15}
 addUserKnob {20 User l "Exponential Glow"}
 addUserKnob {41 falloff l Falloff T ExpoGlow.falloff}
 addUserKnob {7 intensity l Intensity R 0 10}
 intensity 0.2
 addUserKnob {41 blur_amount l Size T ExpoGlow.blur_amount}
 addUserKnob {7 Tolerance}
 addUserKnob {41 add_source l "Add Source" T ExpoGlow.add_source}
 addUserKnob {26 info l INVISIBLE +INVISIBLE T "Ported from Shake by brad-f"}
 addUserKnob {6 CroptoFormat l "Crop to Format" -STARTLINE}
 CroptoFormat true
 addUserKnob {7 AspectRatio R 0.1 2}
 AspectRatio 1
 addUserKnob {41 scale l Pre-Overscan T Overscan.scale}
 addUserKnob {6 FadeAroundFormat l "Fade Around Format" +STARTLINE}
 FadeAroundFormat true
 addUserKnob {7 FadeSize l "Fade Size" R 0 3}
 FadeSize 0.5
}
 Input {
  inputs 0
  name Input1
  xpos -490
  ypos -732
 }
 Reformat {
  type scale
  resize none
  name Format
  xpos -490
  ypos -683
 }
 Dot {
  name Dot1
  label OverscanR
  xpos -456
  ypos -648
 }
 Reformat {
  type scale
  scale 1.1
  resize none
  name Overscan
  xpos -490
  ypos -622
 }
 NoOp {
  name ExpoGlow
  xpos -490
  ypos -588
  addUserKnob {20 User}
  addUserKnob {7 falloff l Falloff R 0 2}
  falloff 0.51
  addUserKnob {7 intensity l Intensity R 0 5}
  intensity {{parent.intensity*10 i}}
  addUserKnob {7 blur_amount l Size R 0 5}
  blur_amount 0.03
  addUserKnob {6 add_source l "Add Source" +STARTLINE}
  addUserKnob {6 add_bbox l "Add original bbox" +STARTLINE}
 }
set N13af3400 [stack 0]
 Dot {
  name Dot12
  xpos -371
  ypos -584
 }
set N13af3800 [stack 0]
 Saturation {
  saturation 0
  mode Maximum
  name SaturationT
  xpos -316
  ypos -588
 }
 Keyer {
  operation "luminance key"
  range {{parent.Tolerance} 1 1 1}
  name KeyerT
  xpos -316
  ypos -562
 }
push $N13af3800
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name CopyT
  xpos -316
  ypos -524
 }
 Premult {
  name PremultT
  xpos -316
  ypos -486
 }
 Grade {
  channels rgba
  gamma 2
  black_clamp false
  name GradeT
  xpos -316
  ypos -460
 }
 Keyer {
  operation "luminance key"
  name Keyer1
  xpos -316
  ypos -427
 }
 Premult {
  name Premult1
  xpos -316
  ypos -389
 }
 Remove {
  operation keep
  channels rgb
  name Remove1
  xpos -316
  ypos -363
 }
 Rectangle {
  invert true
  area {{width} {height} 0 0}
  softness {{parent.FadeSize*100}}
  color 0
  name RectangleFade
  xpos -316
  ypos -337
  disable {{1-parent.FadeAroundFormat}}
 }
 Grade {
  white {{ExpoGlow.intensity/100}}
  name Grade1
  xpos -316
  ypos -296
 }
 Dot {
  name Dot3
  xpos -146
  ypos -292
 }
set N13b4c400 [stack 0]
 Dot {
  name Dot2
  xpos -36
  ypos -292
 }
set N13b4c800 [stack 0]
 Dot {
  name Dot4
  xpos 84
  ypos -292
 }
set N13b4cc00 [stack 0]
 Dot {
  name Dot5
  xpos 194
  ypos -292
 }
set N13b4d000 [stack 0]
 Dot {
  name Dot6
  xpos 304
  ypos -292
 }
set N13b4d400 [stack 0]
 Dot {
  name Dot7
  xpos 414
  ypos -292
 }
set N13b4d800 [stack 0]
 Dot {
  name Dot8
  xpos 524
  ypos -292
 }
set N13b4dc00 [stack 0]
 Dot {
  name Dot9
  xpos 631
  ypos -292
 }
set N13b6c000 [stack 0]
 Dot {
  name Dot10
  xpos 741
  ypos -292
 }
 Group {
  name Blur8
  xpos 707
  ypos 235
  addUserKnob {20 percentBlur l "Percent Blur"}
  addUserKnob {41 xpercent l xPercent T Blur120.xpercent}
  addUserKnob {41 ypercent l yPercent T Blur120.ypercent}
 }
  Input {
   inputs 0
   name Input1
   xpos 514
   ypos -229
  }
  Blur {
   channels rgb
   size {{width/3*(xpercent/100) x1001 6.826666667e+10} {height/3*(ypercent/100)*(1/AspectRatio)}}
   crop false
   name Blur120
   xpos 514
   ypos -176
   addUserKnob {20 User}
   addUserKnob {7 xpercent l xPercent R 0 100}
   xpercent {{Blur7.xpercent*2}}
   addUserKnob {7 ypercent l yPercent R 0 100}
   ypercent {{xpercent/format.pixel_aspect/height*width}}
  }
  Output {
   name Output1
   xpos 514
   ypos -89
  }
 end_group
 Multiply {
  channels rgb
  value {{Multiply8.value/ExpoGlow.falloff i}}
  name Multiply9
  xpos -289
  ypos 235
 }
push $N13b6c000
 Group {
  name Blur7
  xpos 597
  ypos 193
  addUserKnob {20 percentBlur l "Percent Blur"}
  addUserKnob {41 xpercent l xPercent T Blur120.xpercent}
  addUserKnob {41 ypercent l yPercent T Blur120.ypercent}
 }
  Input {
   inputs 0
   name Input1
   xpos 514
   ypos -229
  }
  Blur {
   channels rgb
   size {{width/3*(xpercent/100) x1001 6.826666667e+10} {height/3*(ypercent/100)*(1/AspectRatio)}}
   crop false
   name Blur120
   selected true
   xpos 514
   ypos -164
   addUserKnob {20 User}
   addUserKnob {7 xpercent l xPercent R 0 100}
   xpercent {{Blur6.xpercent*2}}
   addUserKnob {7 ypercent l yPercent R 0 100}
   ypercent {{xpercent/format.pixel_aspect/height*width}}
  }
  Output {
   name Output1
   xpos 514
   ypos -89
  }
 end_group
 Multiply {
  channels rgb
  value {{Multiply7.value/ExpoGlow.falloff i}}
  name Multiply8
  xpos -289
  ypos 194
 }
push $N13b4dc00
 Group {
  name Blur6
  xpos 490
  ypos 155
  addUserKnob {20 percentBlur l "Percent Blur"}
  addUserKnob {41 xpercent l xPercent T Blur120.xpercent}
  addUserKnob {41 ypercent l yPercent T Blur120.ypercent}
 }
  Input {
   inputs 0
   name Input1
   xpos 514
   ypos -229
  }
  Blur {
   channels rgb
   size {{width/3*(xpercent/100) x1001 6.826666667e+10} {height/3*(ypercent/100)*(1/AspectRatio)}}
   crop false
   name Blur120
   selected true
   xpos 514
   ypos -185
   addUserKnob {20 User}
   addUserKnob {7 xpercent l xPercent R 0 100}
   xpercent {{Blur5.xpercent*2}}
   addUserKnob {7 ypercent l yPercent R 0 100}
   ypercent {{xpercent/format.pixel_aspect/height*width}}
  }
  Output {
   name Output1
   xpos 514
   ypos -89
  }
 end_group
 Multiply {
  channels rgb
  value {{Multiply6.value/ExpoGlow.falloff i}}
  name Multiply7
  xpos -290
  ypos 155
 }
push $N13b4d800
 Group {
  name Blur5
  xpos 380
  ypos 116
  addUserKnob {20 percentBlur l "Percent Blur"}
  addUserKnob {41 xpercent l xPercent T Blur120.xpercent}
  addUserKnob {41 ypercent l yPercent T Blur120.ypercent}
 }
  Input {
   inputs 0
   name Input1
   xpos 514
   ypos -229
  }
  Blur {
   channels rgb
   size {{width/3*(xpercent/100) x1001 6.826666667e+10} {height/3*(ypercent/100)*(1/AspectRatio)}}
   crop false
   name Blur120
   selected true
   xpos 514
   ypos -172
   addUserKnob {20 User}
   addUserKnob {7 xpercent l xPercent R 0 100}
   xpercent {{Blur4.xpercent*2}}
   addUserKnob {7 ypercent l yPercent R 0 100}
   ypercent {{xpercent/format.pixel_aspect/height*width}}
  }
  Output {
   name Output1
   xpos 514
   ypos -89
  }
 end_group
 Multiply {
  channels rgb
  value {{Multiply5.value/ExpoGlow.falloff i}}
  name Multiply6
  xpos -290
  ypos 116
 }
push $N13b4d400
 Group {
  name Blur4
  xpos 270
  ypos 77
  addUserKnob {20 percentBlur l "Percent Blur"}
  addUserKnob {41 xpercent l xPercent T Blur120.xpercent}
  addUserKnob {41 ypercent l yPercent T Blur120.ypercent}
 }
  Input {
   inputs 0
   name Input1
   xpos 514
   ypos -229
  }
  Blur {
   channels rgb
   size {{width/3*(xpercent/100) x1001 6.826666667e+10} {height/3*(ypercent/100)*(1/AspectRatio)}}
   crop false
   name Blur120
   selected true
   xpos 514
   ypos -179
   addUserKnob {20 User}
   addUserKnob {7 xpercent l xPercent R 0 100}
   xpercent {{Blur3.xpercent*2}}
   addUserKnob {7 ypercent l yPercent R 0 100}
   ypercent {{xpercent/format.pixel_aspect/height*width}}
  }
  Output {
   name Output1
   xpos 514
   ypos -89
  }
 end_group
 Multiply {
  channels rgb
  value {{Multiply4.value/ExpoGlow.falloff i}}
  name Multiply5
  xpos -292
  ypos 77
 }
push $N13b4d000
 Group {
  name Blur3
  xpos 160
  ypos 42
  addUserKnob {20 percentBlur l "Percent Blur"}
  addUserKnob {41 xpercent l xPercent T Blur120.xpercent}
  addUserKnob {41 ypercent l yPercent T Blur120.ypercent}
 }
  Input {
   inputs 0
   name Input1
   xpos 514
   ypos -229
  }
  Blur {
   channels rgb
   size {{width/3*(xpercent/100) i x1001 6.826666667e+10} {height/3*(ypercent/100)*(1/AspectRatio) i}}
   crop false
   name Blur120
   selected true
   xpos 514
   ypos -189
   addUserKnob {20 User}
   addUserKnob {7 xpercent l xPercent R 0 100}
   xpercent {{Blur2.xpercent*2 i}}
   addUserKnob {7 ypercent l yPercent R 0 100}
   ypercent {{xpercent/format.pixel_aspect/height*width i}}
  }
  Output {
   name Output1
   xpos 514
   ypos -89
  }
 end_group
 Multiply {
  channels rgb
  value {{Multiply3.value/ExpoGlow.falloff i}}
  name Multiply4
  xpos -291
  ypos 42
 }
push $N13b4cc00
 Group {
  name Blur2
  xpos 50
  ypos 5
  addUserKnob {20 percentBlur l "Percent Blur"}
  addUserKnob {41 xpercent l xPercent T Blur120.xpercent}
  addUserKnob {41 ypercent l yPercent T Blur120.ypercent}
 }
  Input {
   inputs 0
   name Input1
   xpos 514
   ypos -229
  }
  Blur {
   channels rgb
   size {{width/3*(xpercent/100) i x1001 6.826666667e+10} {height/3*(ypercent/100)*(1/AspectRatio) i}}
   crop false
   name Blur120
   selected true
   xpos 514
   ypos -184
   addUserKnob {20 User}
   addUserKnob {7 xpercent l xPercent R 0 100}
   xpercent {{Blur1.xpercent*2 i}}
   addUserKnob {7 ypercent l yPercent R 0 100}
   ypercent {{xpercent/format.pixel_aspect/height*width i}}
  }
  Output {
   name Output1
   xpos 514
   ypos -89
  }
 end_group
 Multiply {
  channels rgb
  value {{Multiply2.value/ExpoGlow.falloff i}}
  name Multiply3
  xpos -292
  ypos 5
 }
push $N13b4c800
 Group {
  name Blur1
  xpos -70
  ypos -35
  addUserKnob {20 percentBlur l "Percent Blur"}
  addUserKnob {41 xpercent l xPercent T Blur120.xpercent}
  addUserKnob {41 ypercent l yPercent T Blur120.ypercent}
 }
  Input {
   inputs 0
   name Input1
   xpos 514
   ypos -229
  }
  Blur {
   channels rgb
   size {{width/3*(xpercent/100) i x1001 6.826666667e+10} {height/3*(ypercent/100)*(1/AspectRatio) i}}
   crop false
   name Blur120
   selected true
   xpos 514
   ypos -189
   addUserKnob {20 User}
   addUserKnob {7 xpercent l xPercent R 0 100}
   xpercent {{Blur.xpercent*2 i}}
   addUserKnob {7 ypercent l yPercent R 0 100}
   ypercent {{xpercent/format.pixel_aspect/height*width i}}
  }
  Output {
   name Output1
   xpos 514
   ypos -89
  }
 end_group
 Multiply {
  channels rgb
  value {{Multiply1.value/ExpoGlow.falloff i}}
  name Multiply2
  xpos -293
  ypos -36
 }
push $N13af3400
push $N13b4c400
 Group {
  name Blur
  xpos -180
  ypos -76
  addUserKnob {20 percentBlur l "Percent Blur"}
  addUserKnob {41 xpercent l xPercent T Blur120.xpercent}
  addUserKnob {41 ypercent l yPercent T Blur120.ypercent}
 }
  Input {
   inputs 0
   name Input1
   xpos 514
   ypos -229
  }
  Blur {
   channels rgb
   size {{width/3*(xpercent/100) x1001 6.826666667e+10} {height/3*(ypercent/100)*(1/AspectRatio)}}
   crop false
   name Blur120
   xpos 514
   ypos -175
   addUserKnob {20 User}
   addUserKnob {7 xpercent l xPercent R 0 100}
   xpercent {{ExpoGlow.blur_amount}}
   addUserKnob {7 ypercent l yPercent R 0 100}
   ypercent {{xpercent/format.pixel_aspect/height*width}}
  }
  Output {
   name Output1
   xpos 514
   ypos -89
  }
 end_group
 Multiply {
  channels rgb
  name Multiply1
  xpos -290
  ypos -76
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge1
  xpos -430
  ypos -76
  disable {{!ExpoGlow.add_source}}
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge2
  xpos -430
  ypos -36
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge3
  xpos -430
  ypos 5
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge4
  xpos -430
  ypos 42
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge5
  xpos -430
  ypos 78
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge6
  xpos -430
  ypos 116
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge7
  xpos -430
  ypos 155
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge8
  xpos -430
  ypos 194
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge9
  xpos -430
  ypos 235
 }
 Grade {
  black_clamp false
  name breakConcatenation
  xpos -484
  ypos 305
 }
 Reformat {
  type "to box"
  box_width {{Format.width}}
  box_height {{Format.height}}
  resize none
  pbb {{1-parent.CroptoFormat}}
  name Reformat1
  xpos -484
  ypos 345
 }
 Output {
  name Output1
  xpos -484
  ypos 383
 }
end_group
Grade {
 white {1.080000043 0.449895829 0.1944000125 1}
 name Grade9
 xpos -643
 ypos 916
}
push $N125a1800
Blur {
 size 30
 name Blur2
 xpos -1050
 ypos 504
}
push $N125a1000
Dot {
 name Dot1
 xpos -3574
 ypos 825
}
EdgeBlur {
 size 26.5
 name EdgeBlur1
 xpos -3464
 ypos 816
}
Dot {
 name Dot27
 xpos -233
 ypos 825
}
Roto {
 inputs 0
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x44818000
        {x42300000 x43140000}
        {x44cb0000 x4505a000}
        {xc2300000 xc3140000}
        {xc3340000 x42700000}
        {x44c17fff x44af999a}
        {x43340000 xc2700000}
        {xc0000000 xc35a0000}
        {x452a6000 x44d1c000}
        {x40000000 x435a0000}
        {x43d60000 xc1d00000}
        {x451e4000 x450de000}
        {xc3d60000 x41d00000}}}     idem}
     {tx x44818000 x45047800 x44eff000}
     {a osw x41200000 osf 0 str 1 spx x44f00000 spy x44870000 sb 1 ltn x44818000 ltm x44818000 tt x40800000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1920 1080}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1036
 lifetime_end 1036
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto13
 xpos -506
 ypos -53
}
push $N13d3d000
push $N13d3d400
Read {
 inputs 0
 file_type exr
 file C:/3D_Temp/PP/Footage/TV_008/V1-0008_TV_%05d.exr
 format "3840 2160 0 0 3840 2160 1 UHD_4K"
 first 86542
 last 86617
 origfirst 86542
 origlast 86617
 origset true
 name Read9
 xpos -392
 ypos -281
}
Read {
 inputs 0
 file_type exr
 file C:/3D_Temp/PP/Footage/TV_006/V1-0006_TV_%05d.exr
 format "3840 2160 0 0 3840 2160 1 UHD_4K"
 first 86499
 last 86514
 origfirst 86499
 origlast 86514
 origset true
 name Read1
 xpos -602
 ypos -280
}
set N13d3dc00 [stack 0]
Read {
 inputs 0
 file_type exr
 file C:/3D_Temp/PP/Footage/TV_003/V1-0003_TV_%05d.exr
 format "3840 2160 0 0 3840 2160 1 UHD_4K"
 first 86374
 last 86432
 origfirst 86374
 origlast 86432
 origset true
 name Read8
 xpos -603
 ypos -163
}
set N13d9c000 [stack 0]
Switch {
 inputs 5
 which 4
 name Switch1
 xpos -392
 ypos -133
}
Retime {
 input.first 86374
 input.last 86432
 output.first 1001
 output.first_lock true
 output.last 1059
 time ""
 name Retime1
 xpos -391
 ypos -100
}
Group {
 inputs 2
 name apDespill
 help "apDespill v2.0 by Adrian Pueyo\n\nGizmo to despill an image, with options to despill any hue (and not only the primaries), select different algorithms for de/respilling, and protect tones from the despill.\n\nIf you just want a basic despill, its default values should already be enough and the tool will avoid any extra calculations.\n\nv2 includes a new \"absolute\" mode which lets you basically perform a key, or do a \"despill to color\" operation. Also, the despill color, respill color and limit can now be plugged as image inputs if you wish, letting you perform a fully image-based despill or key, sort of iKeylight. Additionally, it allows you to perform the despill under a colorspace sandwich, for the artists who prefer to loop through different colorspaces in order to find one that works. Thanks to Tony Lyons the best feedback!\n\nadrianpueyo.com, 2014-2021"
 onCreate "n = nuke.thisNode()\nn\['tolerance'].setRange(0,2)\nn\['prot1_tolerance'].setFlag(0x00000004)\nn\['prot1_effect'].setFlag(0x00000004)"
 knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\nkn = k.name()\nif kn == \"color\":\n    kv = k.getValue()\n    custom_weight_labels = \[\"green - blue\", \"red - blue\", \"red - green\", \" \"]\n    n\[\"custom_weight\"].setLabel(custom_weight_labels\[int(kv)])\n    n\[\"pick\"].setVisible(k.getValue() == 3)\nelif kn == \"mode\":\n    n\[\"custom_weight\"].setVisible(n\[\"mode\"].getValue()==3)\nelif kn in \[\"out\",\"output_alpha\"]:\n    n\[\"respill_math\"].setEnabled(n\[\"out\"].getValue()==0 or n\[\"output_alpha\"].getValue()==1)\n    n\[\"respill_color\"].setEnabled(n\[\"out\"].getValue()==0)\n    n\[\"inverted_spill_matte\"].setEnabled(n\[\"output_alpha\"].value())\nelif kn == \"prot1_activate\":\n    protA = n\[\"prot1_activate\"].value()\n    n\[\"prot1_preview\"].setEnabled(protA)\n    for i in \[\"prot1\", \"prot1_tolerance\", \"prot1_falloff\",\"prot1_effect\"]:\n        n\[i].setVisible(protA)\nelif kn == \"inputChange\":\n    n.knobs()\[\"limit_channel\"].setVisible(n.input(3) is not None)\n    n.knobs()\[\"invert_limit_channel\"].setVisible(n.input(3) is not None)\n    color_enabled = nuke.toNode(\"apDespillKernel\")\[\"apDespillKernel_use_color_input\"].getValue()==0\n    n\[\"color\"].setEnabled(color_enabled)\n    n.knobs()\[\"pick\"].setEnabled(color_enabled)\n    n\[\"info_using_input_color\"].setVisible(not color_enabled)\nelif kn == \"colorspace_shift\":\n    kv = k.value()\n    for i in \[\"colorspace_out\", \"illuminant_out\", \"primary_out\"]:\n        n.knobs()\[i].setEnabled(kv)\n    for i in \[\"colorspace_in\", \"illuminant_in\", \"primary_in\"]:\n        n.knobs()\[i].setEnabled(kv and n\[\"input_colorspace\"].value())\n    n\[\"input_colorspace\"].setEnabled(kv)\nelif kn == \"input_colorspace\":\n    kv = k.value()\n    for i in \[\"colorspace_in\", \"illuminant_in\", \"primary_in\"]:\n        n.knobs()\[i].setVisible(kv)\n        n.knobs()\[i].setEnabled(kv)\nelif kn == \"imagebased\":\n    kv = k.value()\n    input_names = \[\"color\",\"limit\",\"respill\"]\n    if kv:\n        for i_name in input_names:\n            i_fullname = \"Input\"+i_name\n            if not nuke.exists(i_fullname):\n                i_node = nuke.nodes.Input()\n                i_node\[\"name\"].setValue(i_fullname)\n            else:\n                i_node = nuke.toNode(i_fullname)\n            dot = nuke.toNode(\"Dot\"+i_name)\n            i_node.setXYpos(dot.xpos(),dot.ypos()-40)\n            dot.setInput(0,i_node)\n    else:\n        # If something connected, do nothing\n        if not any(\[n.input(i) for i in \[2,3,4]]):\n            for i_name in input_names:\n                if nuke.exists(\"Input\"+i_name):\n                    nuke.delete(nuke.toNode(\"Input\"+i_name))\n        else:\n            k.setValue(True)"
 tile_color 0x8b8b8bff
 xpos -391
 ypos -47
 addUserKnob {20 apDespill}
 addUserKnob {6 pick_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 imagebased l image-based t "Show or hide image-based inputs.\n\nThis doesn't change anything internally except hiding inputs, just to avoid intimidating arrows on the node graph.\n\nNote: While any image-based input is connected, this won't let you hide them." +STARTLINE}
 addUserKnob {6 absolute_mode l "absolute mode" t "Absolute mode performs a keying algorithm instead of a regular despill, so that you can do a \"spill to colour\" or even use this node as an image-based Keylight." -STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {4 color t "Select a primary as a starting point, or custom to show RGB controls to select any color.\n\nNote: If an image is plugged on the color input, this will get overwritten by the input." M {red green blue custom "" "" ""}}
 color custom
 addUserKnob {26 info_using_input_color l " " -STARTLINE +HIDDEN T "<i><font color=#AAA> (Using color from input)"}
 addUserKnob {18 pick t "Pick the color you'd like to use for the despill. \n\nPlease use ctrl/cmd+alt+click for picking.\n\nNOTE: If a despill color image input is plugged, this value will be ignored."}
 pick {0.01208538841 0.04410633817 0.07612729818}
 addUserKnob {6 pick_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 pick_panelDropped true
 addUserKnob {6 dfg_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {4 out l output t "Quick switch to output the despilled image or the substracted one." M {despill spill}}
 addUserKnob {6 output_alpha l "output spill matte in alpha" t "Output the spill luminance in the alpha channel." +STARTLINE}
 output_alpha true
 addUserKnob {6 inverted_spill_matte l inverted t "Invert the output spill matte (in the alpha channel), especially useful when the despill is set to Absolute mode, in which case this will output a keying-like alpha." -STARTLINE}
 inverted_spill_matte true
 addUserKnob {4 mode l "despill math" t "average = avg of other two channels\nmaximum = max of other two channels\nminimum = min of other two channels\ncustom = select custom weights" M {average maximum minimum custom ""}}
 addUserKnob {7 custom_weight l " " t "-1 = only capped by the first channel\n0 = capped by avg of both\n1 = only capped by the second channel" -STARTLINE +HIDDEN R -1 1}
 addUserKnob {26 ""}
 addUserKnob {6 colorspace_shift l "alt colorspace" t "This allows for the popular artistic approach to refining the despill where you browse through colorspace conversions (mainly white point and primaries) and choose one that matches your desired despill bias.\n\n<b>Tip:</b> Double click on a dropdown and use the Page Up and Page Down keys on your keyboard to browse quickly through the items.\n\n<b>Note:</b> There's no need at all for the values of these dropdowns to match your working colorspace, so you can leave it as-is or tweak it if you prefer, regardless of the colorspace you're comping at (e.g. ACEScg). It is literally an artistic conversion prior to the despill algorithm that then gets reverted." +STARTLINE}
 colorspace_shift true
 addUserKnob {6 input_colorspace l "input colorspace" t "Also tweak the input colorspace for the back and forth colorspace conversion. This is generally not needed however, as this colorspace conversion is generally only used for artistic purposes." -STARTLINE}
 addUserKnob {6 log_space l log t "Perform Lin2Log -> Despill -> Log2Lin." -STARTLINE}
 addUserKnob {41 colorspace_in l "in colorspace" +DISABLED +HIDDEN T Colorspace1.colorspace_in}
 addUserKnob {41 illuminant_in l "" -STARTLINE +DISABLED +HIDDEN T Colorspace1.illuminant_in}
 addUserKnob {41 primary_in l "" -STARTLINE +DISABLED +HIDDEN T Colorspace1.primary_in}
 addUserKnob {41 colorspace_out l "despill space" T Colorspace1.colorspace_out}
 addUserKnob {41 illuminant_out l "" -STARTLINE T Colorspace1.illuminant_out}
 addUserKnob {41 primary_out l "" -STARTLINE T Colorspace1.primary_out}
 addUserKnob {26 ""}
 addUserKnob {7 hue_offset l "hue offset" t "Rotate the despill vectors to despill an arbitrary tone other than the primaries or the picked color.\nNote: A rotation of +-120 degrees is the same as selecting a different color channel." R -30 30}
 addUserKnob {7 tolerance l limit t "Use this to multiply the hue tolerance (the limiter value). You can move it all the way down to 0 to completely remove a hue from your image.\n\n<b>NOTE:</b> If an image is plugged into the <i>limit</i> input, this will act as a multiplier." R 0 2}
 tolerance 1
 addUserKnob {41 limit_channel l "limit channel" +HIDDEN T CopyLimit.from0}
 addUserKnob {6 invert_limit_channel l invert t "The recommended workflow for the image-based limit is keeping this invert turned on, so that the higher the value of the limit channel, the lower the limit gets." -STARTLINE +HIDDEN}
 invert_limit_channel true
 addUserKnob {6 prot1_activate l "protect tones" t "Enable controls to select tones to protect from despilling." +STARTLINE}
 addUserKnob {6 prot1_preview l preview t "Output the protected tones." -STARTLINE +DISABLED}
 addUserKnob {18 prot1 l protect t "Pick the central hue to protect.\n(ctrl/cmd+alt+click)" +HIDDEN}
 prot1 {0 0 0}
 addUserKnob {6 prot1_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {7 prot1_tolerance l tolerance t "Amount of hues to include in the selection." +HIDDEN}
 prot1_tolerance 0.2
 addUserKnob {7 prot1_falloff l falloff t "Falloff for the hue selection. A higher falloff will make hues apart from the picked one lose weight more quickly." +HIDDEN R 0 4}
 prot1_falloff 2
 addUserKnob {7 prot1_effect l effect t "Multiplier for the hue protection, and for the spill limit value." +HIDDEN R 0 10}
 prot1_effect 1
 addUserKnob {26 respill_divider l "" +STARTLINE}
 addUserKnob {4 respill_math l "spill math" t "Settings for the math for desaturating the the spill before adding it back." M {"Rec 709" "Ccir 601" "Rec 2020" Average Maximum "" "" "" "" ""}}
 addUserKnob {18 respill_color l "respill color" t "RGB multiplier for the desaturated spill when adding it back.\n\nIf used on non-degrained plates (which should be avoided anyway), any value other than 1 here will most likely produce grain artifacts.\n\nNOTE: If a respill image input is plugged, this value will act as a multiplier." R 0 4}
 respill_color {1 0.00687 0}
 addUserKnob {6 respill_color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 respill_color_panelDropped true
 addUserKnob {26 ""}
 addUserKnob {41 maskChannelMask l mask T Merge.maskChannelMask}
 addUserKnob {41 inject -STARTLINE T Merge.inject}
 addUserKnob {41 invert_mask l invert -STARTLINE T Merge.invert_mask}
 addUserKnob {41 fringe -STARTLINE T Merge.fringe}
 addUserKnob {41 mix T Merge.mix}
 addUserKnob {26 version_author l "" t "apDespill v2.0\n13 April, 2021" +STARTLINE T "<span style=\"color:#666\"><br/><b>apDespill v2.0</b> - <a href=\"http://www.adrianpueyo.com\" style=\"color:#666;text-decoration: none;\">adrianpueyo.com</a>, 2014-2021</span>"}
}
 Input {
  inputs 0
  name Inputmask
  xpos 273
  ypos -370
  number 1
 }
 Dot {
  name Dot1
  note_font_size 41
  xpos 307
  ypos -267
 }
set N13d9d000 [stack 0]
 Dot {
  name Dot5
  note_font_size 41
  xpos 307
  ypos -237
 }
 Dot {
  inputs 0
  name Dotrespill
  label Dotrespill
  note_font "Verdana Bold"
  xpos 1190
  ypos -525
 }
 AddChannels {
  channels rgba
  format_size true
  name AddRGBA_spill
  xpos 1156
  ypos -442
 }
 Dot {
  inputs 0
  name Dotcolor
  label Dotcolor
  note_font "Verdana Bold"
  xpos 1080
  ypos -593
 }
 AddChannels {
  channels rgba
  format_size true
  name AddRGBA_color
  xpos 1046
  ypos -499
 }
 Dot {
  inputs 0
  name Dotlimit
  label Dotlimit
  note_font "Verdana Bold"
  xpos 936
  ypos -732
 }
 Shuffle {
  name Shuffle_limit
  xpos 902
  ypos -670
 }
 Input {
  inputs 0
  name Inputimage
  xpos 449
  ypos -761
 }
set N13dd5000 [stack 0]
 Dot {
  name Dot2
  note_font_size 41
  xpos 788
  ypos -758
 }
 Shuffle {
  alpha black
  name Shuffle
  xpos 754
  ypos -694
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name CopyLimit
  xpos 754
  ypos -670
 }
 Invert {
  channels alpha
  name InvertLimit
  xpos 754
  ypos -611
  disable {{!invert_limit_channel}}
 }
 Colorspace {
  name Colorspace1
  label "\[value colorspace_in] >> \[value colorspace_out]"
  xpos 754
  ypos -544
  disable {{!parent.colorspace_shift}}
 }
 Log2Lin {
  operation lin2log
  name Log2Lin1
  xpos 754
  ypos -508
  disable {{!log_space}}
 }
 BlinkScript {
  inputs 3
  recompileCount 94
  ProgramGroup 1
  KernelDescription "2 \"apDespillKernel\" iterate pixelWise 857ee5211c9dc340b8743026c9778403c1424a4ec1afa5c7990e55b71f93720c 4 \"src\" Read Point \"color_src\" Read Point \"spill_src\" Read Point \"dst\" Write Point 21 \"limit\" Float 1 AACAPw== \"shift\" Float 1 AAAAAA== \"weights\" Float 1 AAAAAA== \"outmode\" Int 1 AAAAAA== \"output_alpha\" Int 1 AAAAAA== \"output_alpha_inverted\" Int 1 AAAAAA== \"clr\" Int 1 AAAAAA== \"mode\" Int 1 AAAAAA== \"respill_math\" Int 1 AAAAAA== \"respill_color\" Float 4 AAAAAAAAAAAAAAAAAAAAAA== \"prot1_on\" Int 1 AAAAAA== \"prot1_preview\" Int 1 AAAAAA== \"prot1\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"prot1_tolerance\" Float 1 AAAAAA== \"prot1_mult\" Float 1 AAAAAA== \"prot1_falloff\" Float 1 AAAAAA== \"pickSpill\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"despill_method\" Int 1 AAAAAA== \"use_color_input\" Int 1 AAAAAA== \"use_spill_input\" Int 1 AAAAAA== \"use_limit_input\" Int 1 AAAAAA== 21 \"limit\" 1 1 \"shift\" 1 1 \"weights\" 1 1 \"outmode\" 1 1 \"output_alpha\" 1 1 \"output_alpha_inverted\" 1 1 \"clr\" 1 1 \"mode\" 1 1 \"respill_math\" 1 1 \"respill_color\" 4 1 \"prot1_on\" 1 1 \"prot1_preview\" 1 1 \"prot1\" 3 1 \"prot1_tolerance\" 1 1 \"prot1_mult\" 1 1 \"prot1_falloff\" 1 1 \"pickSpill\" 3 1 \"despill_method\" 1 1 \"use_color_input\" 1 1 \"use_spill_input\" 1 1 \"use_limit_input\" 1 1 7 \"_usePicked\" Int 1 1 AAAAAA== \"_clr\" Int 1 1 AAAAAA== \"_ret\" Int 1 1 AAAAAA== \"_hueShift\" Float 1 1 AAAAAA== \"_autoShift\" Float 1 1 AAAAAA== \"despillColor\" Float 3 1 AAAAAAAAAAAAAAAAAAAAAA== \"vNorm\" Float 3 1 AAAAAAAAAAAAAAAAAAAAAA=="
  kernelSource "//---------------------------------------------------------\n// apDespillKernel - apDespill v1.0 by Adrian Pueyo\n//\n// Despill an image, with options to despill any hue (and\n// not only the primaries), select different algorithms for\n// des/respilling, and protect tones from the despill.\n//\n// v2.0: Ability to plug image inputs for the controls,\n// and to perform a full key and respill.\n//\n// adrianpueyo.com, 2014-2017\n// ---------------------------------------------------------\n\ninline float y_convert_ccir601(const float4 in)\{\n  return in.x * 0.299f + in.y * 0.587f + in.z * 0.114f;\n\}\n\ninline float y_convert_rec709(const float4 in)\{\n  return in.x * 0.2125f + in.y * 0.7154f + in.z * 0.0721f;\n\}\n\ninline float y_convert_rec2020(const float4 in)\{\n  return in.x * 0.2627f + in.y * 0.678f + in.z * 0.0593f;\n\}\n\ninline float4 hueRotate(const float4 in, const float H)\{\n  if(H==0.0f)\{\n    return in;\n  \}else\{\n    float cosH = cos(H*PI/180);\n    float sinH = sin(H*PI/180);\n    float3 ret;\n    ret.x = (in.x+in.y+in.z)*(1-cosH)/3 + in.x*cosH + (-in.y/sqrt(3.0f)+in.z/sqrt(3.0f))*sinH;\n    ret.y = (in.x+in.y+in.z)*(1-cosH)/3 + in.y*cosH + (in.x/sqrt(3.0f)-in.z/sqrt(3.0f))*sinH;\n    ret.z = (in.x+in.y+in.z)*(1-cosH)/3 + in.z*cosH + (-in.x/sqrt(3.0f)+in.y/sqrt(3.0f))*sinH;\n    return float4(ret.x,ret.y,ret.z,in\[3]);\n  \}\n\}\n\nfloat3 vecToPlane(float3 v1, float3 v2 = float3(1.0f,1.0f,1.0f))\{\n  float3 v1onv2;\n  v1onv2 = v2 * float((float(dot(v2,v1))/float(dot(v2,v2)))); //Projection of vector on another (plane's normal)\n  return v1-v1onv2; //Projection of vector on plane\n\}\n\ninline float3 myCross(float3 a, float3 b)\{\n  return float3(float(a.y*b.z-a.z*b.y),float(a.z*b.x-a.x*b.z),float(a.x*b.y-a.y*b.x));\n\}\n\ninline float colorAngle(const float3 v1, const float3 v2)\{\n  const float3 vN=float3(1.0f,1.0f,1.0f);\n  float ang = acos(float(dot(v1,v2))/float(sqrt(dot(v1,v1)*dot(v2,v2))));\n  float3 crs = myCross(v1,v2);\n  if (dot(vN, crs) > 0) \{\n    ang = -ang;\n  \}\n  return ang;\n\}\n\n//Main function to calculate the despill for a float4 colour. If prot1_preview is True, returns the prot1 result instead.\ninline float4 apDespillMain(float4 src_color, float hueShift, int clr, int mode, float limit, float weights, int prot1_preview, int prot1_on, float3 prot1, float prot1_tolerance, float prot1_mult, float prot1_falloff)\{\n    //1. HueRotate IN\n    float4 despilled = hueRotate(src_color, hueShift);\n\n    //2. Calculate the limit\n    float resultLimit = 0.0f;\n    int2 others;\n    if(clr==0)\{//If red (and if _usePicked, also set red)\n      others = int2(1,2);\n    \}else if(clr==1)\{\n      others=int2(0,2);\n    \}else if(clr==2)\{\n      others=int2(0,1);\n    \}\n\n    if(mode==0)\{//average\n      resultLimit = (despilled\[others\[0]]+despilled\[others\[1]])/2;\n    \}else if(mode==1)\{//max\n      resultLimit = max(despilled\[others\[0]],despilled\[others\[1]]);\n    \}else if(mode==2)\{//min\n      resultLimit = min(despilled\[others\[0]],despilled\[others\[1]]);\n    \}else\{//custom\n      resultLimit = despilled\[others\[0]]*weights+despilled\[others\[1]]*(1-weights);\n    \}\n\n    //3. Protect tones\n    float prot1_result;\n    if(prot1_on==1&&(prot1\[0]!=prot1\[1]||prot1\[0]!=prot1\[2]||prot1\[1]!=prot1\[2]))\{\n      float cos_prot1_angle;\n      cos_prot1_angle = (src_color\[0]*prot1\[0]+src_color\[1]*prot1\[1]+src_color\[2]*prot1\[2]) / (sqrt(prot1\[0]*prot1\[0]+prot1\[1]*prot1\[1]+prot1\[2]*prot1\[2]) * sqrt(src_color\[0]*src_color\[0]+src_color\[1]*src_color\[1]+src_color\[2]*src_color\[2]));\n      prot1_result = pow(clamp(cos_prot1_angle,0.0f,1.0f),1/pow(prot1_tolerance,prot1_falloff));\n      resultLimit = resultLimit*(1+prot1_result*prot1_mult);\n    \}\n\n    //4. Calculate the despill and HueRotate OUT\n    for (int component = 0; component < 3; component++)\{\n      despilled\[component] = component==clr?min(despilled\[component],resultLimit*limit):despilled\[component];\n    \}\n    despilled = hueRotate(despilled,-hueShift);\n    despilled\[3] = prot1_result;\n    return despilled;\n\}\n\ninline float getLuma(float4 src_color, int luma_math)\{\n  float luma;\n  if(luma_math==0)\{\n    luma = y_convert_rec709(src_color);\n  \}else if(luma_math==1)\{\n    luma = y_convert_ccir601(src_color);\n  \}else if(luma_math==2)\{\n    luma = y_convert_rec2020(src_color);    \n  \}else if(luma_math==3)\{\n    luma = (src_color\[0]+src_color\[1]+src_color\[2])/3;\n  \}else\{\n    luma = max(max(src_color\[0],src_color\[1]),src_color\[2]);\n  \}\n  return luma;\n\}\n\nkernel apDespillKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> src;\n  Image<eRead, eAccessPoint, eEdgeClamped> color_src;\n  Image<eRead, eAccessPoint, eEdgeClamped> spill_src; //Acts as a multiplier for the respill color\n  Image<eWrite> dst;\n\n  param:\n    float limit;\n    float shift;\n    float weights;\n    int outmode;//0=despill,1=spill\n    int output_alpha;\n    int output_alpha_inverted;\n    int clr; //0=red,1=green,2=blue\n    int mode; //0=average,1=maximum,2=minimum,3=custom\n    int respill_math; //0=Rec709,1=Ccir601,2=Avg,3=Max\n    float4 respill_color;\n    int prot1_on;\n    int prot1_preview;\n    float3 prot1;\n    float prot1_tolerance;\n    float prot1_mult;\n    float prot1_falloff;\n    float3 pickSpill;\n    int despill_method; //0=despill,1=key/\"absolute\"\n\n    int use_color_input;\n    int use_spill_input;\n    int use_limit_input; //Should be shuffled in the src's alpha\n\n  local:\n    int _usePicked;\n    int _clr;\n    int _ret;\n    float _hueShift;\n    float _autoShift;\n    float3 despillColor;\n    float3 vNorm;\n\n  void define() \{\n    defineParam(limit, \"limit\", 1.0f);\n    defineParam(shift, \"shift\", 0.0f);\n  \}\n\n  void init() \{\n    //1. Calculate which color to affect\n    _ret = 0;\n    if(use_color_input==1)\{\n      _clr = 0;\n      _usePicked = 1;\n    \}else if(clr!=3)\{//red green or blue\n      _usePicked = 0;\n      _clr = clr;\n    \}else if(pickSpill.x==pickSpill.y && pickSpill.x==pickSpill.z)\{\n      _ret = 1;//if \"custom\" selected but has a gray value, avoid any calculations\n    \}else\{\n      _usePicked = 1;\n      _clr = 0;\n    \}\n    vNorm = float3(1.0f,1.0f,1.0f);\n    if(use_color_input==0)\{\n      //2. Calculate the necessary hue shift\n      _autoShift = 0.0f;\n      if(_usePicked==1)\{\n        _autoShift = colorAngle(vecToPlane(pickSpill,vNorm),vecToPlane(float3(1.0f,0.0f,0.0f),vNorm));\n        _autoShift = _autoShift*180/PI;//to deg\n      \}\n      _hueShift = shift-_autoShift;\n    \}\n  \}\n\n  void process()\{\n    if(_ret == 1)\{ dst()=src(); return; \} //Avoid any calculations if no despill selected\n\n    //0. If color from input, calculate the necessary hue shift\n    float hueShift = 0.0f, autoShift = 0.0f;\n    float3 despillColor;\n    if(use_color_input==1)\{\n      despillColor = float3(color_src(0),color_src(1),color_src(2));\n      autoShift = colorAngle(vecToPlane(despillColor,vNorm),vecToPlane(float3(1.0f,0.0f,0.0f),vNorm));\n      autoShift = autoShift*180/PI;//to deg\n      hueShift = shift-autoShift;\n    \}else\{\n      if(_usePicked == 1)\{\n        despillColor = pickSpill;\n      \}else\{\n        despillColor = float3(_clr==0?1.0f:0.0f,_clr==1?1.0f:0.0f,_clr==2?1.0f:0.0f);\n      \}\n      \n      hueShift = _hueShift;\n    \}\n\n    float limit_result = use_limit_input==1?limit*src(3):limit;\n\n    //1. Despill the source image\n    float4 despilled = apDespillMain(src(), hueShift, _clr, mode, limit_result, weights, prot1_preview, prot1_on, prot1, prot1_tolerance, prot1_mult, prot1_falloff);\n    if(prot1_preview==1 && prot1_on==1)\{\n      dst() = src()*clamp(despilled\[3]*prot1_mult,0.0f,1.0f);\n      return;\n    \}\n    float4 spill = src()-despilled;\n    float spill_luma = getLuma(spill, respill_math);\n\n    //2. Process the key if key method selected\n    float4 result;\n    float4 despilled_full, spill_full; //Will account for the key if method selected is key\n    float spill_luma_full;\n    if(despill_method==0)\{\n      //Despill Method = Despill\n      despilled_full = despilled;\n      spill_full = spill;\n      spill_luma_full = spill_luma;\n    \}else\{\n      //Despill Method = Key\n      float4 despillColor4 = float4(despillColor.x,despillColor.y,despillColor.z,1.0f); //For simplicity\n\n      //2.1. Despill the picked despill colour itself, for normalizing the spill\n      float4 pickSpill_despilled = apDespillMain(despillColor4, hueShift, _clr, mode, limit_result, weights, prot1_preview, prot1_on, prot1, prot1_tolerance, prot1_mult, prot1_falloff);\n      float4 pickSpill_spill = despillColor4-pickSpill_despilled;\n      float pickSpill_spill_luma = getLuma(pickSpill_spill, respill_math);\n\n      spill_luma_full = pickSpill_spill_luma == 0? 0:spill_luma/pickSpill_spill_luma;\n      spill_full = despillColor4*spill_luma_full;\n      despilled_full = src()-spill_full;\n    \}\n\n\n    float4 respill_color_result = use_spill_input==1?spill_src()*respill_color:respill_color;\n    //3. Output\n    if(outmode==0)\{ //Despill\n      result = despilled_full+spill_luma_full*respill_color_result;\n    \}else\{ //Spill\n      result = spill_full;\n    \}\n\n    if(output_alpha==0)\{\n      result\[3]=src(3);\n    \}else\{\n      if(output_alpha_inverted == 0)\{\n        result\[3]=spill_luma_full;\n      \}else\{\n        result\[3]=1-spill_luma_full;\n      \}\n    \}\n\n    dst() = result;\n\n  \}\n\};"
  useGPUIfAvailable false
  vectorize false
  rebuild ""
  apDespillKernel_limit {{parent.tolerance}}
  apDespillKernel_shift {{parent.hue_offset}}
  apDespillKernel_weights {{(parent.custom_weight+1)/2}}
  apDespillKernel_outmode {{parent.out}}
  apDespillKernel_output_alpha {{parent.output_alpha}}
  apDespillKernel_output_alpha_inverted {{parent.inverted_spill_matte}}
  apDespillKernel_clr {{parent.color}}
  apDespillKernel_mode {{parent.mode}}
  apDespillKernel_respill_math {{parent.respill_math}}
  apDespillKernel_respill_color {{parent.respill_color.r} {parent.respill_color.g} {parent.respill_color.b} 1}
  apDespillKernel_prot1_on {{parent.prot1_activate}}
  apDespillKernel_prot1_preview {{parent.prot1_preview}}
  apDespillKernel_prot1 {{parent.prot1} {parent.prot1} {parent.prot1}}
  apDespillKernel_prot1_tolerance {{parent.prot1_tolerance}}
  apDespillKernel_prot1_mult {{parent.prot1_effect}}
  apDespillKernel_prot1_falloff {{parent.prot1_falloff}}
  apDespillKernel_pickSpill {{parent.pick} {parent.pick} {parent.pick}}
  apDespillKernel_despill_method {{parent.absolute_mode}}
  apDespillKernel_use_color_input {{"\[\nif \{ \[lsearch -exact \[channels \[input this 1].input] rgba.red] >= 0\} \{\n    return 1\n\} else \{\n    return 0\n\}\n]"}}
  apDespillKernel_use_spill_input {{"\[\nif \{ \[lsearch -exact \[channels \[input this 2].input] rgba.red] >= 0\} \{\n    return 1\n\} else \{\n    return 0\n\}\n]"}}
  apDespillKernel_use_limit_input {{"\[exists parent.input3]"}}
  rebuild_finalise ""
  name apDespillKernel
  xpos 754
  ypos -448
 }
 Log2Lin {
  name Log2Lin2
  xpos 754
  ypos -378
  disable {{!log_space}}
 }
 Colorspace {
  channels {{{parent.Colorspace5.channels}}}
  colorspace_in {{parent.Colorspace1.colorspace_out}}
  illuminant_in {{parent.Colorspace1.illuminant_out}}
  primary_in {{parent.Colorspace1.primary_out}}
  colorspace_out {{parent.Colorspace1.colorspace_in}}
  illuminant_out {{parent.Colorspace1.illuminant_in}}
  primary_out {{parent.Colorspace1.primary_in}}
  name Colorspace2
  label "\[value colorspace_in] >> \[value colorspace_out]"
  xpos 754
  ypos -354
  disable {{!parent.colorspace_shift}}
 }
 Dot {
  name Dot3
  note_font_size 41
  xpos 788
  ypos -267
 }
set N13dfd800 [stack 0]
 Dot {
  name Dot4
  note_font_size 41
  xpos 788
  ypos -237
 }
push $N13d9d000
push $N13dfd800
push $N13dd5000
 Merge2 {
  inputs 2+1
  operation copy
  bbox B
  Achannels {rgba.red rgba.green rgba.blue -rgba.alpha}
  Bchannels {rgba.red rgba.green rgba.blue -rgba.alpha}
  output {rgba.red rgba.green rgba.blue -rgba.alpha}
  name Merge
  xpos 449
  ypos -270
 }
 Copy {
  inputs 2+1
  from0 rgba.alpha
  to0 rgba.alpha
  bbox B
  maskChannelMask {{{parent.Merge.maskChannelMask}}}
  maskChannelInput {{{parent.Merge.maskChannelInput}}}
  inject {{parent.Merge.inject}}
  invert_mask {{parent.Merge.invert_mask}}
  fringe {{parent.Merge.fringe}}
  name CopyAlpha
  xpos 449
  ypos -246
  disable {{!parent.output_alpha}}
 }
 Output {
  name Output
  xpos 449
  ypos -166
 }
end_group
Grade {
 inputs 1+1
 white 0.37
 name Grade11
 xpos -391
 ypos 31
}
Dot {
 name Dot5
 xpos -357
 ypos 127
}
set N13e3ec00 [stack 0]
Dot {
 name Dot6
 xpos -893
 ypos 127
}
Merge2 {
 inputs 2
 operation mask
 name Merge8
 xpos -927
 ypos 510
}
ColorCorrect {
 contrast 2
 midtones.gain 0.5
 highlights.gain 0.5
 name ColorCorrect1
 xpos -588
 ypos 510
}
Saturation {
 saturation 0
 name Saturation1
 xpos -588
 ypos 534
}
Grade {
 white {1 0.135014 0.535078 1}
 white_panelDropped true
 name Grade4
 xpos -588
 ypos 558
}
Multiply {
 value 0.46
 name Multiply1
 xpos -588
 ypos 582
}
push $N125a1c00
push $N13a9d800
Dot {
 name Dot8
 xpos -667
 ypos 197
}
set N13ed4800 [stack 0]
Blur {
 size 40
 name Blur4
 xpos -701
 ypos 309
}
Merge2 {
 inputs 2
 operation stencil
 name Merge11
 xpos -701
 ypos 355
}
Multiply {
 value 0.24
 name Multiply2
 xpos -611
 ypos 349
}
push $N13ed4800
push $N13e3ec00
Merge2 {
 inputs 2
 operation screen
 name Merge1
 xpos -391
 ypos 194
}
Dot {
 name Dot10
 label LIGHTWRAP
 note_font "Verdana Bold"
 note_font_size 21
 xpos -357
 ypos 323
}
Merge2 {
 inputs 2
 name Merge12
 xpos -391
 ypos 355
}
Merge2 {
 inputs 2
 operation screen
 mix 0.09
 name Merge9
 xpos -391
 ypos 588
}
Merge2 {
 inputs 2
 operation screen
 name Merge10
 xpos -391
 ypos 916
}
push $N13d3dc00
push $N13d9c000
Viewer {
 inputs 5
 frame 1034
 frame_range 1001-1040
 frame_range_lock true
 input_number 2
 colour_sample_bbox {0.4968749881 0.3802083433 0.4979166687 0.381249994}
 samplepoints {{0.4968749881 0.3802083433}
   }
 monitorOutOutputTransform rec709
 name Viewer1
 xpos -391
 ypos 1070
}
