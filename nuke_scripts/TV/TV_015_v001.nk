#! C:/Program Files/Nuke14.0v5/nuke-14.0.5.dll -nx
version 14.0 v5
define_window_layout_xml {<?xml version="1.0" encoding="UTF-8"?>
<layout version="1.0">
    <window x="0" y="0" w="2557" h="1360" screen="0">
        <splitter orientation="1">
            <split size="40"/>
            <dock id="" hideTitles="1" activePageId="Toolbar.1">
                <page id="Toolbar.1"/>
            </dock>
            <split size="921" stretch="1"/>
            <splitter orientation="2">
                <split size="1322"/>
                <dock id="" activePageId="DAG.1">
                    <page id="DAG.1"/>
                    <page id="Curve Editor.1"/>
                    <page id="DopeSheet.1"/>
                </dock>
            </splitter>
            <split size="1137"/>
            <dock id="" activePageId="Viewer.1" focus="true">
                <page id="Viewer.1"/>
            </dock>
            <split size="447"/>
            <dock id="" activePageId="Properties.1">
                <page id="Properties.1"/>
                <page id="uk.co.thefoundry.backgroundrenderview.1"/>
                <page id="Scenegraph.1"/>
            </dock>
        </splitter>
    </window>
</layout>
}
Root {
 inputs 0
 name C:/3D_Temp/PP/nuke_scripts/TV/TV_015_v001.nk
 frame 1051
 first_frame 1001
 last_frame 1091
 format "3840 2160 0 0 3840 2160 1 UHD_4K"
 proxy_type scale
 proxy_format "1024 778 0 0 1024 778 1 1K_Super_35(full-ap)"
 colorManagement Nuke
 workingSpaceLUT linear
 monitorLut sRGB
 monitorOutLUT rec709
 int8Lut sRGB
 int16Lut sRGB
 logLut Cineon
 floatLut linear
}
BackdropNode {
 inputs 0
 name BackdropNode1
 label PLATE
 note_font "Verdana Bold"
 note_font_size 41
 xpos 444
 ypos -706
 bdwidth 364
 bdheight 320
}
BackdropNode {
 inputs 0
 name BackdropNode2
 tile_color 0x7195c6ff
 label "TV_Plates\n"
 note_font_size 42
 xpos -2410
 ypos -707
 bdwidth 1655
 bdheight 565
}
BackdropNode {
 inputs 0
 name BackdropNode3
 tile_color 0x71c67100
 label CRT_RAYS
 note_font "Verdana Bold"
 note_font_size 18
 xpos 326
 ypos -8
 bdwidth 200
 bdheight 237
}
BackdropNode {
 inputs 0
 name Roto_Batch
 tile_color 0xc6ab71ff
 label Roto_Batch
 note_font_size 42
 xpos -2718
 ypos -709
 bdwidth 271
 bdheight 565
}
Roto {
 inputs 0
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px
        {x447a4000 x44836000}
        {{x3f4cd000}
	 {x41c199c0}}
        {{x44ed799a}
	 {x44b90ccd}}
        {{xbf4cd000}
	 {xc1c199c0}}
        {{xc0d33300}
	 {x40b99a00}}
        {{x44edf99a x44edec21}
	 {x44b42000 x44b4050e}}
        {{x40d33300}
	 {xc0b99a00}}
        {{xc0c66600}
	 {xc0000000}}
        {{{x44f7e000 -}
       {x44f8086c -}}
      {{x44b4d99a -}
       {x44b4cf7f -}}}
        {{x40c66600}
	 {x40000000}}
        {{xbe4cc000}
	 {xc1666600}}
        {{{x44fa1800 -}
       {x44fa2c36 -}}
      {{x44b7299a -}
       {x44b70ea8 -}}}
        {{x3e4cc000}
	 {x41666600}}
        {{0}
	 {xbe4ce000}}
        {{{x44fa4000 -}
       {x44fa3956 -}}
      {{x44bc7333 -}
       {x44bca889 -}}}
        {{0}
	 {x3e4ce000}}
        {{x40f33400}
	 {0}}
        {{x44f9399a}
	 {x44bd2666}}
        {{xc0f33400}
	 {0}}
        {{x3e4cc000}
	 {x40333400}}
        {{x44ee2000}
	 {x44bc0ccd}}
        {{xbe4cc000}
	 {xc0333400}}}}     idem}
     {tx x447a4000 x44f46e66 x44b8fa0f}
     {a osw x41200000 osf 0 str 1 spx x44800000 spy x44428000 sb 1 ltn x447a4000 ltm x447a4000 tt x40800000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 tt 5 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 tt 6 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 tt 7 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 tt 8 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 tt 9 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1024 778}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1001
 lifetime_end 1001
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto1
 xpos -2637
 ypos -596
}
Roto {
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x447a4000
        {0 0}
        {x44fbd99a x44b6d99a}
        {0 0}
        {xc0fccd00 0}
        {x44fc9c00 x44b548cd}
        {x40fccd00 0}
        {xc0d33200 xc19999c0}
        {x4503dccc x44b74333}
        {x408f9c00 x4150e580}
        {xbdc20000 xc158ea80}
        {x450439ea x44bddaa2}
        {x3d350000 x40cc4400}
        {x40c7ae00 x3f0b4000}
        {x45030000 x44be4333}
        {xc19c0000 xbfd99800}
        {0 0}
        {x44fd2b33 x44bd7f33}
        {0 0}
        {x3f333000 x420b99a0}
        {x44fbe666 x44b9399a}
        {xbf333000 xc20b99a0}}}     idem}
     {tx x447a4000 x45008d42 x44ba0751}
     {a osw x41200000 osf 0 str 1 spx x44800000 spy x44428000 sb 1 ltn x447a4000 ltm x447a4000 tt x40800000}}}}}}
 toolbox {addPoints {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { addPoints str 1 ssx 1 ssy 1 sf 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1024 778}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1001
 lifetime_end 1001
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto2
 xpos -2637
 ypos -560
}
Roto {
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier2 512 bezier
     {{cc
       {f 8192}
       {px x447a4000
        {0 0}
        {x4504d666 x44b8299a}
        {0 0}
        {xc0866600 x3f999c00}
        {x4505019a x44b6accd}
        {x40866600 xbf999c00}
        {xc104cd00 xc1133300}
        {x450a4ccd x44b7fccd}
        {x4104cd00 x41133300}
        {0 x3e999000}
        {x450ae19a x44bb9666}
        {0 xbe999000}
        {0 0}
        {x450af99a x44bee000}
        {0 0}
        {x3ff33000 xbfe66800}
        {x450ae800 x44bfc000}
        {xbff33000 x3fe66800}
        {0 0}
        {x4509599a x44bfa333}
        {0 0}
        {x40733000 x40733200}
        {x45055c66 x44bec333}
        {xc0733000 xc0733200}
        {xbdcd0000 x3dccc000}
        {x4504f800 x44bbd333}
        {x3dcd0000 xbdccc000}}}     idem}
     {tx x447a4000 x4508138e x44bbeb04}
     {a osw x41200000 osf 0 str 1 spx x44800000 spy x44428000 sb 1 ltn x447a4000 ltm x447a4000 tt x40800000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1024 778}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1001
 lifetime_end 1001
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto3
 xpos -2637
 ypos -524
}
Roto {
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x447a4000
        {x3f999c00 x40d33300}
        {x44f29ccd x44caa333}
        {xbf999c00 xc0d33300}
        {xc0a66600 x41600000}
        {x44f2599a x44c2f333}
        {0 0}
        {xc17ccc80 xbfc00000}
        {x44f8a623 x44c26733}
        {x417ccc80 x3fc00000}
        {xbf4cc800 xc0600000}
        {x44fee045 x44c31b78}
        {x3f4cc800 x40600000}
        {x40a99c00 xc1e26640}
        {x44ffae3c x44cb400e}
        {0 0}
        {x40e66600 xbf333000}
        {x44feb7d5 x44cbc341}
        {xc0e66600 x3f333000}
        {0 xbe4cc000}
        {x44f37000 x44cb9ccd}
        {0 x3e4cc000}}}     idem}
     {tx x447a4000 x44f8f493 x44c7b160}
     {a osw x41200000 osf 0 str 1 spx x44800000 spy x44428000 sb 1 ltn x447a4000 ltm x447a4000 tt x40800000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { addPoints str 1 ssx 1 ssy 1 sf 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1024 778}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1001
 lifetime_end 1001
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto4
 xpos -2637
 ypos -488
}
Roto {
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x447a4000
        {0 0}
        {x4502d800 x44ca7ccd}
        {0 0}
        {xc0666400 x3fcccc00}
        {x4502cccd x44c42ccd}
        {x40666400 xbfcccc00}
        {xc0600000 xc104cd00}
        {x4508899a x44c5799a}
        {x40607000 x41050b80}
        {x3f333000 xc1699a00}
        {x4508eccd x44c96666}
        {0 0}
        {0 0}
        {x4507659a x44c9619a}
        {0 0}
        {x411e6600 xc00cce00}
        {x45043e66 x44c9f333}
        {xc11e6600 x400cce00}}}     idem}
     {tx x447a4000 x4505ca89 x44c82510}
     {a osw x41200000 osf 0 str 1 spx x44800000 spy x44428000 sb 1 ltn x447a4000 ltm x447a4000 tt x40800000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { addPoints str 1 ssx 1 ssy 1 sf 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1024 778}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1001
 lifetime_end 1001
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto5
 xpos -2637
 ypos -452
}
Roto {
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x447a4000
        {xc09ccd00 x41166680}
        {x44b89ccd x4499fccd}
        {x409ccd00 xc1166680}
        {xc1233300 xc0933300}
        {x44bcbccd x44937333}
        {x41233300 x40933300}
        {xc092ad00 xc0ef1f00}
        {x44c31666 x4498099a}
        {x40933400 x40f00000}
        {x416e6680 xc1fb3340}
        {x44c24904 x449d1174}
        {xc16e6680 x41fb3340}
        {x40985200 x3f986c00}
        {x44bf0ccd x449fde60}
        {xc0962700 xbf964000}
        {0 0}
        {x44b97ccd x449c199a}
        {0 0}}}     idem}
     {tx x447a4000 x44bdda23 x449a7777}
     {a osw x41200000 osf 0 str 1 spx x44800000 spy x44428000 sb 1 ltn x447a4000 ltm x447a4000 tt x40800000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1024 778}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1001
 lifetime_end 1001
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto6
 xpos -2637
 ypos -416
 disable true
}
FilterErode {
 size -5
 name FilterErode1
 xpos -2637
 ypos -373
 disable true
}
Blur {
 size 5
 name Blur1
 xpos -2637
 ypos -337
}
Dot {
 name Dot2
 xpos -2603
 ypos 80
}
set N1bd9ec00 [stack 0]
Dot {
 name Dot1
 xpos -2603
 ypos 392
}
push $N1bd9ec00
Dot {
 name Dot4
 xpos -435
 ypos 80
}
set N1bd9f400 [stack 0]
Dot {
 name Dot9
 xpos -434
 ypos -76
}
set N1bd9f800 [stack 0]
Roto {
 inputs 0
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Rectangle1 512 bezier
     {{cc
       {f 8192}
       {px x447ac000
        {0 xc40a5554}
        {x43848004 x44f28005}
        {x44891556 0}
        {xc4891554 0}
        {x455e3001 x44f28005}
        {0 xc40a5554}
        {0 x440a5555}
        {x455e3001 x438c000e}
        {xc4891554 0}
        {x44891556 0}
        {x43848004 x438c000e}
        {0 x440a5555}}}     idem}
     {tx x447ac000 x44eec000 x4488e000}
     {a osw x41200000 osf 0 str 1 spx x44f00000 spy x44870000 sb 1 ltn x447ac000 ltm x447ac000 tt x41000000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 tt 8 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1920 1080}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1003
 lifetime_end 1003
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto7
 xpos -2205
 ypos -557
}
Invert {
 name Invert1
 xpos -2205
 ypos -521
}
Blur {
 size 100
 name Blur5
 xpos -2205
 ypos -485
}
Dot {
 name Dot11
 xpos -2171
 ypos -444
}
Read {
 inputs 0
 file_type mov
 file C:/3D_Temp/PP/draft-render/SUN_DRAFT_RENDER/sun_002_draft_v2.mov
 format "1920 1080 0 0 1920 1080 1 HD_1080"
 last 36
 origlast 36
 origset true
 name Read2
 xpos -2307
 ypos -624
}
Retime {
 input.last 36
 output.first 1001
 output.first_lock true
 output.last 1036
 before loop
 after loop
 time ""
 name Retime2
 xpos -2307
 ypos -540
}
Transform {
 scale {1.824000001 1.200000048}
 center {960 540}
 name Transform1
 xpos -2307
 ypos -516
}
Reformat {
 name Reformat1
 xpos -2307
 ypos -484
}
set N1a2b5800 [stack 0]
Grade {
 inputs 1+1
 black 0.02
 name Grade2
 xpos -2306
 ypos -447
}
LensDistortion2 {
 distortionDenominator0 0.25
 output Undistort
 outputBBox {381 76 3459 2084}
 featuresKnob "
version 1
entries 0
entries 0
"
 distortionModelDisplayX "xu = xd / (1 + k0 * rd^2 + k1 * rd^4)"
 distortionModelDisplayY "yu = yd / (1 + k0 * rd^2 + k1 * rd^4)"
 name LensDistortion1
 xpos -2306
 ypos -410
}
Transform {
 scale 1.3
 center {1920 1080}
 name Transform2
 xpos -2306
 ypos -374
}
CornerPin2D {
 to1 {1892.400024 1430.800049}
 to2 {2006.400024 1436.199951}
 to3 {2013.800049 1520.400024}
 to4 {1884.199951 1507.400024}
 invert false
 from1 {0 0}
 from2 {3840 0}
 from3 {3840 2160}
 from4 {0 2160}
 name CornerPin2D1
 xpos -2306
 ypos -305
}
Dot {
 name Dot3
 xpos -2272
 ypos -236
}
Roto {
 inputs 0
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Rectangle1 512 bezier
     {{cc
       {f 8192}
       {px x447ac000
        {0 xc40a5554}
        {x43848004 x44f28005}
        {x44891556 0}
        {xc4891554 0}
        {x455e3001 x44f28005}
        {0 xc40a5554}
        {0 x440a5555}
        {x455e3001 x438c000e}
        {xc4891554 0}
        {x44891556 0}
        {x43848004 x438c000e}
        {0 x440a5555}}}
      {cc
       {f 8192}
       {px x447ac000
        {0 xc40a5554}
        {0 0}
        {x44891556 0}
        {xc4891554 0}
        {0 0}
        {0 xc40a5554}
        {0 x440a5555}
        {0 0}
        {xc4891554 0}
        {x44891556 0}
        {0 0}
        {0 x440a5555}}}}
     {tx x447ac000 x44eec000 x4488e000}
     {a osw x41200000 osf 0 str 1 spx x44f00000 spy x44870000 sb 1 ltn x447ac000 ltm x447ac000 tt x41000000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 tt 8 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1920 1080}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1003
 lifetime_end 1003
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto8
 xpos -1947
 ypos -555
}
Invert {
 name Invert2
 xpos -1947
 ypos -519
}
Blur {
 size 600
 name Blur6
 xpos -1947
 ypos -483
}
Dot {
 name Dot12
 xpos -1913
 ypos -442
}
Read {
 inputs 0
 file_type mov
 file C:/3D_Temp/PP/draft-render/SUN_DRAFT_RENDER/sun_002_draft_v2.mov
 format "1920 1080 0 0 1920 1080 1 HD_1080"
 last 36
 origlast 36
 origset true
 name Read3
 xpos -2049
 ypos -625
}
Retime {
 input.last 36
 output.first 1001
 output.first_lock true
 output.last 1036
 before loop
 after loop
 time ""
 name Retime3
 xpos -2049
 ypos -541
}
Transform {
 scale {1.824000001 1.200000048}
 center {960 540}
 name Transform3
 xpos -2049
 ypos -514
}
Reformat {
 name Reformat2
 xpos -2049
 ypos -482
}
Grade {
 inputs 1+1
 black 0.02
 name Grade3
 xpos -2048
 ypos -445
}
LensDistortion2 {
 distortionDenominator0 0.25
 output Undistort
 outputBBox {381 76 3459 2084}
 featuresKnob "
version 1
entries 0
entries 0
"
 distortionModelDisplayX "xu = xd / (1 + k0 * rd^2 + k1 * rd^4)"
 distortionModelDisplayY "yu = yd / (1 + k0 * rd^2 + k1 * rd^4)"
 name LensDistortion2
 xpos -2048
 ypos -408
}
Transform {
 scale 1.3
 center {1920 1080}
 name Transform4
 xpos -2048
 ypos -372
}
CornerPin2D {
 to1 {2011.400024 1441.400024}
 to2 {2118.399902 1446.400024}
 to3 {2118.600098 1522.400024}
 to4 {2011.599976 1517.400024}
 invert false
 from1 {0 0}
 from2 {3840 0}
 from3 {3840 2160}
 from4 {0 2160}
 name CornerPin2D2
 xpos -2048
 ypos -308
}
Merge2 {
 inputs 2
 name Merge3
 xpos -2047
 ypos -239
}
Roto {
 inputs 0
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Rectangle1 512 bezier
     {{cc
       {f 8192}
       {px x447ac000
        {0 xc40a5554}
        {x43848004 x44f28005}
        {x44891556 0}
        {xc4891554 0}
        {x455e3001 x44f28005}
        {0 xc40a5554}
        {0 x440a5555}
        {x455e3001 x438c000e}
        {xc4891554 0}
        {x44891556 0}
        {x43848004 x438c000e}
        {0 x440a5555}}}     idem}
     {tx x447ac000 x44eec000 x4488e000}
     {a osw x41200000 osf 0 str 1 spx x44f00000 spy x44870000 sb 1 ltn x447ac000 ltm x447ac000 tt x41000000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 tt 8 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1920 1080}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1003
 lifetime_end 1003
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto9
 xpos -1697
 ypos -552
}
Invert {
 name Invert3
 xpos -1697
 ypos -516
}
Blur {
 size 600
 name Blur7
 xpos -1697
 ypos -480
}
Dot {
 name Dot13
 xpos -1663
 ypos -439
}
Read {
 inputs 0
 file_type mov
 file C:/3D_Temp/PP/draft-render/SUN_DRAFT_RENDER/sun_002_draft_v2.mov
 format "1920 1080 0 0 1920 1080 1 HD_1080"
 last 36
 origlast 36
 origset true
 name Read1
 xpos -1799
 ypos -622
}
Retime {
 input.last 36
 output.first 1001
 output.first_lock true
 output.last 1036
 before loop
 after loop
 time ""
 name Retime4
 xpos -1799
 ypos -538
}
Transform {
 scale {1.824000001 1.200000048}
 center {960 540}
 name Transform5
 xpos -1799
 ypos -511
}
Reformat {
 name Reformat7
 xpos -1799
 ypos -479
}
Grade {
 inputs 1+1
 black 0.02
 name Grade5
 xpos -1798
 ypos -442
}
LensDistortion2 {
 distortionDenominator0 0.25
 output Undistort
 outputBBox {381 76 3459 2084}
 featuresKnob "
version 1
entries 0
entries 0
"
 distortionModelDisplayX "xu = xd / (1 + k0 * rd^2 + k1 * rd^4)"
 distortionModelDisplayY "yu = yd / (1 + k0 * rd^2 + k1 * rd^4)"
 name LensDistortion3
 xpos -1798
 ypos -405
}
Transform {
 scale 1.3
 center {1920 1080}
 name Transform6
 xpos -1798
 ypos -369
}
CornerPin2D {
 to1 {2125.600098 1453.599976}
 to2 {2220.399902 1462.199951}
 to3 {2235.600098 1534}
 to4 {2130.199951 1525.800049}
 invert false
 from1 {0 0}
 from2 {3840 0}
 from3 {3840 2160}
 from4 {0 2160}
 name CornerPin2D3
 xpos -1798
 ypos -305
}
Merge2 {
 inputs 2
 name Merge4
 xpos -1798
 ypos -239
}
Roto {
 inputs 0
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Rectangle1 512 bezier
     {{cc
       {f 8192}
       {px x447ac000
        {0 xc40a5554}
        {x43848004 x44f28005}
        {x44891556 0}
        {xc4891554 0}
        {x455e3001 x44f28005}
        {0 xc40a5554}
        {0 x440a5555}
        {x455e3001 x438c000e}
        {xc4891554 0}
        {x44891556 0}
        {x43848004 x438c000e}
        {0 x440a5555}}}
      {cc
       {f 8192}
       {px x447ac000
        {0 xc40a5554}
        {0 0}
        {x44891556 0}
        {xc4891554 0}
        {0 0}
        {0 xc40a5554}
        {0 x440a5555}
        {0 0}
        {xc4891554 0}
        {x44891556 0}
        {0 0}
        {0 x440a5555}}}}
     {tx x447ac000 x44eec000 x4488e000}
     {a osw x41200000 osf 0 str 1 spx x44f00000 spy x44870000 sb 1 ltn x447ac000 ltm x447ac000 tt x41000000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 tt 8 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1920 1080}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1003
 lifetime_end 1003
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto10
 xpos -1432
 ypos -557
}
Invert {
 name Invert4
 xpos -1432
 ypos -521
}
Blur {
 size 600
 name Blur8
 xpos -1432
 ypos -485
}
Dot {
 name Dot14
 xpos -1398
 ypos -444
}
Read {
 inputs 0
 file_type mov
 file C:/3D_Temp/PP/draft-render/SUN_DRAFT_RENDER/sun_002_draft_v2.mov
 format "1920 1080 0 0 1920 1080 1 HD_1080"
 last 36
 origlast 36
 origset true
 name Read5
 xpos -1534
 ypos -627
}
Retime {
 input.last 36
 output.first 1001
 output.first_lock true
 output.last 1036
 before loop
 after loop
 time ""
 name Retime5
 xpos -1534
 ypos -543
}
Transform {
 scale {1.824000001 1.200000048}
 center {960 540}
 name Transform7
 xpos -1534
 ypos -516
}
Reformat {
 name Reformat3
 xpos -1534
 ypos -484
}
Grade {
 inputs 1+1
 black 0.02
 name Grade6
 xpos -1533
 ypos -447
}
LensDistortion2 {
 distortionDenominator0 0.25
 output Undistort
 outputBBox {381 76 3459 2084}
 featuresKnob "
version 1
entries 0
entries 0
"
 distortionModelDisplayX "xu = xd / (1 + k0 * rd^2 + k1 * rd^4)"
 distortionModelDisplayY "yu = yd / (1 + k0 * rd^2 + k1 * rd^4)"
 name LensDistortion4
 xpos -1533
 ypos -410
}
Transform {
 scale 1.3
 center {1920 1080}
 name Transform8
 xpos -1533
 ypos -374
}
CornerPin2D {
 to1 {1933.099976 1549.300049}
 to2 {2046.800049 1553.599976}
 to3 {2049.800049 1627.599976}
 to4 {1932 1626}
 invert false
 from1 {0 0}
 from2 {3840 0}
 from3 {3840 2160}
 from4 {0 2160}
 name CornerPin2D4
 xpos -1533
 ypos -307
}
Merge2 {
 inputs 2
 name Merge5
 xpos -1533
 ypos -239
}
Roto {
 inputs 0
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Rectangle1 512 bezier
     {{cc
       {f 8192}
       {px x447ac000
        {0 xc40a5554}
        {x43848004 x44f28005}
        {x44891556 0}
        {xc4891554 0}
        {x455e3001 x44f28005}
        {0 xc40a5554}
        {0 x440a5555}
        {x455e3001 x438c000e}
        {xc4891554 0}
        {x44891556 0}
        {x43848004 x438c000e}
        {0 x440a5555}}}
      {cc
       {f 8192}
       {px x447ac000
        {0 xc40a5554}
        {0 0}
        {x44891556 0}
        {xc4891554 0}
        {0 0}
        {0 xc40a5554}
        {0 x440a5555}
        {0 0}
        {xc4891554 0}
        {x44891556 0}
        {0 0}
        {0 x440a5555}}}}
     {tx x447ac000 x44eec000 x4488e000}
     {a osw x41200000 osf 0 str 1 spx x44f00000 spy x44870000 sb 1 ltn x447ac000 ltm x447ac000 tt x41000000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 tt 8 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1920 1080}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1003
 lifetime_end 1003
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto11
 xpos -1180
 ypos -558
}
Invert {
 name Invert5
 xpos -1180
 ypos -522
}
Blur {
 size 600
 name Blur9
 xpos -1180
 ypos -486
}
Dot {
 name Dot15
 xpos -1146
 ypos -445
}
Read {
 inputs 0
 file_type mov
 file C:/3D_Temp/PP/draft-render/SUN_DRAFT_RENDER/sun_002_draft_v2.mov
 format "1920 1080 0 0 1920 1080 1 HD_1080"
 last 36
 origlast 36
 origset true
 name Read6
 xpos -1282
 ypos -628
}
Retime {
 input.last 36
 output.first 1001
 output.first_lock true
 output.last 1036
 before loop
 after loop
 time ""
 name Retime6
 xpos -1282
 ypos -544
}
Transform {
 scale {1.824000001 1.200000048}
 center {960 540}
 name Transform9
 xpos -1282
 ypos -517
}
Reformat {
 name Reformat8
 xpos -1282
 ypos -485
}
Grade {
 inputs 1+1
 black 0.02
 name Grade7
 xpos -1281
 ypos -448
}
LensDistortion2 {
 distortionDenominator0 0.25
 output Undistort
 outputBBox {381 76 3459 2084}
 featuresKnob "
version 1
entries 0
entries 0
"
 distortionModelDisplayX "xu = xd / (1 + k0 * rd^2 + k1 * rd^4)"
 distortionModelDisplayY "yu = yd / (1 + k0 * rd^2 + k1 * rd^4)"
 name LensDistortion5
 xpos -1281
 ypos -411
}
Transform {
 scale 1.3
 center {1920 1080}
 name Transform10
 xpos -1281
 ypos -375
}
CornerPin2D {
 to1 {2090 1572.199951}
 to2 {2190.199951 1568.800049}
 to3 {2196.199951 1643.800049}
 to4 {2090.800049 1641.800049}
 invert false
 from1 {0 0}
 from2 {3840 0}
 from3 {3840 2160}
 from4 {0 2160}
 name CornerPin2D5
 selected true
 xpos -1281
 ypos -305
}
Merge2 {
 inputs 2
 name Merge6
 xpos -1281
 ypos -239
}
Roto {
 inputs 0
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Rectangle1 512 bezier
     {{cc
       {f 8192}
       {px x447ac000
        {0 xc40a5554}
        {x43848004 x44f28005}
        {x44891556 0}
        {xc4891554 0}
        {x455e3001 x44f28005}
        {0 xc40a5554}
        {0 x440a5555}
        {x455e3001 x438c000e}
        {xc4891554 0}
        {x44891556 0}
        {x43848004 x438c000e}
        {0 x440a5555}}}
      {cc
       {f 8192}
       {px x447ac000
        {0 xc40a5554}
        {0 0}
        {x44891556 0}
        {xc4891554 0}
        {0 0}
        {0 xc40a5554}
        {0 x440a5555}
        {0 0}
        {xc4891554 0}
        {x44891556 0}
        {0 0}
        {0 x440a5555}}}}
     {tx x447ac000 x44eec000 x4488e000}
     {a osw x41200000 osf 0 str 1 spx x44f00000 spy x44870000 sb 1 ltn x447ac000 ltm x447ac000 tt x41000000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 tt 8 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1920 1080}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1003
 lifetime_end 1003
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto12
 xpos -910
 ypos -557
 disable true
}
Invert {
 name Invert6
 xpos -910
 ypos -521
 disable true
}
Blur {
 size 600
 name Blur10
 xpos -910
 ypos -485
 disable true
}
Dot {
 name Dot16
 xpos -876
 ypos -444
}
Read {
 inputs 0
 file_type mov
 file C:/3D_Temp/PP/draft-render/SUN_DRAFT_RENDER/sun_002_draft_v2.mov
 format "1920 1080 0 0 1920 1080 1 HD_1080"
 last 36
 origlast 36
 origset true
 name Read7
 xpos -1012
 ypos -627
 disable true
}
Retime {
 input.last 36
 output.first 1001
 output.first_lock true
 output.last 1036
 before loop
 after loop
 time ""
 name Retime7
 xpos -1012
 ypos -543
 disable true
}
Transform {
 scale {1.824000001 1.200000048}
 center {960 540}
 name Transform11
 xpos -1012
 ypos -516
 disable true
}
Reformat {
 name Reformat9
 xpos -1012
 ypos -484
 disable true
}
Grade {
 inputs 1+1
 black 0.02
 name Grade8
 xpos -1011
 ypos -447
 disable true
}
LensDistortion2 {
 distortionDenominator0 0.25
 output Undistort
 outputBBox {381 76 3459 2084}
 featuresKnob "
version 1
entries 0
entries 0
"
 distortionModelDisplayX "xu = xd / (1 + k0 * rd^2 + k1 * rd^4)"
 distortionModelDisplayY "yu = yd / (1 + k0 * rd^2 + k1 * rd^4)"
 name LensDistortion6
 xpos -1011
 ypos -410
 disable true
}
Transform {
 scale 1.3
 center {1920 1080}
 name Transform12
 xpos -1011
 ypos -374
 disable true
}
CornerPin2D {
 to1 {1502.099976 1172.599976}
 to2 {1576.699951 1217.599976}
 to3 {1543.800049 1286.400024}
 to4 {1469.800049 1241.300049}
 invert false
 from1 {0 0}
 from2 {3840 0}
 from3 {3840 2160}
 from4 {0 2160}
 name CornerPin2D6
 xpos -1011
 ypos -307
 disable true
}
Merge2 {
 inputs 2
 name Merge7
 xpos -1011
 ypos -239
}
Grade {
 black 0.05
 white 0.9
 multiply 0.9
 name Grade1
 xpos -718
 ypos -239
}
Defocus {
 name Defocus1
 xpos -579
 ypos -245
}
Merge2 {
 inputs 2
 operation mask
 name Merge2
 xpos -469
 ypos -239
}
Blur {
 size 6
 name Blur3
 xpos -359
 ypos -245
}
Crop {
 box {0 0 3840 2160}
 name Crop1
 xpos -79
 ypos -239
}
Dot {
 name Dot7
 xpos 241
 ypos -236
}
set Ndcb47800 [stack 0]
Group {
 name ExponentialGlow1
 tile_color 0xcc804eff
 label v6
 note_font "Bitstream Vera Sans"
 xpos 207
 ypos 477
 mapsize {0.15 0.15}
 addUserKnob {20 User l "Exponential Glow"}
 addUserKnob {41 falloff l Falloff T ExpoGlow.falloff}
 addUserKnob {7 intensity l Intensity R 0 10}
 intensity 0.2
 addUserKnob {41 blur_amount l Size T ExpoGlow.blur_amount}
 addUserKnob {7 Tolerance}
 addUserKnob {41 add_source l "Add Source" T ExpoGlow.add_source}
 addUserKnob {26 info l INVISIBLE +INVISIBLE T "Ported from Shake by brad-f"}
 addUserKnob {6 CroptoFormat l "Crop to Format" -STARTLINE}
 CroptoFormat true
 addUserKnob {7 AspectRatio R 0.1 2}
 AspectRatio 1
 addUserKnob {41 scale l Pre-Overscan T Overscan.scale}
 addUserKnob {6 FadeAroundFormat l "Fade Around Format" +STARTLINE}
 FadeAroundFormat true
 addUserKnob {7 FadeSize l "Fade Size" R 0 3}
 FadeSize 0.5
}
 Input {
  inputs 0
  name Input1
  xpos -490
  ypos -732
 }
 Reformat {
  type scale
  resize none
  name Format
  xpos -490
  ypos -683
 }
 Dot {
  name Dot1
  label OverscanR
  xpos -456
  ypos -648
 }
 Reformat {
  type scale
  scale 1.1
  resize none
  name Overscan
  xpos -490
  ypos -622
 }
 NoOp {
  name ExpoGlow
  xpos -490
  ypos -588
  addUserKnob {20 User}
  addUserKnob {7 falloff l Falloff R 0 2}
  falloff 0.7
  addUserKnob {7 intensity l Intensity R 0 5}
  intensity {{parent.intensity*10 i}}
  addUserKnob {7 blur_amount l Size R 0 5}
  blur_amount 0.05
  addUserKnob {6 add_source l "Add Source" +STARTLINE}
  addUserKnob {6 add_bbox l "Add original bbox" +STARTLINE}
 }
set Ndcdb7400 [stack 0]
 Dot {
  name Dot12
  xpos -371
  ypos -584
 }
set Ndcdb7800 [stack 0]
 Saturation {
  saturation 0
  mode Maximum
  name SaturationT
  xpos -316
  ypos -588
 }
 Keyer {
  operation "luminance key"
  range {{parent.Tolerance} 1 1 1}
  name KeyerT
  xpos -316
  ypos -562
 }
push $Ndcdb7800
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name CopyT
  xpos -316
  ypos -524
 }
 Premult {
  name PremultT
  xpos -316
  ypos -486
 }
 Grade {
  channels rgba
  gamma 2
  black_clamp false
  name GradeT
  xpos -316
  ypos -460
 }
 Keyer {
  operation "luminance key"
  name Keyer1
  xpos -316
  ypos -427
 }
 Premult {
  name Premult1
  xpos -316
  ypos -389
 }
 Remove {
  operation keep
  channels rgb
  name Remove1
  xpos -316
  ypos -363
 }
 Rectangle {
  invert true
  area {{width} {height} 0 0}
  softness {{parent.FadeSize*100}}
  color 0
  name RectangleFade
  xpos -316
  ypos -337
  disable {{1-parent.FadeAroundFormat}}
 }
 Grade {
  white {{ExpoGlow.intensity/100}}
  name Grade1
  xpos -316
  ypos -296
 }
 Dot {
  name Dot3
  xpos -146
  ypos -292
 }
set Ndcf9a400 [stack 0]
 Dot {
  name Dot2
  xpos -36
  ypos -292
 }
set Ndcf9a800 [stack 0]
 Dot {
  name Dot4
  xpos 84
  ypos -292
 }
set Ndcf9ac00 [stack 0]
 Dot {
  name Dot5
  xpos 194
  ypos -292
 }
set Ndcf9b000 [stack 0]
 Dot {
  name Dot6
  xpos 304
  ypos -292
 }
set Ndcf9b400 [stack 0]
 Dot {
  name Dot7
  xpos 414
  ypos -292
 }
set Ndcf9b800 [stack 0]
 Dot {
  name Dot8
  xpos 524
  ypos -292
 }
set Ndcf9bc00 [stack 0]
 Dot {
  name Dot9
  xpos 631
  ypos -292
 }
set Ndcfc2000 [stack 0]
 Dot {
  name Dot10
  xpos 741
  ypos -292
 }
 Group {
  name Blur8
  xpos 707
  ypos 235
  addUserKnob {20 percentBlur l "Percent Blur"}
  addUserKnob {41 xpercent l xPercent T Blur120.xpercent}
  addUserKnob {41 ypercent l yPercent T Blur120.ypercent}
 }
  Input {
   inputs 0
   name Input1
   xpos 514
   ypos -229
  }
  Blur {
   channels rgb
   size {{width/3*(xpercent/100) x1001 6.826666667e+10} {height/3*(ypercent/100)*(1/AspectRatio)}}
   crop false
   name Blur120
   xpos 514
   ypos -176
   addUserKnob {20 User}
   addUserKnob {7 xpercent l xPercent R 0 100}
   xpercent {{Blur7.xpercent*2}}
   addUserKnob {7 ypercent l yPercent R 0 100}
   ypercent {{xpercent/format.pixel_aspect/height*width}}
  }
  Output {
   name Output1
   xpos 514
   ypos -89
  }
 end_group
 Multiply {
  channels rgb
  value {{Multiply8.value/ExpoGlow.falloff i}}
  name Multiply9
  xpos -289
  ypos 235
 }
push $Ndcfc2000
 Group {
  name Blur7
  xpos 597
  ypos 193
  addUserKnob {20 percentBlur l "Percent Blur"}
  addUserKnob {41 xpercent l xPercent T Blur120.xpercent}
  addUserKnob {41 ypercent l yPercent T Blur120.ypercent}
 }
  Input {
   inputs 0
   name Input1
   xpos 514
   ypos -229
  }
  Blur {
   channels rgb
   size {{width/3*(xpercent/100) x1001 6.826666667e+10} {height/3*(ypercent/100)*(1/AspectRatio)}}
   crop false
   name Blur120
   selected true
   xpos 514
   ypos -164
   addUserKnob {20 User}
   addUserKnob {7 xpercent l xPercent R 0 100}
   xpercent {{Blur6.xpercent*2}}
   addUserKnob {7 ypercent l yPercent R 0 100}
   ypercent {{xpercent/format.pixel_aspect/height*width}}
  }
  Output {
   name Output1
   xpos 514
   ypos -89
  }
 end_group
 Multiply {
  channels rgb
  value {{Multiply7.value/ExpoGlow.falloff i}}
  name Multiply8
  xpos -289
  ypos 194
 }
push $Ndcf9bc00
 Group {
  name Blur6
  xpos 490
  ypos 155
  addUserKnob {20 percentBlur l "Percent Blur"}
  addUserKnob {41 xpercent l xPercent T Blur120.xpercent}
  addUserKnob {41 ypercent l yPercent T Blur120.ypercent}
 }
  Input {
   inputs 0
   name Input1
   xpos 514
   ypos -229
  }
  Blur {
   channels rgb
   size {{width/3*(xpercent/100) x1001 6.826666667e+10} {height/3*(ypercent/100)*(1/AspectRatio)}}
   crop false
   name Blur120
   selected true
   xpos 514
   ypos -185
   addUserKnob {20 User}
   addUserKnob {7 xpercent l xPercent R 0 100}
   xpercent {{Blur5.xpercent*2}}
   addUserKnob {7 ypercent l yPercent R 0 100}
   ypercent {{xpercent/format.pixel_aspect/height*width}}
  }
  Output {
   name Output1
   xpos 514
   ypos -89
  }
 end_group
 Multiply {
  channels rgb
  value {{Multiply6.value/ExpoGlow.falloff i}}
  name Multiply7
  xpos -290
  ypos 155
 }
push $Ndcf9b800
 Group {
  name Blur5
  xpos 380
  ypos 116
  addUserKnob {20 percentBlur l "Percent Blur"}
  addUserKnob {41 xpercent l xPercent T Blur120.xpercent}
  addUserKnob {41 ypercent l yPercent T Blur120.ypercent}
 }
  Input {
   inputs 0
   name Input1
   xpos 514
   ypos -229
  }
  Blur {
   channels rgb
   size {{width/3*(xpercent/100) x1001 6.826666667e+10} {height/3*(ypercent/100)*(1/AspectRatio)}}
   crop false
   name Blur120
   selected true
   xpos 514
   ypos -172
   addUserKnob {20 User}
   addUserKnob {7 xpercent l xPercent R 0 100}
   xpercent {{Blur4.xpercent*2}}
   addUserKnob {7 ypercent l yPercent R 0 100}
   ypercent {{xpercent/format.pixel_aspect/height*width}}
  }
  Output {
   name Output1
   xpos 514
   ypos -89
  }
 end_group
 Multiply {
  channels rgb
  value {{Multiply5.value/ExpoGlow.falloff i}}
  name Multiply6
  xpos -290
  ypos 116
 }
push $Ndcf9b400
 Group {
  name Blur4
  xpos 270
  ypos 77
  addUserKnob {20 percentBlur l "Percent Blur"}
  addUserKnob {41 xpercent l xPercent T Blur120.xpercent}
  addUserKnob {41 ypercent l yPercent T Blur120.ypercent}
 }
  Input {
   inputs 0
   name Input1
   xpos 514
   ypos -229
  }
  Blur {
   channels rgb
   size {{width/3*(xpercent/100) x1001 6.826666667e+10} {height/3*(ypercent/100)*(1/AspectRatio)}}
   crop false
   name Blur120
   selected true
   xpos 514
   ypos -179
   addUserKnob {20 User}
   addUserKnob {7 xpercent l xPercent R 0 100}
   xpercent {{Blur3.xpercent*2}}
   addUserKnob {7 ypercent l yPercent R 0 100}
   ypercent {{xpercent/format.pixel_aspect/height*width}}
  }
  Output {
   name Output1
   xpos 514
   ypos -89
  }
 end_group
 Multiply {
  channels rgb
  value {{Multiply4.value/ExpoGlow.falloff i}}
  name Multiply5
  xpos -292
  ypos 77
 }
push $Ndcf9b000
 Group {
  name Blur3
  xpos 160
  ypos 42
  addUserKnob {20 percentBlur l "Percent Blur"}
  addUserKnob {41 xpercent l xPercent T Blur120.xpercent}
  addUserKnob {41 ypercent l yPercent T Blur120.ypercent}
 }
  Input {
   inputs 0
   name Input1
   xpos 514
   ypos -229
  }
  Blur {
   channels rgb
   size {{width/3*(xpercent/100) i x1001 6.826666667e+10} {height/3*(ypercent/100)*(1/AspectRatio) i}}
   crop false
   name Blur120
   selected true
   xpos 514
   ypos -189
   addUserKnob {20 User}
   addUserKnob {7 xpercent l xPercent R 0 100}
   xpercent {{Blur2.xpercent*2 i}}
   addUserKnob {7 ypercent l yPercent R 0 100}
   ypercent {{xpercent/format.pixel_aspect/height*width i}}
  }
  Output {
   name Output1
   xpos 514
   ypos -89
  }
 end_group
 Multiply {
  channels rgb
  value {{Multiply3.value/ExpoGlow.falloff i}}
  name Multiply4
  xpos -291
  ypos 42
 }
push $Ndcf9ac00
 Group {
  name Blur2
  xpos 50
  ypos 5
  addUserKnob {20 percentBlur l "Percent Blur"}
  addUserKnob {41 xpercent l xPercent T Blur120.xpercent}
  addUserKnob {41 ypercent l yPercent T Blur120.ypercent}
 }
  Input {
   inputs 0
   name Input1
   xpos 514
   ypos -229
  }
  Blur {
   channels rgb
   size {{width/3*(xpercent/100) i x1001 6.826666667e+10} {height/3*(ypercent/100)*(1/AspectRatio) i}}
   crop false
   name Blur120
   selected true
   xpos 514
   ypos -184
   addUserKnob {20 User}
   addUserKnob {7 xpercent l xPercent R 0 100}
   xpercent {{Blur1.xpercent*2 i}}
   addUserKnob {7 ypercent l yPercent R 0 100}
   ypercent {{xpercent/format.pixel_aspect/height*width i}}
  }
  Output {
   name Output1
   xpos 514
   ypos -89
  }
 end_group
 Multiply {
  channels rgb
  value {{Multiply2.value/ExpoGlow.falloff i}}
  name Multiply3
  xpos -292
  ypos 5
 }
push $Ndcf9a800
 Group {
  name Blur1
  xpos -70
  ypos -35
  addUserKnob {20 percentBlur l "Percent Blur"}
  addUserKnob {41 xpercent l xPercent T Blur120.xpercent}
  addUserKnob {41 ypercent l yPercent T Blur120.ypercent}
 }
  Input {
   inputs 0
   name Input1
   xpos 514
   ypos -229
  }
  Blur {
   channels rgb
   size {{width/3*(xpercent/100) i x1001 6.826666667e+10} {height/3*(ypercent/100)*(1/AspectRatio) i}}
   crop false
   name Blur120
   selected true
   xpos 514
   ypos -189
   addUserKnob {20 User}
   addUserKnob {7 xpercent l xPercent R 0 100}
   xpercent {{Blur.xpercent*2 i}}
   addUserKnob {7 ypercent l yPercent R 0 100}
   ypercent {{xpercent/format.pixel_aspect/height*width i}}
  }
  Output {
   name Output1
   xpos 514
   ypos -89
  }
 end_group
 Multiply {
  channels rgb
  value {{Multiply1.value/ExpoGlow.falloff i}}
  name Multiply2
  xpos -293
  ypos -36
 }
push $Ndcdb7400
push $Ndcf9a400
 Group {
  name Blur
  xpos -180
  ypos -76
  addUserKnob {20 percentBlur l "Percent Blur"}
  addUserKnob {41 xpercent l xPercent T Blur120.xpercent}
  addUserKnob {41 ypercent l yPercent T Blur120.ypercent}
 }
  Input {
   inputs 0
   name Input1
   xpos 514
   ypos -229
  }
  Blur {
   channels rgb
   size {{width/3*(xpercent/100) x1001 6.826666667e+10} {height/3*(ypercent/100)*(1/AspectRatio)}}
   crop false
   name Blur120
   xpos 514
   ypos -175
   addUserKnob {20 User}
   addUserKnob {7 xpercent l xPercent R 0 100}
   xpercent {{ExpoGlow.blur_amount}}
   addUserKnob {7 ypercent l yPercent R 0 100}
   ypercent {{xpercent/format.pixel_aspect/height*width}}
  }
  Output {
   name Output1
   xpos 514
   ypos -89
  }
 end_group
 Multiply {
  channels rgb
  name Multiply1
  xpos -290
  ypos -76
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge1
  xpos -430
  ypos -76
  disable {{!ExpoGlow.add_source}}
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge2
  xpos -430
  ypos -36
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge3
  xpos -430
  ypos 5
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge4
  xpos -430
  ypos 42
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge5
  xpos -430
  ypos 78
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge6
  xpos -430
  ypos 116
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge7
  xpos -430
  ypos 155
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge8
  xpos -430
  ypos 194
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge9
  xpos -430
  ypos 235
 }
 Grade {
  black_clamp false
  name breakConcatenation
  xpos -484
  ypos 305
 }
 Reformat {
  type "to box"
  box_width {{Format.width}}
  box_height {{Format.height}}
  resize none
  pbb {{1-parent.CroptoFormat}}
  name Reformat1
  xpos -484
  ypos 345
 }
 Output {
  name Output1
  xpos -484
  ypos 383
 }
end_group
push $N1bd9f400
Blur {
 size 30
 name Blur2
 xpos -79
 ypos 71
}
Read {
 inputs 0
 file_type exr
 file C:/3D_Temp/PP/Footage/TV_015/V1-0015_TV_%05d.exr
 format "3840 2160 0 0 3840 2160 1 UHD_4K"
 first 86959
 last 87049
 origfirst 86959
 origlast 87049
 origset true
 name Read4
 xpos 580
 ypos -624
}
Retime {
 input.first 86959
 input.last 87049
 output.first 1001
 output.first_lock true
 output.last 1091
 time ""
 name Retime1
 xpos 580
 ypos -514
}
Group {
 name apDespill
 help "apDespill v2.0 by Adrian Pueyo\n\nGizmo to despill an image, with options to despill any hue (and not only the primaries), select different algorithms for de/respilling, and protect tones from the despill.\n\nIf you just want a basic despill, its default values should already be enough and the tool will avoid any extra calculations.\n\nv2 includes a new \"absolute\" mode which lets you basically perform a key, or do a \"despill to color\" operation. Also, the despill color, respill color and limit can now be plugged as image inputs if you wish, letting you perform a fully image-based despill or key, sort of iKeylight. Additionally, it allows you to perform the despill under a colorspace sandwich, for the artists who prefer to loop through different colorspaces in order to find one that works. Thanks to Tony Lyons the best feedback!\n\nadrianpueyo.com, 2014-2021"
 onCreate "n = nuke.thisNode()\nn\['tolerance'].setRange(0,2)\nn\['prot1_tolerance'].setFlag(0x00000004)\nn\['prot1_effect'].setFlag(0x00000004)"
 knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\nkn = k.name()\nif kn == \"color\":\n    kv = k.getValue()\n    custom_weight_labels = \[\"green - blue\", \"red - blue\", \"red - green\", \" \"]\n    n\[\"custom_weight\"].setLabel(custom_weight_labels\[int(kv)])\n    n\[\"pick\"].setVisible(k.getValue() == 3)\nelif kn == \"mode\":\n    n\[\"custom_weight\"].setVisible(n\[\"mode\"].getValue()==3)\nelif kn in \[\"out\",\"output_alpha\"]:\n    n\[\"respill_math\"].setEnabled(n\[\"out\"].getValue()==0 or n\[\"output_alpha\"].getValue()==1)\n    n\[\"respill_color\"].setEnabled(n\[\"out\"].getValue()==0)\n    n\[\"inverted_spill_matte\"].setEnabled(n\[\"output_alpha\"].value())\nelif kn == \"prot1_activate\":\n    protA = n\[\"prot1_activate\"].value()\n    n\[\"prot1_preview\"].setEnabled(protA)\n    for i in \[\"prot1\", \"prot1_tolerance\", \"prot1_falloff\",\"prot1_effect\"]:\n        n\[i].setVisible(protA)\nelif kn == \"inputChange\":\n    n.knobs()\[\"limit_channel\"].setVisible(n.input(3) is not None)\n    n.knobs()\[\"invert_limit_channel\"].setVisible(n.input(3) is not None)\n    color_enabled = nuke.toNode(\"apDespillKernel\")\[\"apDespillKernel_use_color_input\"].getValue()==0\n    n\[\"color\"].setEnabled(color_enabled)\n    n.knobs()\[\"pick\"].setEnabled(color_enabled)\n    n\[\"info_using_input_color\"].setVisible(not color_enabled)\nelif kn == \"colorspace_shift\":\n    kv = k.value()\n    for i in \[\"colorspace_out\", \"illuminant_out\", \"primary_out\"]:\n        n.knobs()\[i].setEnabled(kv)\n    for i in \[\"colorspace_in\", \"illuminant_in\", \"primary_in\"]:\n        n.knobs()\[i].setEnabled(kv and n\[\"input_colorspace\"].value())\n    n\[\"input_colorspace\"].setEnabled(kv)\nelif kn == \"input_colorspace\":\n    kv = k.value()\n    for i in \[\"colorspace_in\", \"illuminant_in\", \"primary_in\"]:\n        n.knobs()\[i].setVisible(kv)\n        n.knobs()\[i].setEnabled(kv)\nelif kn == \"imagebased\":\n    kv = k.value()\n    input_names = \[\"color\",\"limit\",\"respill\"]\n    if kv:\n        for i_name in input_names:\n            i_fullname = \"Input\"+i_name\n            if not nuke.exists(i_fullname):\n                i_node = nuke.nodes.Input()\n                i_node\[\"name\"].setValue(i_fullname)\n            else:\n                i_node = nuke.toNode(i_fullname)\n            dot = nuke.toNode(\"Dot\"+i_name)\n            i_node.setXYpos(dot.xpos(),dot.ypos()-40)\n            dot.setInput(0,i_node)\n    else:\n        # If something connected, do nothing\n        if not any(\[n.input(i) for i in \[2,3,4]]):\n            for i_name in input_names:\n                if nuke.exists(\"Input\"+i_name):\n                    nuke.delete(nuke.toNode(\"Input\"+i_name))\n        else:\n            k.setValue(True)"
 tile_color 0x8b8b8bff
 xpos 580
 ypos -469
 addUserKnob {20 apDespill}
 addUserKnob {6 pick_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 imagebased l image-based t "Show or hide image-based inputs.\n\nThis doesn't change anything internally except hiding inputs, just to avoid intimidating arrows on the node graph.\n\nNote: While any image-based input is connected, this won't let you hide them." +STARTLINE}
 addUserKnob {6 absolute_mode l "absolute mode" t "Absolute mode performs a keying algorithm instead of a regular despill, so that you can do a \"spill to colour\" or even use this node as an image-based Keylight." -STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {4 color t "Select a primary as a starting point, or custom to show RGB controls to select any color.\n\nNote: If an image is plugged on the color input, this will get overwritten by the input." M {red green blue custom "" "" ""}}
 color custom
 addUserKnob {26 info_using_input_color l " " -STARTLINE +HIDDEN T "<i><font color=#AAA> (Using color from input)"}
 addUserKnob {18 pick t "Pick the color you'd like to use for the despill. \n\nPlease use ctrl/cmd+alt+click for picking.\n\nNOTE: If a despill color image input is plugged, this value will be ignored."}
 pick {0.01208538841 0.04410633817 0.07612729818}
 addUserKnob {6 pick_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 pick_panelDropped true
 addUserKnob {6 dfg_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {4 out l output t "Quick switch to output the despilled image or the substracted one." M {despill spill}}
 addUserKnob {6 output_alpha l "output spill matte in alpha" t "Output the spill luminance in the alpha channel." +STARTLINE}
 output_alpha true
 addUserKnob {6 inverted_spill_matte l inverted t "Invert the output spill matte (in the alpha channel), especially useful when the despill is set to Absolute mode, in which case this will output a keying-like alpha." -STARTLINE}
 inverted_spill_matte true
 addUserKnob {4 mode l "despill math" t "average = avg of other two channels\nmaximum = max of other two channels\nminimum = min of other two channels\ncustom = select custom weights" M {average maximum minimum custom ""}}
 addUserKnob {7 custom_weight l " " t "-1 = only capped by the first channel\n0 = capped by avg of both\n1 = only capped by the second channel" -STARTLINE +HIDDEN R -1 1}
 addUserKnob {26 ""}
 addUserKnob {6 colorspace_shift l "alt colorspace" t "This allows for the popular artistic approach to refining the despill where you browse through colorspace conversions (mainly white point and primaries) and choose one that matches your desired despill bias.\n\n<b>Tip:</b> Double click on a dropdown and use the Page Up and Page Down keys on your keyboard to browse quickly through the items.\n\n<b>Note:</b> There's no need at all for the values of these dropdowns to match your working colorspace, so you can leave it as-is or tweak it if you prefer, regardless of the colorspace you're comping at (e.g. ACEScg). It is literally an artistic conversion prior to the despill algorithm that then gets reverted." +STARTLINE}
 colorspace_shift true
 addUserKnob {6 input_colorspace l "input colorspace" t "Also tweak the input colorspace for the back and forth colorspace conversion. This is generally not needed however, as this colorspace conversion is generally only used for artistic purposes." -STARTLINE}
 addUserKnob {6 log_space l log t "Perform Lin2Log -> Despill -> Log2Lin." -STARTLINE}
 addUserKnob {41 colorspace_in l "in colorspace" +DISABLED +HIDDEN T Colorspace1.colorspace_in}
 addUserKnob {41 illuminant_in l "" -STARTLINE +DISABLED +HIDDEN T Colorspace1.illuminant_in}
 addUserKnob {41 primary_in l "" -STARTLINE +DISABLED +HIDDEN T Colorspace1.primary_in}
 addUserKnob {41 colorspace_out l "despill space" T Colorspace1.colorspace_out}
 addUserKnob {41 illuminant_out l "" -STARTLINE T Colorspace1.illuminant_out}
 addUserKnob {41 primary_out l "" -STARTLINE T Colorspace1.primary_out}
 addUserKnob {26 ""}
 addUserKnob {7 hue_offset l "hue offset" t "Rotate the despill vectors to despill an arbitrary tone other than the primaries or the picked color.\nNote: A rotation of +-120 degrees is the same as selecting a different color channel." R -30 30}
 addUserKnob {7 tolerance l limit t "Use this to multiply the hue tolerance (the limiter value). You can move it all the way down to 0 to completely remove a hue from your image.\n\n<b>NOTE:</b> If an image is plugged into the <i>limit</i> input, this will act as a multiplier." R 0 2}
 tolerance 1
 addUserKnob {41 limit_channel l "limit channel" +HIDDEN T CopyLimit.from0}
 addUserKnob {6 invert_limit_channel l invert t "The recommended workflow for the image-based limit is keeping this invert turned on, so that the higher the value of the limit channel, the lower the limit gets." -STARTLINE +HIDDEN}
 invert_limit_channel true
 addUserKnob {6 prot1_activate l "protect tones" t "Enable controls to select tones to protect from despilling." +STARTLINE}
 addUserKnob {6 prot1_preview l preview t "Output the protected tones." -STARTLINE +DISABLED}
 addUserKnob {18 prot1 l protect t "Pick the central hue to protect.\n(ctrl/cmd+alt+click)" +HIDDEN}
 prot1 {0 0 0}
 addUserKnob {6 prot1_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {7 prot1_tolerance l tolerance t "Amount of hues to include in the selection." +HIDDEN}
 prot1_tolerance 0.2
 addUserKnob {7 prot1_falloff l falloff t "Falloff for the hue selection. A higher falloff will make hues apart from the picked one lose weight more quickly." +HIDDEN R 0 4}
 prot1_falloff 2
 addUserKnob {7 prot1_effect l effect t "Multiplier for the hue protection, and for the spill limit value." +HIDDEN R 0 10}
 prot1_effect 1
 addUserKnob {26 respill_divider l "" +STARTLINE}
 addUserKnob {4 respill_math l "spill math" t "Settings for the math for desaturating the the spill before adding it back." M {"Rec 709" "Ccir 601" "Rec 2020" Average Maximum "" "" "" "" ""}}
 addUserKnob {18 respill_color l "respill color" t "RGB multiplier for the desaturated spill when adding it back.\n\nIf used on non-degrained plates (which should be avoided anyway), any value other than 1 here will most likely produce grain artifacts.\n\nNOTE: If a respill image input is plugged, this value will act as a multiplier." R 0 4}
 respill_color {1 0.00687 0}
 addUserKnob {6 respill_color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 respill_color_panelDropped true
 addUserKnob {26 ""}
 addUserKnob {41 maskChannelMask l mask T Merge.maskChannelMask}
 addUserKnob {41 inject -STARTLINE T Merge.inject}
 addUserKnob {41 invert_mask l invert -STARTLINE T Merge.invert_mask}
 addUserKnob {41 fringe -STARTLINE T Merge.fringe}
 addUserKnob {41 mix T Merge.mix}
 addUserKnob {26 version_author l "" t "apDespill v2.0\n13 April, 2021" +STARTLINE T "<span style=\"color:#666\"><br/><b>apDespill v2.0</b> - <a href=\"http://www.adrianpueyo.com\" style=\"color:#666;text-decoration: none;\">adrianpueyo.com</a>, 2014-2021</span>"}
}
 Input {
  inputs 0
  name Inputmask
  xpos 273
  ypos -370
  number 1
 }
 Dot {
  name Dot1
  note_font_size 41
  xpos 307
  ypos -267
 }
set Nba54d000 [stack 0]
 Dot {
  name Dot5
  note_font_size 41
  xpos 307
  ypos -237
 }
 Dot {
  inputs 0
  name Dotrespill
  label Dotrespill
  note_font "Verdana Bold"
  xpos 1190
  ypos -525
 }
 AddChannels {
  channels rgba
  format_size true
  name AddRGBA_spill
  xpos 1156
  ypos -442
 }
 Dot {
  inputs 0
  name Dotcolor
  label Dotcolor
  note_font "Verdana Bold"
  xpos 1080
  ypos -593
 }
 AddChannels {
  channels rgba
  format_size true
  name AddRGBA_color
  xpos 1046
  ypos -499
 }
 Dot {
  inputs 0
  name Dotlimit
  label Dotlimit
  note_font "Verdana Bold"
  xpos 936
  ypos -732
 }
 Shuffle {
  name Shuffle_limit
  xpos 902
  ypos -670
 }
 Input {
  inputs 0
  name Inputimage
  xpos 449
  ypos -761
 }
set Nba5e7000 [stack 0]
 Dot {
  name Dot2
  note_font_size 41
  xpos 788
  ypos -758
 }
 Shuffle {
  alpha black
  name Shuffle
  xpos 754
  ypos -694
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name CopyLimit
  xpos 754
  ypos -670
 }
 Invert {
  channels alpha
  name InvertLimit
  xpos 754
  ypos -611
  disable {{!invert_limit_channel}}
 }
 Colorspace {
  name Colorspace1
  label "\[value colorspace_in] >> \[value colorspace_out]"
  xpos 754
  ypos -544
  disable {{!parent.colorspace_shift}}
 }
 Log2Lin {
  operation lin2log
  name Log2Lin1
  xpos 754
  ypos -508
  disable {{!log_space}}
 }
 BlinkScript {
  inputs 3
  recompileCount 94
  ProgramGroup 1
  KernelDescription "2 \"apDespillKernel\" iterate pixelWise 857ee5211c9dc340b8743026c9778403c1424a4ec1afa5c7990e55b71f93720c 4 \"src\" Read Point \"color_src\" Read Point \"spill_src\" Read Point \"dst\" Write Point 21 \"limit\" Float 1 AACAPw== \"shift\" Float 1 AAAAAA== \"weights\" Float 1 AAAAAA== \"outmode\" Int 1 AAAAAA== \"output_alpha\" Int 1 AAAAAA== \"output_alpha_inverted\" Int 1 AAAAAA== \"clr\" Int 1 AAAAAA== \"mode\" Int 1 AAAAAA== \"respill_math\" Int 1 AAAAAA== \"respill_color\" Float 4 AAAAAAAAAAAAAAAAAAAAAA== \"prot1_on\" Int 1 AAAAAA== \"prot1_preview\" Int 1 AAAAAA== \"prot1\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"prot1_tolerance\" Float 1 AAAAAA== \"prot1_mult\" Float 1 AAAAAA== \"prot1_falloff\" Float 1 AAAAAA== \"pickSpill\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"despill_method\" Int 1 AAAAAA== \"use_color_input\" Int 1 AAAAAA== \"use_spill_input\" Int 1 AAAAAA== \"use_limit_input\" Int 1 AAAAAA== 21 \"limit\" 1 1 \"shift\" 1 1 \"weights\" 1 1 \"outmode\" 1 1 \"output_alpha\" 1 1 \"output_alpha_inverted\" 1 1 \"clr\" 1 1 \"mode\" 1 1 \"respill_math\" 1 1 \"respill_color\" 4 1 \"prot1_on\" 1 1 \"prot1_preview\" 1 1 \"prot1\" 3 1 \"prot1_tolerance\" 1 1 \"prot1_mult\" 1 1 \"prot1_falloff\" 1 1 \"pickSpill\" 3 1 \"despill_method\" 1 1 \"use_color_input\" 1 1 \"use_spill_input\" 1 1 \"use_limit_input\" 1 1 7 \"_usePicked\" Int 1 1 AAAAAA== \"_clr\" Int 1 1 AAAAAA== \"_ret\" Int 1 1 AAAAAA== \"_hueShift\" Float 1 1 AAAAAA== \"_autoShift\" Float 1 1 AAAAAA== \"despillColor\" Float 3 1 AAAAAAAAAAAAAAAAAAAAAA== \"vNorm\" Float 3 1 AAAAAAAAAAAAAAAAAAAAAA=="
  kernelSource "//---------------------------------------------------------\n// apDespillKernel - apDespill v1.0 by Adrian Pueyo\n//\n// Despill an image, with options to despill any hue (and\n// not only the primaries), select different algorithms for\n// des/respilling, and protect tones from the despill.\n//\n// v2.0: Ability to plug image inputs for the controls,\n// and to perform a full key and respill.\n//\n// adrianpueyo.com, 2014-2017\n// ---------------------------------------------------------\n\ninline float y_convert_ccir601(const float4 in)\{\n  return in.x * 0.299f + in.y * 0.587f + in.z * 0.114f;\n\}\n\ninline float y_convert_rec709(const float4 in)\{\n  return in.x * 0.2125f + in.y * 0.7154f + in.z * 0.0721f;\n\}\n\ninline float y_convert_rec2020(const float4 in)\{\n  return in.x * 0.2627f + in.y * 0.678f + in.z * 0.0593f;\n\}\n\ninline float4 hueRotate(const float4 in, const float H)\{\n  if(H==0.0f)\{\n    return in;\n  \}else\{\n    float cosH = cos(H*PI/180);\n    float sinH = sin(H*PI/180);\n    float3 ret;\n    ret.x = (in.x+in.y+in.z)*(1-cosH)/3 + in.x*cosH + (-in.y/sqrt(3.0f)+in.z/sqrt(3.0f))*sinH;\n    ret.y = (in.x+in.y+in.z)*(1-cosH)/3 + in.y*cosH + (in.x/sqrt(3.0f)-in.z/sqrt(3.0f))*sinH;\n    ret.z = (in.x+in.y+in.z)*(1-cosH)/3 + in.z*cosH + (-in.x/sqrt(3.0f)+in.y/sqrt(3.0f))*sinH;\n    return float4(ret.x,ret.y,ret.z,in\[3]);\n  \}\n\}\n\nfloat3 vecToPlane(float3 v1, float3 v2 = float3(1.0f,1.0f,1.0f))\{\n  float3 v1onv2;\n  v1onv2 = v2 * float((float(dot(v2,v1))/float(dot(v2,v2)))); //Projection of vector on another (plane's normal)\n  return v1-v1onv2; //Projection of vector on plane\n\}\n\ninline float3 myCross(float3 a, float3 b)\{\n  return float3(float(a.y*b.z-a.z*b.y),float(a.z*b.x-a.x*b.z),float(a.x*b.y-a.y*b.x));\n\}\n\ninline float colorAngle(const float3 v1, const float3 v2)\{\n  const float3 vN=float3(1.0f,1.0f,1.0f);\n  float ang = acos(float(dot(v1,v2))/float(sqrt(dot(v1,v1)*dot(v2,v2))));\n  float3 crs = myCross(v1,v2);\n  if (dot(vN, crs) > 0) \{\n    ang = -ang;\n  \}\n  return ang;\n\}\n\n//Main function to calculate the despill for a float4 colour. If prot1_preview is True, returns the prot1 result instead.\ninline float4 apDespillMain(float4 src_color, float hueShift, int clr, int mode, float limit, float weights, int prot1_preview, int prot1_on, float3 prot1, float prot1_tolerance, float prot1_mult, float prot1_falloff)\{\n    //1. HueRotate IN\n    float4 despilled = hueRotate(src_color, hueShift);\n\n    //2. Calculate the limit\n    float resultLimit = 0.0f;\n    int2 others;\n    if(clr==0)\{//If red (and if _usePicked, also set red)\n      others = int2(1,2);\n    \}else if(clr==1)\{\n      others=int2(0,2);\n    \}else if(clr==2)\{\n      others=int2(0,1);\n    \}\n\n    if(mode==0)\{//average\n      resultLimit = (despilled\[others\[0]]+despilled\[others\[1]])/2;\n    \}else if(mode==1)\{//max\n      resultLimit = max(despilled\[others\[0]],despilled\[others\[1]]);\n    \}else if(mode==2)\{//min\n      resultLimit = min(despilled\[others\[0]],despilled\[others\[1]]);\n    \}else\{//custom\n      resultLimit = despilled\[others\[0]]*weights+despilled\[others\[1]]*(1-weights);\n    \}\n\n    //3. Protect tones\n    float prot1_result;\n    if(prot1_on==1&&(prot1\[0]!=prot1\[1]||prot1\[0]!=prot1\[2]||prot1\[1]!=prot1\[2]))\{\n      float cos_prot1_angle;\n      cos_prot1_angle = (src_color\[0]*prot1\[0]+src_color\[1]*prot1\[1]+src_color\[2]*prot1\[2]) / (sqrt(prot1\[0]*prot1\[0]+prot1\[1]*prot1\[1]+prot1\[2]*prot1\[2]) * sqrt(src_color\[0]*src_color\[0]+src_color\[1]*src_color\[1]+src_color\[2]*src_color\[2]));\n      prot1_result = pow(clamp(cos_prot1_angle,0.0f,1.0f),1/pow(prot1_tolerance,prot1_falloff));\n      resultLimit = resultLimit*(1+prot1_result*prot1_mult);\n    \}\n\n    //4. Calculate the despill and HueRotate OUT\n    for (int component = 0; component < 3; component++)\{\n      despilled\[component] = component==clr?min(despilled\[component],resultLimit*limit):despilled\[component];\n    \}\n    despilled = hueRotate(despilled,-hueShift);\n    despilled\[3] = prot1_result;\n    return despilled;\n\}\n\ninline float getLuma(float4 src_color, int luma_math)\{\n  float luma;\n  if(luma_math==0)\{\n    luma = y_convert_rec709(src_color);\n  \}else if(luma_math==1)\{\n    luma = y_convert_ccir601(src_color);\n  \}else if(luma_math==2)\{\n    luma = y_convert_rec2020(src_color);    \n  \}else if(luma_math==3)\{\n    luma = (src_color\[0]+src_color\[1]+src_color\[2])/3;\n  \}else\{\n    luma = max(max(src_color\[0],src_color\[1]),src_color\[2]);\n  \}\n  return luma;\n\}\n\nkernel apDespillKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> src;\n  Image<eRead, eAccessPoint, eEdgeClamped> color_src;\n  Image<eRead, eAccessPoint, eEdgeClamped> spill_src; //Acts as a multiplier for the respill color\n  Image<eWrite> dst;\n\n  param:\n    float limit;\n    float shift;\n    float weights;\n    int outmode;//0=despill,1=spill\n    int output_alpha;\n    int output_alpha_inverted;\n    int clr; //0=red,1=green,2=blue\n    int mode; //0=average,1=maximum,2=minimum,3=custom\n    int respill_math; //0=Rec709,1=Ccir601,2=Avg,3=Max\n    float4 respill_color;\n    int prot1_on;\n    int prot1_preview;\n    float3 prot1;\n    float prot1_tolerance;\n    float prot1_mult;\n    float prot1_falloff;\n    float3 pickSpill;\n    int despill_method; //0=despill,1=key/\"absolute\"\n\n    int use_color_input;\n    int use_spill_input;\n    int use_limit_input; //Should be shuffled in the src's alpha\n\n  local:\n    int _usePicked;\n    int _clr;\n    int _ret;\n    float _hueShift;\n    float _autoShift;\n    float3 despillColor;\n    float3 vNorm;\n\n  void define() \{\n    defineParam(limit, \"limit\", 1.0f);\n    defineParam(shift, \"shift\", 0.0f);\n  \}\n\n  void init() \{\n    //1. Calculate which color to affect\n    _ret = 0;\n    if(use_color_input==1)\{\n      _clr = 0;\n      _usePicked = 1;\n    \}else if(clr!=3)\{//red green or blue\n      _usePicked = 0;\n      _clr = clr;\n    \}else if(pickSpill.x==pickSpill.y && pickSpill.x==pickSpill.z)\{\n      _ret = 1;//if \"custom\" selected but has a gray value, avoid any calculations\n    \}else\{\n      _usePicked = 1;\n      _clr = 0;\n    \}\n    vNorm = float3(1.0f,1.0f,1.0f);\n    if(use_color_input==0)\{\n      //2. Calculate the necessary hue shift\n      _autoShift = 0.0f;\n      if(_usePicked==1)\{\n        _autoShift = colorAngle(vecToPlane(pickSpill,vNorm),vecToPlane(float3(1.0f,0.0f,0.0f),vNorm));\n        _autoShift = _autoShift*180/PI;//to deg\n      \}\n      _hueShift = shift-_autoShift;\n    \}\n  \}\n\n  void process()\{\n    if(_ret == 1)\{ dst()=src(); return; \} //Avoid any calculations if no despill selected\n\n    //0. If color from input, calculate the necessary hue shift\n    float hueShift = 0.0f, autoShift = 0.0f;\n    float3 despillColor;\n    if(use_color_input==1)\{\n      despillColor = float3(color_src(0),color_src(1),color_src(2));\n      autoShift = colorAngle(vecToPlane(despillColor,vNorm),vecToPlane(float3(1.0f,0.0f,0.0f),vNorm));\n      autoShift = autoShift*180/PI;//to deg\n      hueShift = shift-autoShift;\n    \}else\{\n      if(_usePicked == 1)\{\n        despillColor = pickSpill;\n      \}else\{\n        despillColor = float3(_clr==0?1.0f:0.0f,_clr==1?1.0f:0.0f,_clr==2?1.0f:0.0f);\n      \}\n      \n      hueShift = _hueShift;\n    \}\n\n    float limit_result = use_limit_input==1?limit*src(3):limit;\n\n    //1. Despill the source image\n    float4 despilled = apDespillMain(src(), hueShift, _clr, mode, limit_result, weights, prot1_preview, prot1_on, prot1, prot1_tolerance, prot1_mult, prot1_falloff);\n    if(prot1_preview==1 && prot1_on==1)\{\n      dst() = src()*clamp(despilled\[3]*prot1_mult,0.0f,1.0f);\n      return;\n    \}\n    float4 spill = src()-despilled;\n    float spill_luma = getLuma(spill, respill_math);\n\n    //2. Process the key if key method selected\n    float4 result;\n    float4 despilled_full, spill_full; //Will account for the key if method selected is key\n    float spill_luma_full;\n    if(despill_method==0)\{\n      //Despill Method = Despill\n      despilled_full = despilled;\n      spill_full = spill;\n      spill_luma_full = spill_luma;\n    \}else\{\n      //Despill Method = Key\n      float4 despillColor4 = float4(despillColor.x,despillColor.y,despillColor.z,1.0f); //For simplicity\n\n      //2.1. Despill the picked despill colour itself, for normalizing the spill\n      float4 pickSpill_despilled = apDespillMain(despillColor4, hueShift, _clr, mode, limit_result, weights, prot1_preview, prot1_on, prot1, prot1_tolerance, prot1_mult, prot1_falloff);\n      float4 pickSpill_spill = despillColor4-pickSpill_despilled;\n      float pickSpill_spill_luma = getLuma(pickSpill_spill, respill_math);\n\n      spill_luma_full = pickSpill_spill_luma == 0? 0:spill_luma/pickSpill_spill_luma;\n      spill_full = despillColor4*spill_luma_full;\n      despilled_full = src()-spill_full;\n    \}\n\n\n    float4 respill_color_result = use_spill_input==1?spill_src()*respill_color:respill_color;\n    //3. Output\n    if(outmode==0)\{ //Despill\n      result = despilled_full+spill_luma_full*respill_color_result;\n    \}else\{ //Spill\n      result = spill_full;\n    \}\n\n    if(output_alpha==0)\{\n      result\[3]=src(3);\n    \}else\{\n      if(output_alpha_inverted == 0)\{\n        result\[3]=spill_luma_full;\n      \}else\{\n        result\[3]=1-spill_luma_full;\n      \}\n    \}\n\n    dst() = result;\n\n  \}\n\};"
  useGPUIfAvailable false
  vectorize false
  rebuild ""
  apDespillKernel_limit {{parent.tolerance}}
  apDespillKernel_shift {{parent.hue_offset}}
  apDespillKernel_weights {{(parent.custom_weight+1)/2}}
  apDespillKernel_outmode {{parent.out}}
  apDespillKernel_output_alpha {{parent.output_alpha}}
  apDespillKernel_output_alpha_inverted {{parent.inverted_spill_matte}}
  apDespillKernel_clr {{parent.color}}
  apDespillKernel_mode {{parent.mode}}
  apDespillKernel_respill_math {{parent.respill_math}}
  apDespillKernel_respill_color {{parent.respill_color.r} {parent.respill_color.g} {parent.respill_color.b} 1}
  apDespillKernel_prot1_on {{parent.prot1_activate}}
  apDespillKernel_prot1_preview {{parent.prot1_preview}}
  apDespillKernel_prot1 {{parent.prot1} {parent.prot1} {parent.prot1}}
  apDespillKernel_prot1_tolerance {{parent.prot1_tolerance}}
  apDespillKernel_prot1_mult {{parent.prot1_effect}}
  apDespillKernel_prot1_falloff {{parent.prot1_falloff}}
  apDespillKernel_pickSpill {{parent.pick} {parent.pick} {parent.pick}}
  apDespillKernel_despill_method {{parent.absolute_mode}}
  apDespillKernel_use_color_input {{"\[\nif \{ \[lsearch -exact \[channels \[input this 1].input] rgba.red] >= 0\} \{\n    return 1\n\} else \{\n    return 0\n\}\n]"}}
  apDespillKernel_use_spill_input {{"\[\nif \{ \[lsearch -exact \[channels \[input this 2].input] rgba.red] >= 0\} \{\n    return 1\n\} else \{\n    return 0\n\}\n]"}}
  apDespillKernel_use_limit_input {{"\[exists parent.input3]"}}
  rebuild_finalise ""
  name apDespillKernel
  xpos 754
  ypos -448
 }
 Log2Lin {
  name Log2Lin2
  xpos 754
  ypos -378
  disable {{!log_space}}
 }
 Colorspace {
  channels {{{parent.Colorspace5.channels}}}
  colorspace_in {{parent.Colorspace1.colorspace_out}}
  illuminant_in {{parent.Colorspace1.illuminant_out}}
  primary_in {{parent.Colorspace1.primary_out}}
  colorspace_out {{parent.Colorspace1.colorspace_in}}
  illuminant_out {{parent.Colorspace1.illuminant_in}}
  primary_out {{parent.Colorspace1.primary_in}}
  name Colorspace2
  label "\[value colorspace_in] >> \[value colorspace_out]"
  xpos 754
  ypos -354
  disable {{!parent.colorspace_shift}}
 }
 Dot {
  name Dot3
  note_font_size 41
  xpos 788
  ypos -267
 }
set Nba70d800 [stack 0]
 Dot {
  name Dot4
  note_font_size 41
  xpos 788
  ypos -237
 }
push $Nba54d000
push $Nba70d800
push $Nba5e7000
 Merge2 {
  inputs 2+1
  operation copy
  bbox B
  Achannels {rgba.red rgba.green rgba.blue -rgba.alpha}
  Bchannels {rgba.red rgba.green rgba.blue -rgba.alpha}
  output {rgba.red rgba.green rgba.blue -rgba.alpha}
  name Merge
  xpos 449
  ypos -270
 }
 Copy {
  inputs 2+1
  from0 rgba.alpha
  to0 rgba.alpha
  bbox B
  maskChannelMask {{{parent.Merge.maskChannelMask}}}
  maskChannelInput {{{parent.Merge.maskChannelInput}}}
  inject {{parent.Merge.inject}}
  invert_mask {{parent.Merge.invert_mask}}
  fringe {{parent.Merge.fringe}}
  name CopyAlpha
  xpos 449
  ypos -246
  disable {{!parent.output_alpha}}
 }
 Output {
  name Output
  xpos 449
  ypos -166
 }
end_group
Dot {
 name Dot5
 xpos 614
 ypos -296
}
set Nba870c00 [stack 0]
Dot {
 name Dot6
 xpos 78
 ypos -296
}
Merge2 {
 inputs 2
 operation mask
 name Merge8
 xpos 44
 ypos 77
}
ColorCorrect {
 contrast 2
 midtones.gain 0.5
 highlights.gain 0.5
 name ColorCorrect1
 xpos 383
 ypos 77
}
Saturation {
 saturation 0
 name Saturation1
 xpos 383
 ypos 101
}
Grade {
 white {1 0.135014 0.535078 1}
 white_panelDropped true
 name Grade4
 xpos 383
 ypos 125
}
Multiply {
 value 0.46
 name Multiply1
 xpos 383
 ypos 149
}
push $N1bd9f800
push $Ndcb47800
Dot {
 name Dot8
 xpos 304
 ypos -236
}
set Nd1ace800 [stack 0]
Blur {
 size 40
 name Blur4
 xpos 270
 ypos -124
}
Merge2 {
 inputs 2
 operation stencil
 name Merge11
 xpos 270
 ypos -78
}
Multiply {
 value 0.24
 name Multiply2
 xpos 360
 ypos -84
}
push $Nd1ace800
push $Nba870c00
Merge2 {
 inputs 2
 name Merge1
 xpos 580
 ypos -239
}
Dot {
 name Dot10
 label LIGHTWRAP
 note_font "Verdana Bold"
 note_font_size 21
 xpos 614
 ypos -110
}
Merge2 {
 inputs 2
 name Merge12
 xpos 580
 ypos -78
}
Merge2 {
 inputs 2
 operation screen
 mix 0.09
 name Merge9
 xpos 580
 ypos 155
}
Merge2 {
 inputs 2
 operation screen
 name Merge10
 xpos 580
 ypos 483
}
push $N1a2b5800
push 0
Viewer {
 inputs 3
 frame 1051
 frame_range 1001-1091
 frame_range_lock true
 input_number 2
 colour_sample_bbox {-0.03802083433 0.125 -0.03750000149 0.1255208403}
 samplepoints {{-0.3270833194 -0.03333333507}
   }
 monitorOutOutputTransform rec709
 name Viewer1
 xpos 580
 ypos 637
}
