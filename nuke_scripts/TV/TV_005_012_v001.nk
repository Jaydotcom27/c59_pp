#! C:/Program Files/Nuke14.0v5/nuke-14.0.5.dll -nx
#write_info Write1 file:"C:/3D_Temp/PP/Render/TV_0012_V001/TV_0012_V001_%03d.exr" format:"3840 2160 1" chans:":rgba.red:rgba.green:rgba.blue:" framerange:"1001 1043" fps:"23.976" colorspace:"default (linear)" datatype:"16 bit half" transfer:"unknown" views:"main" timecode:"01:00:14:00" colorManagement:"Nuke"
version 14.0 v5
define_window_layout_xml {<?xml version="1.0" encoding="UTF-8"?>
<layout version="1.0">
    <window x="-1" y="-8" w="2560" h="1369" maximized="1" screen="0">
        <splitter orientation="1">
            <split size="40"/>
            <dock id="" hideTitles="1" activePageId="Toolbar.1">
                <page id="Toolbar.1"/>
            </dock>
            <split size="1897" stretch="1"/>
            <splitter orientation="2">
                <split size="779"/>
                <dock id="" activePageId="Viewer.1">
                    <page id="Viewer.1"/>
                </dock>
                <split size="548"/>
                <dock id="" activePageId="DAG.1" focus="true">
                    <page id="DAG.1"/>
                    <page id="Curve Editor.1"/>
                    <page id="DopeSheet.1"/>
                </dock>
            </splitter>
            <split size="615"/>
            <dock id="" activePageId="Properties.1">
                <page id="Properties.1"/>
                <page id="uk.co.thefoundry.backgroundrenderview.1"/>
                <page id="Scenegraph.1"/>
            </dock>
        </splitter>
    </window>
</layout>
}
Root {
 inputs 0
 name C:/3D_Temp/PP/nuke_scripts/TV/TV_005_012_v001.nk
 frame 1026
 first_frame 1001
 last_frame 1043
 lock_range true
 format "3840 2160 0 0 3840 2160 1 UHD_4K"
 proxy_type scale
 proxy_format "1024 778 0 0 1024 778 1 1K_Super_35(full-ap)"
 colorManagement Nuke
 workingSpaceLUT linear
 monitorLut sRGB
 monitorOutLUT rec709
 int8Lut sRGB
 int16Lut sRGB
 logLut Cineon
 floatLut linear
}
BackdropNode {
 inputs 0
 name BackdropNode1
 label PLATE
 note_font "Verdana Bold"
 note_font_size 41
 xpos -8222
 ypos -1151
 bdwidth 369
 bdheight 366
}
BackdropNode {
 inputs 0
 name BackdropNode2
 tile_color 0x7195c6ff
 label "TV_Plates\n"
 note_font_size 42
 xpos -11078
 ypos -811
 bdwidth 1657
 bdheight 786
}
BackdropNode {
 inputs 0
 name BackdropNode3
 tile_color 0x71c67100
 label CRT_RAYS
 note_font "Verdana Bold"
 note_font_size 18
 xpos -8340
 ypos 108
 bdwidth 200
 bdheight 237
}
BackdropNode {
 inputs 0
 name Roto_Batch
 tile_color 0xc6ab71ff
 label Roto_Batch
 note_font_size 42
 xpos -11384
 ypos -593
 bdwidth 271
 bdheight 565
}
Roto {
 inputs 0
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x44804000
        {0 0}
        {x440b8cd1 x4546519f}
        {0 0}
        {0 0}
        {x454fbccc xc482f661}
        {0 0}
        {0 0}
        {x458620cc xc4346cc5}
        {0 0}
        {0 0}
        {x44a35000 x4562d19b}
        {0 0}}}     idem}
     {tx x44804000 x4510c000 x44a3b000}
     {a osw x41200000 osf 0 str 1 spx x44f00000 spy x44870000 sb 1 ltn x44804000 ltm x44804000 tt x40800000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1920 1080}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1026
 lifetime_end 1026
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto15
 xpos -8970
 ypos -316
}
Blur {
 size 800
 name Blur13
 xpos -8970
 ypos -280
}
Invert {
 name Invert9
 xpos -8970
 ypos -244
}
Roto {
 inputs 0
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x44804000
        {0 0}
        {x44aff99a x454feb38}
        {0 0}
        {0 0}
        {x45826b32 xc45f8658}
        {0 0}
        {0 0}
        {x45a0ad98 xc40e065c}
        {0 0}
        {0 0}
        {x4506c199 x456c6b34}
        {0 0}}}     idem}
     {tx x44804000 x4510c000 x44a3b000}
     {a osw x41200000 osf 0 str 1 spx x44f00000 spy x44870000 sb 1 ltn x44804000 ltm x44804000 tt x40800000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1920 1080}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1026
 lifetime_end 1026
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto13
 xpos -8866
 ypos -315
}
Blur {
 size 800
 name Blur11
 xpos -8866
 ypos -279
}
Invert {
 name Invert7
 xpos -8866
 ypos -243
}
Switch {
 inputs 2
 which 1
 name Switch1
 xpos -8866
 ypos -196
}
set Cf55e8800 [stack 0]
Roto {
 inputs 0
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x44800000
        {xc1880000 x42040000}
        {x44b16000 x43f08000}
        {x41880000 xc2040000}
        {0 0}
        {x44c4c000 x43790000}
        {0 0}
        {xc2fc0000 xc1a00000}
        {x44d7c000 x436c0000}
        {x42fc0000 x41a00000}
        {0 0}
        {x44e84000 x438b8000}
        {0 0}
        {x41c80000 xc2180000}
        {x44e7c000 x43a38000}
        {xc1c80000 x42180000}
        {0 0}
        {x44d00000 x4417c000}
        {0 0}
        {x41699980 x40266700}
        {x44cca000 x441c0ccd}
        {xc1699980 xc0266700}
        {x3fcccc00 x3f4cd000}
        {x44c70ccd x4418999a}
        {xbfcccc00 xbf4cd000}
        {x3eccd000 x3eccd000}
        {x44ba4000 x440d0ccd}
        {xbeccd000 xbeccd000}
        {0 0}
        {x44b3799a x4406b333}
        {0 0}}}     idem}
     {tx x44800000 x44cb20a4 x43e1d47b}
     {a osw x41200000 osf 0 str 1 spx x44f00000 spy x44870000 sb 1 ltn x44800000 ltm x44800000 tt x40800000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 tt 5 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 tt 6 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 tt 7 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 tt 8 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 tt 9 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1920 1080}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1024
 lifetime_end 1024
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto1
 xpos -11303
 ypos -480
}
Roto {
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x44800000
        {xc1280000 x41d80000}
        {x44d9e000 x441b8000}
        {x41280000 xc1d80000}
        {xc2c20000 x42900000}
        {x44f44000 x43968000}
        {x42c20000 xc2900000}
        {0 0}
        {x45196000 x43b68000}
        {0 0}
        {x41b80000 xc2180000}
        {x4519c000 x43d10000}
        {xc1b80000 x42180000}
        {x41a00000 xc1480000}
        {x45098000 x444a6000}
        {xc1a00000 x41480000}
        {x41d80000 x41600000}
        {x45048800 x444b4000}
        {xc1d80000 xc1600000}
        {0 0}
        {x44f0f000 x44386000}
        {0 0}
        {0 0}
        {x44dc1000 x44270000}
        {0 0}}}     idem}
     {tx x44800000 x4501d700 x4413f000}
     {a osw x41200000 osf 0 str 1 spx x44f00000 spy x44870000 sb 1 ltn x44800000 ltm x44800000 tt x40800000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1920 1080}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1024
 lifetime_end 1024
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto2
 xpos -11303
 ypos -444
}
Roto {
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x44800000
        {0 0}
        {x45206000 x43db0000}
        {0 0}
        {xc2aa0000 xc0000000}
        {x4527c000 x43c60000}
        {x42aa0000 x40000000}
        {xc3830000 xc2de0000}
        {x455e1000 x44108000}
        {x43830000 x42de0000}
        {0 0}
        {x4561dabb x445cc844}
        {0 0}
        {0 0}
        {x455dcabb x44644844}
        {0 0}
        {x429a0000 x3f000000}
        {x454aeabb x449f5422}
        {xc29a0000 xbf000000}
        {0 0}
        {x45207000 x447d0000}
        {0 0}
        {x41600000 x41ec0000}
        {x45103000 x445c8000}
        {xc1600000 xc1ec0000}
        {xc0800000 x40a00000}
        {x45142800 x4432a000}
        {x40800000 xc0a00000}
        {0 0}
        {x451e3000 x43eec000}
        {0 0}}}     idem}
     {tx x44800000 x4534fd9a x443d2333}
     {a osw x41200000 osf 0 str 1 spx x44f00000 spy x44870000 sb 1 ltn x44800000 ltm x44800000 tt x40800000 fx x40000000 fy x40000000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1920 1080}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1024
 lifetime_end 1024
 motionblur_shutter_offset_type centred
 feather 2
 source_black_outside true
 name Roto3
 xpos -11303
 ypos -408
}
Roto {
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x44800000
        {xc1600000 xc2140000}
        {x4495c000 x4484c000}
        {x41600000 x42140000}
        {xc2340000 x41dcccc0}
        {x44aa9ede x4498fbdc}
        {0 0}
        {0 0}
        {x44c6d000 x445bc000}
        {0 0}
        {x42886660 x42299990}
        {x44c02000 x444c3333}
        {xc2886660 xc2299990}
        {x420c0000 xc1066640}
        {x44ad8666 x443b4ccd}
        {xc20c0000 x41066640}
        {x3f199800 xbeccc800}
        {x44a43333 x444f8ccd}
        {xbf199800 x3eccc800}}}     idem}
     {tx x44800000 x44aecd55 x4467dbbc}
     {a osw x41200000 osf 0 str 1 spx x44f00000 spy x44870000 sb 1 ltn x44800000 ltm x44800000 tt x40800000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1920 1080}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1024
 lifetime_end 1024
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto4
 xpos -11303
 ypos -372
}
Roto {
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x447dc000
        {{{0 -}}
      {{0 -}}}
        {{{x4518c000 -}}
      {{x44b38000 -}}}
        {{{0 -}}
      {{0 -}}}
        {{{x41b80000 -}}
      {{xc2500000 -}}}
        {{{x45185000 -}}
      {{x44bdc000 -}}}
        {{{xc1b80000 -}}
      {{x42500000 -}}}
        {{{x42e90000 -}}
      {{xc2a70000 -}}}
        {{{x4503a249 -}}
      {{x44f8b493 -}}}
        {{{0 -}}
	 {{0 -}}}
        {{{x41954200 -}}
	 {{x41514c00 -}}}
        {{{x45017abb 0 1 x3f16738e 1}}
	 {{x44f664e6 0 1 xbe015c72 1}}}
        {{{xc23f0c80 -}}
	 {{xc205f380 -}}}
        {{{x42e13a00 0 1 x3e317c72 1}}
	 {{x42ee9f80 0 1 xbd188e39 1}}}
        {{{x44e303c4 0 1 xbe741c72 1}}
	 {{x44d8f969 0 1 x3f1ab9c7 1}}}
        {{{xc27d6140 0 1 xbdc7aaab 1}}
	 {{xc28639c0 0 1 x3cabc71c 1}}}
        {{{x4282c080 -}}
	 {{x42bbc6b0 -}}}
        {{{x44ca0000 0 1 xbeaaaaab 1}}
	 {{x44bb8000 0 1 x3f0e38e4 1}}}
        {{{0 -}}
	 {{0 -}}}
        {{{xc24a0000 -}}
	 {{x42aa0000 -}}}
        {{{x44cbe000 -}}
	 {{x44aca000 -}}}
        {{{0 -}}
	 {{0 -}}}
        {{{xc2060000 -}}
	 {{x41a40000 -}}}
        {{{x44e53800 -}}
	 {{x448682aa -}}}
        {{{0 -}}
	 {{0 -}}}
        {{{xc2e60000 -}}
	 {{xc2940000 -}}}
        {{{x44f61000 -}}
	 {{x4489d000 -}}}
        {{{x42e60000 -}}
	 {{x42940000 -}}}
        {{{xc2a30000 -}}
	 {{xc29c0000 -}}}
        {{{x45168800 -}}
	 {{x44af4000 -}}}
        {{{x42a30000 -}}
      {{x429c0000 -}}}}}     idem}
     {tx x44800000 x450073c9 x44b248e8}
     {a osw x41200000 osf 0 str 1 spx x44f00000 spy x44870000 sb 1 ltn x44800000 ltm x44800000 tt x40800000}}}}}}
 toolbox {addPoints {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { addPoints str 1 ssx 1 ssy 1 sf 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1920 1080}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1024
 lifetime_end 1024
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto5
 xpos -11303
 ypos -336
}
Roto {
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x44800000
        {0 xbd4d0000}
        {x44784000 x44d8a000}
        {0 x3d4d0000}
        {xc2b80000 x42830000}
        {x44950492 x44b53b6e}
        {0 0}
        {xc1cb3340 xc224ccc0}
        {x4498eccd x44ba4ccd}
        {x41cb3340 x4224ccc0}
        {xc24a0000 xc2480000}
        {x44b50000 x44e5d000}
        {0 0}
        {x4194ccc0 xc1d4ccc0}
        {x44b6b333 x44ed9000}
        {xc194ccc0 x41d4ccc0}
        {x42c53330 xc3070000}
        {x44a2accd x4507399a}
        {xc2c53330 x43070000}
        {0 0}
        {x448afd55 x4507b000}
        {0 0}
        {x420199a0 x42e40000}
        {x4475f6db x44e94b6e}
        {0 0}
        {xc1866660 x421d9980}
        {x44752f6f x44dc3393}
        {0 0}
        {0 0}
        {x44767000 x44daa000}
        {0 0}}}     idem}
     {tx x44800000 x449205ca x44e28c3e}
     {a osw x41200000 osf 0 str 1 spx x44f00000 spy x44870000 sb 1 ltn x44800000 ltm x44800000 tt x40800000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1920 1080}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1024
 lifetime_end 1024
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto6
 xpos -11303
 ypos -300
}
FilterErode {
 size -5
 name FilterErode1
 xpos -11303
 ypos -257
 disable true
}
Blur {
 size 15
 name Blur1
 xpos -11303
 ypos -214
 disable true
}
Dot {
 name Dot2
 xpos -11269
 ypos 196
}
Dot {
 name Dot4
 xpos -9101
 ypos 196
}
set N12687000 [stack 0]
Dot {
 name Dot9
 xpos -9100
 ypos 40
}
set N12687400 [stack 0]
Roto {
 inputs 0
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Rectangle1 512 bezier
     {{cc
       {f 8192}
       {px x447ac000
        {0 xc40a5554}
        {x43848004 x44f28005}
        {x44891556 0}
        {xc4891554 0}
        {x455e3001 x44f28005}
        {0 xc40a5554}
        {0 x440a5555}
        {x455e3001 x438c000e}
        {xc4891554 0}
        {x44891556 0}
        {x43848004 x438c000e}
        {0 x440a5555}}}
      {cc
       {f 8192}
       {px x447ac000
        {0 xc40a5554}
        {0 0}
        {x44891556 0}
        {xc4891554 0}
        {0 0}
        {0 xc40a5554}
        {0 x440a5555}
        {0 0}
        {xc4891554 0}
        {x44891556 0}
        {0 0}
        {0 x440a5555}}}}
     {tx x447ac000 x44eec000 x4488e000}
     {a osw x41200000 osf 0 str 1 spx x44f00000 spy x44870000 sb 1 ltn x447ac000 ltm x447ac000 tt x41000000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 tt 8 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1920 1080}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1003
 lifetime_end 1003
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto7
 xpos -10871
 ypos -441
}
Invert {
 name Invert1
 xpos -10871
 ypos -405
}
Blur {
 size 600
 name Blur5
 xpos -10871
 ypos -369
}
Dot {
 name Dot11
 xpos -10837
 ypos -328
}
Read {
 inputs 0
 file_type exr
 file C:/3D_Temp/PP/Footage/Chica/CHICA_002_V1/V1_CHICA_002_%05d.exr
 format "3840 2160 0 0 3840 2160 1 UHD_4K"
 first 95265
 before loop
 last 95382
 after loop
 origfirst 95265
 origlast 95382
 origset true
 name Read13
 xpos -10973
 ypos -674
}
Grade {
 blackpoint {0.08524046093 0.06509951502 0.0564169772 0}
 whitepoint {{curve x1016 0.2470428497} {curve x1016 0.1664886475} {curve x1016 0.135182187} {curve x1016 0}}
 name Grade10
 xpos -10973
 ypos -563
}
Dot {
 name Dot17
 xpos -10939
 ypos -507
}
set N136d1000 [stack 0]
Retime {
 input.first 95265
 input.last 95382
 output.first 1001
 output.first_lock true
 output.last 1118
 before loop
 after loop
 time ""
 name Retime2
 xpos -10973
 ypos -475
}
Transform {
 scale {1.824000001 1.200000048}
 center {960 540}
 name Transform1
 xpos -10973
 ypos -400
}
Reformat {
 name Reformat1
 xpos -10973
 ypos -368
}
Grade {
 inputs 1+1
 black 0.02
 name Grade2
 xpos -10972
 ypos -331
}
LensDistortion2 {
 distortionDenominator0 0.25
 output Undistort
 outputBBox {381 76 3459 2084}
 featuresKnob "
version 1
entries 0
entries 0
"
 distortionModelDisplayX "xu = xd / (1 + k0 * rd^2 + k1 * rd^4)"
 distortionModelDisplayY "yu = yd / (1 + k0 * rd^2 + k1 * rd^4)"
 name LensDistortion1
 xpos -10972
 ypos -294
}
Transform {
 scale 1.3
 center {1920 1080}
 name Transform2
 xpos -10972
 ypos -258
}
CornerPin2D {
 to1 {1567.5 198}
 to2 {1887.5 271}
 to3 {1663 632}
 to4 {1368.5 502}
 invert false
 from1 {0 0}
 from2 {3840 0}
 from3 {3840 2160}
 from4 {0 2160}
 name CornerPin2D1
 xpos -10972
 ypos -189
}
Dot {
 name Dot3
 xpos -10938
 ypos -120
}
Roto {
 inputs 0
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Rectangle1 512 bezier
     {{cc
       {f 8192}
       {px x447ac000
        {0 xc40a5554}
        {x43848004 x44f28005}
        {x44891556 0}
        {xc4891554 0}
        {x455e3001 x44f28005}
        {0 xc40a5554}
        {0 x440a5555}
        {x455e3001 x438c000e}
        {xc4891554 0}
        {x44891556 0}
        {x43848004 x438c000e}
        {0 x440a5555}}}
      {cc
       {f 8192}
       {px x447ac000
        {0 xc40a5554}
        {0 0}
        {x44891556 0}
        {xc4891554 0}
        {0 0}
        {0 xc40a5554}
        {0 x440a5555}
        {0 0}
        {xc4891554 0}
        {x44891556 0}
        {0 0}
        {0 x440a5555}}}}
     {tx x447ac000 x44eec000 x4488e000}
     {a osw x41200000 osf 0 str 1 spx x44f00000 spy x44870000 sb 1 ltn x447ac000 ltm x447ac000 tt x41000000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 tt 8 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1920 1080}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1003
 lifetime_end 1003
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto8
 xpos -10613
 ypos -439
}
Invert {
 name Invert2
 xpos -10613
 ypos -403
}
Blur {
 size 600
 name Blur6
 xpos -10613
 ypos -367
}
Dot {
 name Dot12
 xpos -10579
 ypos -326
}
push $N136d1000
Dot {
 name Dot18
 xpos -10681
 ypos -507
}
set N137b4c00 [stack 0]
Retime {
 input.first 95265
 input.last 95382
 output.first 1001
 output.first_lock true
 output.last 1118
 before loop
 after loop
 time ""
 name Retime3
 xpos -10715
 ypos -425
}
Transform {
 scale {1.824000001 1.200000048}
 center {960 540}
 name Transform3
 xpos -10715
 ypos -398
}
Reformat {
 name Reformat2
 xpos -10715
 ypos -366
}
Grade {
 inputs 1+1
 black 0.02
 name Grade3
 xpos -10714
 ypos -329
}
LensDistortion2 {
 distortionDenominator0 0.25
 output Undistort
 outputBBox {381 76 3459 2084}
 featuresKnob "
version 1
entries 0
entries 0
"
 distortionModelDisplayX "xu = xd / (1 + k0 * rd^2 + k1 * rd^4)"
 distortionModelDisplayY "yu = yd / (1 + k0 * rd^2 + k1 * rd^4)"
 name LensDistortion2
 xpos -10714
 ypos -292
}
Transform {
 scale 1.3
 center {1920 1080}
 name Transform4
 xpos -10714
 ypos -256
}
CornerPin2D {
 to1 {1916 256.5}
 to2 {2492 346}
 to3 {2178 856}
 to4 {1718 644}
 invert false
 from1 {0 0}
 from2 {3840 0}
 from3 {3840 2160}
 from4 {0 2160}
 name CornerPin2D2
 xpos -10714
 ypos -191
}
Merge2 {
 inputs 2
 name Merge3
 xpos -10713
 ypos -123
}
Roto {
 inputs 0
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Rectangle1 512 bezier
     {{cc
       {f 8192}
       {px x447ac000
        {0 xc40a5554}
        {x43848004 x44f28005}
        {x44891556 0}
        {xc4891554 0}
        {x455e3001 x44f28005}
        {0 xc40a5554}
        {0 x440a5555}
        {x455e3001 x438c000e}
        {xc4891554 0}
        {x44891556 0}
        {x43848004 x438c000e}
        {0 x440a5555}}}     idem}
     {tx x447ac000 x44eec000 x4488e000}
     {a osw x41200000 osf 0 str 1 spx x44f00000 spy x44870000 sb 1 ltn x447ac000 ltm x447ac000 tt x41000000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 tt 8 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1920 1080}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1003
 lifetime_end 1003
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto9
 xpos -10363
 ypos -436
}
Invert {
 name Invert3
 xpos -10363
 ypos -400
}
Blur {
 size 600
 name Blur7
 xpos -10363
 ypos -364
}
Dot {
 name Dot13
 xpos -10329
 ypos -323
}
push $N137b4c00
Dot {
 name Dot19
 xpos -10431
 ypos -507
}
set N13868800 [stack 0]
TimeOffset {
 time_offset 5
 time ""
 name TimeOffset1
 xpos -10465
 ypos -474
}
Retime {
 input.first 95270
 input.last 95387
 output.first 1001
 output.first_lock true
 output.last 1118
 before loop
 after loop
 time ""
 name Retime4
 xpos -10465
 ypos -422
}
Transform {
 scale {1.824000001 1.200000048}
 center {960 540}
 name Transform5
 xpos -10465
 ypos -395
}
Reformat {
 name Reformat7
 xpos -10465
 ypos -363
}
Grade {
 inputs 1+1
 black 0.02
 name Grade5
 xpos -10464
 ypos -326
}
LensDistortion2 {
 distortionDenominator0 0.25
 output Undistort
 outputBBox {381 76 3459 2084}
 featuresKnob "
version 1
entries 0
entries 0
"
 distortionModelDisplayX "xu = xd / (1 + k0 * rd^2 + k1 * rd^4)"
 distortionModelDisplayY "yu = yd / (1 + k0 * rd^2 + k1 * rd^4)"
 name LensDistortion3
 xpos -10464
 ypos -289
}
Transform {
 scale 1.3
 center {1920 1080}
 name Transform6
 xpos -10464
 ypos -253
}
CornerPin2D {
 to1 {2558 330}
 to2 {3718 606}
 to3 {3335 1356}
 to4 {2245 864}
 invert false
 from1 {0 0}
 from2 {3840 0}
 from3 {3840 2160}
 from4 {0 2160}
 name CornerPin2D3
 xpos -10464
 ypos -189
}
Merge2 {
 inputs 2
 name Merge4
 xpos -10464
 ypos -123
}
Roto {
 inputs 0
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Rectangle1 512 bezier
     {{cc
       {f 8192}
       {px x447ac000
        {0 xc40a5554}
        {x43848004 x44f28005}
        {x44891556 0}
        {xc4891554 0}
        {x455e3001 x44f28005}
        {0 xc40a5554}
        {0 x440a5555}
        {x455e3001 x438c000e}
        {xc4891554 0}
        {x44891556 0}
        {x43848004 x438c000e}
        {0 x440a5555}}}
      {cc
       {f 8192}
       {px x447ac000
        {0 xc40a5554}
        {0 0}
        {x44891556 0}
        {xc4891554 0}
        {0 0}
        {0 xc40a5554}
        {0 x440a5555}
        {0 0}
        {xc4891554 0}
        {x44891556 0}
        {0 0}
        {0 x440a5555}}}}
     {tx x447ac000 x44eec000 x4488e000}
     {a osw x41200000 osf 0 str 1 spx x44f00000 spy x44870000 sb 1 ltn x447ac000 ltm x447ac000 tt x41000000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 tt 8 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1920 1080}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1003
 lifetime_end 1003
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto10
 xpos -10098
 ypos -441
}
Invert {
 name Invert4
 xpos -10098
 ypos -405
}
Blur {
 size 600
 name Blur8
 xpos -10098
 ypos -369
}
Dot {
 name Dot14
 xpos -10064
 ypos -328
}
push $N13868800
Dot {
 name Dot20
 xpos -10166
 ypos -507
}
set N1392a400 [stack 0]
Retime {
 input.first 95265
 input.last 95382
 output.first 1001
 output.first_lock true
 output.last 1118
 before loop
 after loop
 time ""
 name Retime5
 xpos -10200
 ypos -478
}
TimeOffset {
 time_offset 15
 time ""
 name TimeOffset2
 xpos -10200
 ypos -454
}
Transform {
 scale {1.824000001 1.200000048}
 center {960 540}
 name Transform7
 xpos -10200
 ypos -400
}
Reformat {
 name Reformat3
 xpos -10200
 ypos -368
}
Grade {
 inputs 1+1
 black 0.02
 name Grade6
 xpos -10199
 ypos -331
}
LensDistortion2 {
 distortionDenominator0 0.25
 output Undistort
 outputBBox {381 76 3459 2084}
 featuresKnob "
version 1
entries 0
entries 0
"
 distortionModelDisplayX "xu = xd / (1 + k0 * rd^2 + k1 * rd^4)"
 distortionModelDisplayY "yu = yd / (1 + k0 * rd^2 + k1 * rd^4)"
 name LensDistortion4
 xpos -10199
 ypos -294
}
Transform {
 scale 1.3
 center {1920 1080}
 name Transform8
 xpos -10199
 ypos -258
}
CornerPin2D {
 to1 {1364.5 706}
 to2 {1605.5 871}
 to3 {1341.5 1260}
 to4 {1155 1014.5}
 invert false
 from1 {0 0}
 from2 {3840 0}
 from3 {3840 2160}
 from4 {0 2160}
 name CornerPin2D4
 xpos -10199
 ypos -191
}
Merge2 {
 inputs 2
 name Merge5
 xpos -10199
 ypos -123
}
Roto {
 inputs 0
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Rectangle1 512 bezier
     {{cc
       {f 8192}
       {px x447ac000
        {0 xc40a5554}
        {x43848004 x44f28005}
        {x44891556 0}
        {xc4891554 0}
        {x455e3001 x44f28005}
        {0 xc40a5554}
        {0 x440a5555}
        {x455e3001 x438c000e}
        {xc4891554 0}
        {x44891556 0}
        {x43848004 x438c000e}
        {0 x440a5555}}}
      {cc
       {f 8192}
       {px x447ac000
        {0 xc40a5554}
        {0 0}
        {x44891556 0}
        {xc4891554 0}
        {0 0}
        {0 xc40a5554}
        {0 x440a5555}
        {0 0}
        {xc4891554 0}
        {x44891556 0}
        {0 0}
        {0 x440a5555}}}}
     {tx x447ac000 x44eec000 x4488e000}
     {a osw x41200000 osf 0 str 1 spx x44f00000 spy x44870000 sb 1 ltn x447ac000 ltm x447ac000 tt x41000000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 tt 8 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1920 1080}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1003
 lifetime_end 1003
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto11
 xpos -9846
 ypos -442
}
Invert {
 name Invert5
 xpos -9846
 ypos -406
}
Blur {
 size 600
 name Blur9
 xpos -9846
 ypos -370
}
Dot {
 name Dot15
 xpos -9812
 ypos -329
}
push $N1392a400
Dot {
 name Dot21
 xpos -9914
 ypos -507
}
set N139d4000 [stack 0]
Retime {
 input.first 95265
 input.last 95382
 output.first 1001
 output.first_lock true
 output.last 1118
 before loop
 after loop
 time ""
 name Retime6
 xpos -9948
 ypos -428
}
Transform {
 scale {1.824000001 1.200000048}
 center {960 540}
 name Transform9
 xpos -9948
 ypos -401
}
Reformat {
 name Reformat8
 xpos -9948
 ypos -369
}
Grade {
 inputs 1+1
 black 0.02
 name Grade7
 xpos -9947
 ypos -332
}
LensDistortion2 {
 distortionDenominator0 0.25
 output Undistort
 outputBBox {381 76 3459 2084}
 featuresKnob "
version 1
entries 0
entries 0
"
 distortionModelDisplayX "xu = xd / (1 + k0 * rd^2 + k1 * rd^4)"
 distortionModelDisplayY "yu = yd / (1 + k0 * rd^2 + k1 * rd^4)"
 name LensDistortion5
 xpos -9947
 ypos -295
}
Transform {
 scale 1.3
 center {1920 1080}
 name Transform10
 xpos -9947
 ypos -259
}
CornerPin2D {
 to1 {1838 1020}
 to2 {2478 1452}
 to3 {2114 2068}
 to4 {1484 1484}
 invert false
 from1 {0 0}
 from2 {3840 0}
 from3 {3840 2160}
 from4 {0 2160}
 name CornerPin2D5
 xpos -9947
 ypos -189
}
Merge2 {
 inputs 2
 name Merge6
 xpos -9947
 ypos -123
}
Roto {
 inputs 0
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Rectangle1 512 bezier
     {{cc
       {f 8192}
       {px x447ac000
        {0 xc40a5554}
        {x43848004 x44f28005}
        {x44891556 0}
        {xc4891554 0}
        {x455e3001 x44f28005}
        {0 xc40a5554}
        {0 x440a5555}
        {x455e3001 x438c000e}
        {xc4891554 0}
        {x44891556 0}
        {x43848004 x438c000e}
        {0 x440a5555}}}
      {cc
       {f 8192}
       {px x447ac000
        {0 xc40a5554}
        {0 0}
        {x44891556 0}
        {xc4891554 0}
        {0 0}
        {0 xc40a5554}
        {0 x440a5555}
        {0 0}
        {xc4891554 0}
        {x44891556 0}
        {0 0}
        {0 x440a5555}}}}
     {tx x447ac000 x44eec000 x4488e000}
     {a osw x41200000 osf 0 str 1 spx x44f00000 spy x44870000 sb 1 ltn x447ac000 ltm x447ac000 tt x41000000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 tt 8 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1920 1080}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1003
 lifetime_end 1003
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto12
 xpos -9576
 ypos -441
}
Invert {
 name Invert6
 xpos -9576
 ypos -405
}
Blur {
 size 600
 name Blur10
 xpos -9576
 ypos -369
}
Dot {
 name Dot16
 xpos -9542
 ypos -328
}
push $N139d4000
Dot {
 name Dot22
 xpos -9644
 ypos -507
}
Retime {
 input.first 95265
 input.last 95382
 output.first 1001
 output.first_lock true
 output.last 1118
 before loop
 after loop
 time ""
 name Retime7
 xpos -9678
 ypos -473
}
TimeOffset {
 time_offset 25
 time ""
 name TimeOffset3
 xpos -9678
 ypos -449
}
Transform {
 scale {1.824000001 1.200000048}
 center {960 540}
 name Transform11
 xpos -9678
 ypos -400
}
Reformat {
 name Reformat9
 xpos -9678
 ypos -368
}
Grade {
 inputs 1+1
 black 0.02
 name Grade8
 xpos -9677
 ypos -331
}
LensDistortion2 {
 distortionDenominator0 0.25
 output Undistort
 outputBBox {381 76 3459 2084}
 featuresKnob "
version 1
entries 0
entries 0
"
 distortionModelDisplayX "xu = xd / (1 + k0 * rd^2 + k1 * rd^4)"
 distortionModelDisplayY "yu = yd / (1 + k0 * rd^2 + k1 * rd^4)"
 name LensDistortion6
 xpos -9677
 ypos -294
}
Transform {
 scale 1.3
 center {1920 1080}
 name Transform12
 xpos -9677
 ypos -258
}
CornerPin2D {
 to1 {1178 1377}
 to2 {1486 1870}
 to3 {1189 2306}
 to4 {930 1774}
 invert false
 from1 {0 0}
 from2 {3840 0}
 from3 {3840 2160}
 from4 {0 2160}
 name CornerPin2D6
 xpos -9677
 ypos -191
}
Merge2 {
 inputs 2
 name Merge7
 xpos -9677
 ypos -123
}
Grade {
 black {0.01074002497 0.009868259542 0.009130922146 0.9983969331}
 white {0.9097573161 0.8527587652 0.8274111152 1}
 multiply 0.6
 name Grade11
 xpos -9339
 ypos -123
}
Merge2 {
 inputs 2
 operation mask
 name Merge2
 xpos -9135
 ypos -123
}
Blur {
 size 3
 name Blur3
 xpos -9017
 ypos -129
}
Group {
 inputs 2
 name PxF_IDefocus
 help "Variable blur/defocus/convolve based on a control channel."
 onCreate "m = nuke.thisNode\nfl = nuke.toNode('Flare1')\n\nfl\['position'].setEnabled(False)"
 knobChanged "m = nuke.thisNode()\nkc = nuke.thisKnob()\n\n\n\nif kc.name() in \[\"filter\", \"slices\"]:\n    i = nuke.toNode('img')\n    i2 = nuke.toNode('Gamma1')\n    i3 = nuke.toNode('Switch1')\n    o = nuke.toNode('mask_keymix')    \n    \n    for n in nuke.allNodes():\n      if \"static\" not in n\['label'].getValue():\n        nuke.delete(n)\n    \n    \n    slices = int(m\['slices'].value())\n    step = int(1)\n    ii = i\n    for x in range(1,slices+step,step):\n      \n      defoExpression = 'pow(parent.size/parent.slices*' + str(x) + '/parent.size,parent.sliceGamma)*parent.size'\n      \n    \n      k = nuke.nodes.Keyer()\n      k.setInput(0, i2)\n      k\['operation'].setValue(\"red keyer\")\n      k\['range'].setExpression(\"(1/parent.slices*\" + str(x) +\")-1/parent.slices\", 0)\n      k\['range'].setExpression(\"(1/parent.slices*\" + str(x-1) + \") + (1/parent.slices*parent.overlap)\", 1)\n      k\['range'].setValue(1.0, 2)\n      k\['range'].setValue(1.0, 3)\n    \n     \n      f = m\['filter'].value()\n\n      if f == \"defocus\":\n        d = nuke.nodes.Defocus()\n        d.setInput(0, i)\n        d\['defocus'].setExpression(defoExpression)\n        d\['ratio'].setExpression('parent.aspect')\n\n      if f in \[\"box\", \"triangle\", \"quadratic\", \"gaussian\"]:\n        d = nuke.nodes.Blur()\n        d.setInput(0, i)\n        d\['size'].setSingleValue(False)\n        #d\['size'].setExpression('parent.size/parent.slices*' + str(x) + \"*parent.aspect\", 0 )\n        d\['size'].setExpression(defoExpression + '*parent.aspect' , 0)\n        #d\['size'].setExpression('parent.size/parent.slices*' + str(x), 1)\n        d\['size'].setExpression(defoExpression , 1) \n        d\['filter'].setValue(m\['filter'].value())\n\n      if f == \"bokeh\":\n        r1 = nuke.nodes.Reformat()\n        r1.setInput(0, i3)\n        r1\['type'].setValue(\"to box\")\n        r1\['box_width'].setExpression(defoExpression + \"*2 > 3 ? \" + defoExpression + \"*2 \" + \": 3\" )\n        r1\['pbb'].setValue(1)\n        \n        r15 = nuke.nodes.Reformat()\n        r15.setInput(0, r1)\n        r15\['type'].setValue(\"scale\")\n        r15\['resize'].setValue(\"deform\")\n        r15\['scale'].setSingleValue(False)\n        r15\['scale'].setValue(1,1)\n        r15\['scale'].setExpression('parent.aspect',0)\n        r15\['pbb'].setValue(1)\n        \n        t1 = nuke.nodes.Transform()\n        t1.setInput(0, r15)\n        t1\['translate'].setExpression(\"fmod(width,2)?0:0.5\", 0)\n        t1\['translate'].setExpression(\"fmod(height,2)?0:0.5\", 1)\n        \n        r2 = nuke.nodes.Reformat()\n        r2.setInput(0, t1)\n        r2\['type'].setValue(\"to box\")\n        r2\['box_width'].setExpression(\"fmod(width,2)?width:width+1\")\n        r2\['box_height'].setExpression(\"fmod(height,2)?height:height+1\")\n        r2\['resize'].setValue(\"none\")\n        r2\['pbb'].setValue(1)\n        \n        c1 = nuke.nodes.Crop()\n        c1.setInput(0,r2)\n        c1\['box'].setValue(-1,0)\n        c1\['box'].setValue(-1,1)\n        c1\['box'].setExpression('width+1',2)\n        c1\['box'].setExpression('height+1',3)\n\n        d = nuke.nodes.Convolve2()\n        d.setInput(0, i)\n        d.setInput(1, c1)\n        d\['useGPUIfAvailable'].setExpression('parent.useGPU')\n        d\['use_input_channels'].setExpression('parent.filterChannel')\n        d\['mix'].setExpression(defoExpression + \"*2 > 3 ? 1 : \" + defoExpression + \"*2/3\")\n        \n    \n        \n    \n    \n      km = nuke.nodes.Keymix()\n      km.setInput(0, ii)\n      km.setInput(1, d)\n      km.setInput(2, k)\n      km\['bbox'].setValue(\"A side\")\n    \n      ii = km\n    \n    o.setInput(0, ii)\n\n\n"
 tile_color 0x733520ff
 xpos -8866
 ypos -123
 addUserKnob {20 IDefocus}
 addUserKnob {4 filter t "box, triangle, quadratic, gaussian = Blur node\ndefocus = Defocus node\nbokeh = Convolve node. See 'bokeh' tab to customize bokeh or plug your own in the 'bokeh' input." M {box triangle quadratic gaussian defocus bokeh "" "" "" "" "" ""}}
 filter defocus
 addUserKnob {6 useGPU l "use GPU if available" t "Enable GPU rendering on Convolve node." +STARTLINE}
 useGPU true
 addUserKnob {4 controlChannel t "Which channel of the 'map' input used to drive the defocus." M {red green blue alpha "" "" "" "" ""}}
 controlChannel alpha
 addUserKnob {7 size l "max size" t "Maximum amount of defocus (i.e when the control channel is 1.0)." R 0 100}
 size 15
 addUserKnob {7 aspect t "Aspect ratio of the kernel. Use this to simulate 'oval' bokeh from an anamorphic lens." R 0 4}
 aspect 1
 addUserKnob {3 slices t "How many slices are generated from the 'map' image. More slices are more precise, but slower."}
 slices 10
 addUserKnob {7 sliceGamma t "Adds a bias to the slices. A value of 1.0 is a linear bias (i.e. no bias). Values greater than 1.0 bias the slices so that smaller defocus values get more slices. " R 0 5}
 sliceGamma 2.2
 addUserKnob {7 overlap t "Percentage of overlap between slices. An overlap of 0 means hard slices with no soft transition. "}
 overlap 0.5
 addUserKnob {7 mix t "Dissolve between the original (0) and the full effect (1)."}
 mix 1
 addUserKnob {26 ""}
 addUserKnob {26 Credits l "" t "PxF_IDefocus 1.3.1 - &copy; 2014-2023 - Xavier Bourque - pixelfudger.com \n\nPixelfudger gizmos are free to use for personal and commercial use as long as you leave the credit text intact in the gizmo's knobs and in the source files. " +STARTLINE T "<font size=2>PxF_IDefocus 1.3.1 - &copy; 2014-2023 - </font><a href=\"http://www.xavierbourque.com\"><font color=\"#bbbbbb\" size=2>Xavier Bourque</a></font> - <a href=\"http://www.pixelfudger.com\"><font color=\"#bbbbbb\" size=2>pixelfudger.com</a></font> - <a href=\"http://www.pixelfudger.com/userguides/PxF_IDefocus.html\"><font color=\"#bbbbbb\" size=2>Video Tutorial</a></font>"}
 addUserKnob {20 Bokeh}
 addUserKnob {6 viewKernel l "view bokeh" t "View the image being used as the kernel when the filter mode is set to 'Bokeh'. Use this to see what you're doing when adjusting the kernel shape.\n\nDon't forget to turn it off when you're done!" +STARTLINE}
 addUserKnob {26 "" l "@b;Colors"}
 addUserKnob {7 ringWidth t "Thickness of the 'donut' around the edge of the kernel."}
 ringWidth 0.25
 addUserKnob {41 ring_color l "ring color" t "Color of the 'donut' around the edge of the kernel." T Flare1.ring_color}
 addUserKnob {41 inner_color l "inner color" t "Color of the center of the kernel." T Flare1.inner_color}
 addUserKnob {41 outer_falloff l "outer falloff" t "Falloff on the outer edge of the 'donut'." T Flare1.outer_falloff}
 addUserKnob {41 inner_falloff l "inner falloff" t "Falloff on the inner edge of the 'donut'." T Flare1.inner_falloff}
 addUserKnob {26 "" l "@b;Shape"}
 addUserKnob {41 corners t "How many 'blades' are in the iris." T Flare1.corners}
 addUserKnob {41 flattening l "edge flattening" t "0 = round aperture (no blades).\n1 = flat edges between corners." T Flare1.flattening}
 addUserKnob {41 sharpness l "corner sharpness" T Flare1.sharpness}
 addUserKnob {41 corners_angle l angle t "Rotate the aperture." T Flare1.corners_angle}
 addUserKnob {26 Noise l "@b;Noise"}
 addUserKnob {6 enableNoise l enable t "Add noise to the bokeh." +STARTLINE}
 enableNoise true
 addUserKnob {7 noiseSize l size R 0 50}
 noiseSize 35
 addUserKnob {7 noiseGain l gain t "Gain of the noise."}
 noiseGain 0.85
 addUserKnob {7 noiseGamma l gamma t "Gamma of the noise."}
 noiseGamma 0.85
 addUserKnob {7 noiseMix l mix t "Adjusts how much noise is present in the bokeh."}
 noiseMix 0.5
 addUserKnob {26 ChromaAb l "@b;Chroma Aberration"}
 addUserKnob {6 chromaAbEnable l enable t "Enable chroma aberration on the bokeh.\n\nMake sure to set filter channels to rgb colour." +STARTLINE}
 chromaAbEnable true
 addUserKnob {7 chromaAbScale l scale t "Amount of chroma aberration on the bokeh. 1.0 = no chroma aberration." R 0 2}
 chromaAbScale 1.02
 addUserKnob {26 ""}
 addUserKnob {4 filterChannel l "filter channel" t "When using Bokeh mode, which channels to use from the bokeh image.\n\nrgb luma: Use the RGB luminance of the bokeh input to defocus all channels.\n\nrgb colour: Use the RGB channels to defocus RGB and RGB luminance to defocus the alpha." M {"rgb luminance" "rgb colour" "" ""}}
 filterChannel "rgb colour"
}
 Input {
  inputs 0
  name bokeh
  label static
  xpos 4496
  ypos -1111
  number 2
 }
 Keyer {
  operation "luminance key"
  name Keyer4
  label static
  xpos 4496
  ypos -1028
 }
 Reformat {
  inputs 0
  type "to box"
  box_width 501
  box_height 501
  box_fixed true
  name Reformat4
  label static
  xpos 4714
  ypos -1369
 }
set N13ad9c00 [stack 0]
 Noise {
  size {{parent.noiseSize i}}
  gain {{parent.noiseGain i}}
  gamma {{parent.noiseGamma i}}
  center {1440 810}
  name Noise1
  label static
  xpos 4825
  ypos -1305
 }
push $N13ad9c00
 Flare {
  position {250 250}
  radius {{0 i} {"249 - (parent.ringWidth*249)" i} {249 i}}
  inner_color 0.75
  outer_falloff 0.35
  inner_falloff 10
  vis_in 0
  vis_out 1
  vis_mask_size 0
  corners 8
  flattening 0.9
  sharpness 0.99
  name Flare1
  label static
  xpos 4717
  ypos -1303
 }
 Merge2 {
  inputs 2
  operation multiply
  mix {{parent.noiseMix i}}
  name Merge1
  label static
  xpos 4717
  ypos -1232
  disable {{parent.enableNoise?0:1 i}}
 }
 Shuffle {
  alpha red
  name Shuffle2
  label static
  xpos 4717
  ypos -1153
 }
 TransformMasked {
  channels {rgba.red -rgba.green -rgba.blue none}
  scale {{parent.chromaAbScale}}
  center {250.5 250.5}
  name Transform6
  label static
  xpos 4717
  ypos -1077
  disable {{"parent.chromaAbEnable ? 0 : 1"}}
 }
 TransformMasked {
  channels {-rgba.red -rgba.green rgba.blue none}
  scale {{"1 / parent.chromaAbScale"}}
  center {250.5 250.5}
  name Transform7
  label static
  xpos 4717
  ypos -1014
  disable {{"parent.chromaAbEnable ? 0 : 1"}}
 }
 Switch {
  inputs 2
  which {{"\[exists parent.input2]" i}}
  name Switch1
  label static
  xpos 4717
  ypos -912
 }
 Input {
  inputs 0
  name mask
  label static
  xpos 4439
  ypos -46
  number 3
 }
 Input {
  inputs 0
  name img
  label static
  xpos 3511
  ypos -1238
 }
set N13b5e800 [stack 0]
 Input {
  inputs 0
  name map
  label static
  xpos 1952
  ypos -1413
  number 1
 }
set N13b5ec00 [stack 0]
 Shuffle {
  red alpha
  green black
  blue black
  alpha black
  name Shuffle5
  label "static\nalpha"
  xpos 2052
  ypos -1219
 }
push $N13b5ec00
 Shuffle {
  red blue
  green black
  blue black
  alpha black
  name Shuffle4
  label "static\nblue"
  xpos 1957
  ypos -1220
 }
push $N13b5ec00
 Shuffle {
  red green
  green black
  blue black
  alpha black
  name Shuffle3
  label "static\ngreen"
  xpos 1862
  ypos -1215
 }
push $N13b5ec00
 Shuffle {
  green black
  blue black
  alpha black
  name Shuffle1
  label "static\nred"
  xpos 1766
  ypos -1217
 }
 Switch {
  inputs 4
  which {{parent.controlChannel i}}
  name Switch3
  label static
  xpos 1952
  ypos -1116
 }
 Gamma {
  channels rgba
  value {{parent.sliceGamma i}}
  name Gamma1
  label static
  xpos 1952
  ypos -935
 }
set N13b8c400 [stack 0]
 Keyer {
  operation "red keyer"
  range {{(1/parent.slices*10)-1/parent.slices} {"(1/parent.slices*9) + (1/parent.slices*parent.overlap)"} 1 1}
  name Keyer11
 }
push $N13b5e800
 Defocus {
  defocus {{pow(parent.size/parent.slices*10/parent.size,parent.sliceGamma)*parent.size}}
  ratio {{parent.aspect}}
  name Defocus10
 }
push $N13b8c400
 Keyer {
  operation "red keyer"
  range {{(1/parent.slices*9)-1/parent.slices} {"(1/parent.slices*8) + (1/parent.slices*parent.overlap)"} 1 1}
  name Keyer10
 }
push $N13b5e800
 Defocus {
  defocus {{pow(parent.size/parent.slices*9/parent.size,parent.sliceGamma)*parent.size}}
  ratio {{parent.aspect}}
  name Defocus9
 }
push $N13b8c400
 Keyer {
  operation "red keyer"
  range {{(1/parent.slices*8)-1/parent.slices} {"(1/parent.slices*7) + (1/parent.slices*parent.overlap)"} 1 1}
  name Keyer9
 }
push $N13b5e800
 Defocus {
  defocus {{pow(parent.size/parent.slices*8/parent.size,parent.sliceGamma)*parent.size}}
  ratio {{parent.aspect}}
  name Defocus8
 }
push $N13b8c400
 Keyer {
  operation "red keyer"
  range {{(1/parent.slices*7)-1/parent.slices} {"(1/parent.slices*6) + (1/parent.slices*parent.overlap)"} 1 1}
  name Keyer8
 }
push $N13b5e800
 Defocus {
  defocus {{pow(parent.size/parent.slices*7/parent.size,parent.sliceGamma)*parent.size}}
  ratio {{parent.aspect}}
  name Defocus7
 }
push $N13b8c400
 Keyer {
  operation "red keyer"
  range {{(1/parent.slices*6)-1/parent.slices} {"(1/parent.slices*5) + (1/parent.slices*parent.overlap)"} 1 1}
  name Keyer7
 }
push $N13b5e800
 Defocus {
  defocus {{pow(parent.size/parent.slices*6/parent.size,parent.sliceGamma)*parent.size}}
  ratio {{parent.aspect}}
  name Defocus6
 }
push $N13b8c400
 Keyer {
  operation "red keyer"
  range {{(1/parent.slices*5)-1/parent.slices} {"(1/parent.slices*4) + (1/parent.slices*parent.overlap)"} 1 1}
  name Keyer6
 }
push $N13b5e800
 Defocus {
  defocus {{pow(parent.size/parent.slices*5/parent.size,parent.sliceGamma)*parent.size}}
  ratio {{parent.aspect}}
  name Defocus5
 }
push $N13b8c400
 Keyer {
  operation "red keyer"
  range {{(1/parent.slices*4)-1/parent.slices} {"(1/parent.slices*3) + (1/parent.slices*parent.overlap)"} 1 1}
  name Keyer5
 }
push $N13b5e800
 Defocus {
  defocus {{pow(parent.size/parent.slices*4/parent.size,parent.sliceGamma)*parent.size}}
  ratio {{parent.aspect}}
  name Defocus4
 }
push $N13b8c400
 Keyer {
  operation "red keyer"
  range {{(1/parent.slices*3)-1/parent.slices} {"(1/parent.slices*2) + (1/parent.slices*parent.overlap)"} 1 1}
  name Keyer3
 }
push $N13b5e800
 Defocus {
  defocus {{pow(parent.size/parent.slices*3/parent.size,parent.sliceGamma)*parent.size}}
  ratio {{parent.aspect}}
  name Defocus3
 }
push $N13b8c400
 Keyer {
  operation "red keyer"
  range {{(1/parent.slices*2)-1/parent.slices} {"(1/parent.slices*1) + (1/parent.slices*parent.overlap)"} 1 1}
  name Keyer2
 }
push $N13b5e800
 Defocus {
  defocus {{pow(parent.size/parent.slices*2/parent.size,parent.sliceGamma)*parent.size}}
  ratio {{parent.aspect}}
  name Defocus2
 }
push $N13b8c400
 Keyer {
  operation "red keyer"
  range {{(1/parent.slices*1)-1/parent.slices} {"(1/parent.slices*0) + (1/parent.slices*parent.overlap)"} 1 1}
  name Keyer1
 }
push $N13b5e800
 Defocus {
  defocus {{pow(parent.size/parent.slices*1/parent.size,parent.sliceGamma)*parent.size}}
  ratio {{parent.aspect}}
  name Defocus1
 }
push $N13b5e800
 Keymix {
  inputs 3
  bbox A
  name Keymix1
 }
 Keymix {
  inputs 3
  bbox A
  name Keymix2
 }
 Keymix {
  inputs 3
  bbox A
  name Keymix3
 }
 Keymix {
  inputs 3
  bbox A
  name Keymix4
 }
 Keymix {
  inputs 3
  bbox A
  name Keymix5
 }
 Keymix {
  inputs 3
  bbox A
  name Keymix6
 }
 Keymix {
  inputs 3
  bbox A
  name Keymix7
 }
 Keymix {
  inputs 3
  bbox A
  name Keymix8
 }
 Keymix {
  inputs 3
  bbox A
  name Keymix9
 }
 Keymix {
  inputs 3
  bbox A
  name Keymix10
 }
 Keymix {
  inputs 3
  invertMask true
  bbox B
  name mask_keymix
  label static
  xpos 4061
  ypos -34
  disable {{"\[exists parent.input3] ? 0 : 1" x1 0}}
 }
push $N13b5e800
 Dissolve {
  inputs 2
  which {{parent.mix}}
  name Dissolve1
  label static
  xpos 4061
  ypos 86
 }
 Switch {
  inputs 2
  which {{parent.viewKernel i}}
  name Switch2
  label static
  xpos 4060
  ypos 203
 }
 Output {
  name Output1
  label static
  xpos 4060
  ypos 275
 }
end_group
Crop {
 box {0 0 3840 2160}
 name Crop1
 xpos -8745
 ypos -123
}
Dot {
 name Dot1
 xpos -8635
 ypos -120
}
set N13ca9400 [stack 0]
Dot {
 name Dot7
 xpos -8425
 ypos -120
}
set N13ca9800 [stack 0]
Group {
 name ExponentialGlow1
 tile_color 0xcc804eff
 label v6
 note_font "Bitstream Vera Sans"
 xpos -8459
 ypos 593
 cached true
 mapsize {0.15 0.15}
 addUserKnob {20 User l "Exponential Glow"}
 addUserKnob {41 falloff l Falloff T ExpoGlow.falloff}
 addUserKnob {7 intensity l Intensity R 0 10}
 intensity 0.1
 addUserKnob {41 blur_amount l Size T ExpoGlow.blur_amount}
 addUserKnob {7 Tolerance}
 addUserKnob {41 add_source l "Add Source" T ExpoGlow.add_source}
 addUserKnob {26 info l INVISIBLE +INVISIBLE T "Ported from Shake by brad-f"}
 addUserKnob {6 CroptoFormat l "Crop to Format" -STARTLINE}
 CroptoFormat true
 addUserKnob {7 AspectRatio R 0.1 2}
 AspectRatio 1
 addUserKnob {41 scale l Pre-Overscan T Overscan.scale}
 addUserKnob {6 FadeAroundFormat l "Fade Around Format" +STARTLINE}
 FadeAroundFormat true
 addUserKnob {7 FadeSize l "Fade Size" R 0 3}
 FadeSize 0.5
}
 Input {
  inputs 0
  name Input1
  xpos -490
  ypos -732
 }
 Reformat {
  type scale
  resize none
  name Format
  xpos -490
  ypos -683
 }
 Dot {
  name Dot1
  label OverscanR
  xpos -456
  ypos -648
 }
 Reformat {
  type scale
  scale 1.1
  resize none
  name Overscan
  xpos -490
  ypos -622
 }
 NoOp {
  name ExpoGlow
  xpos -490
  ypos -588
  addUserKnob {20 User}
  addUserKnob {7 falloff l Falloff R 0 2}
  falloff 0.59
  addUserKnob {7 intensity l Intensity R 0 5}
  intensity {{parent.intensity*10 i}}
  addUserKnob {7 blur_amount l Size R 0 5}
  blur_amount 0.1
  addUserKnob {6 add_source l "Add Source" +STARTLINE}
  addUserKnob {6 add_bbox l "Add original bbox" +STARTLINE}
 }
set N13cd3400 [stack 0]
 Dot {
  name Dot12
  xpos -371
  ypos -584
 }
set N13cd3800 [stack 0]
 Saturation {
  saturation 0
  mode Maximum
  name SaturationT
  xpos -316
  ypos -588
 }
 Keyer {
  operation "luminance key"
  range {{parent.Tolerance} 1 1 1}
  name KeyerT
  xpos -316
  ypos -562
 }
push $N13cd3800
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name CopyT
  xpos -316
  ypos -524
 }
 Premult {
  name PremultT
  xpos -316
  ypos -486
 }
 Grade {
  channels rgba
  gamma 2
  black_clamp false
  name GradeT
  xpos -316
  ypos -460
 }
 Keyer {
  operation "luminance key"
  name Keyer1
  xpos -316
  ypos -427
 }
 Premult {
  name Premult1
  xpos -316
  ypos -389
 }
 Remove {
  operation keep
  channels rgb
  name Remove1
  xpos -316
  ypos -363
 }
 Rectangle {
  invert true
  area {{width} {height} 0 0}
  softness {{parent.FadeSize*100}}
  color 0
  name RectangleFade
  xpos -316
  ypos -337
  disable {{1-parent.FadeAroundFormat}}
 }
 Grade {
  white {{ExpoGlow.intensity/100}}
  name Grade1
  xpos -316
  ypos -296
 }
 Dot {
  name Dot3
  xpos -146
  ypos -292
 }
set N13d82400 [stack 0]
 Dot {
  name Dot2
  xpos -36
  ypos -292
 }
set N13d82800 [stack 0]
 Dot {
  name Dot4
  xpos 84
  ypos -292
 }
set N13d82c00 [stack 0]
 Dot {
  name Dot5
  xpos 194
  ypos -292
 }
set N13d83000 [stack 0]
 Dot {
  name Dot6
  xpos 304
  ypos -292
 }
set N13d83400 [stack 0]
 Dot {
  name Dot7
  xpos 414
  ypos -292
 }
set N13d83800 [stack 0]
 Dot {
  name Dot8
  xpos 524
  ypos -292
 }
set N13d83c00 [stack 0]
 Dot {
  name Dot9
  xpos 631
  ypos -292
 }
set N13da6000 [stack 0]
 Dot {
  name Dot10
  xpos 741
  ypos -292
 }
 Group {
  name Blur8
  xpos 707
  ypos 235
  addUserKnob {20 percentBlur l "Percent Blur"}
  addUserKnob {41 xpercent l xPercent T Blur120.xpercent}
  addUserKnob {41 ypercent l yPercent T Blur120.ypercent}
 }
  Input {
   inputs 0
   name Input1
   xpos 514
   ypos -229
  }
  Blur {
   channels rgb
   size {{width/3*(xpercent/100) x1001 6.826666667e+10} {height/3*(ypercent/100)*(1/AspectRatio)}}
   crop false
   name Blur120
   xpos 514
   ypos -176
   addUserKnob {20 User}
   addUserKnob {7 xpercent l xPercent R 0 100}
   xpercent {{Blur7.xpercent*2}}
   addUserKnob {7 ypercent l yPercent R 0 100}
   ypercent {{xpercent/format.pixel_aspect/height*width}}
  }
  Output {
   name Output1
   xpos 514
   ypos -89
  }
 end_group
 Multiply {
  channels rgb
  value {{Multiply8.value/ExpoGlow.falloff i}}
  name Multiply9
  xpos -289
  ypos 235
 }
push $N13da6000
 Group {
  name Blur7
  xpos 597
  ypos 193
  addUserKnob {20 percentBlur l "Percent Blur"}
  addUserKnob {41 xpercent l xPercent T Blur120.xpercent}
  addUserKnob {41 ypercent l yPercent T Blur120.ypercent}
 }
  Input {
   inputs 0
   name Input1
   xpos 514
   ypos -229
  }
  Blur {
   channels rgb
   size {{width/3*(xpercent/100) x1001 6.826666667e+10} {height/3*(ypercent/100)*(1/AspectRatio)}}
   crop false
   name Blur120
   xpos 514
   ypos -164
   addUserKnob {20 User}
   addUserKnob {7 xpercent l xPercent R 0 100}
   xpercent {{Blur6.xpercent*2}}
   addUserKnob {7 ypercent l yPercent R 0 100}
   ypercent {{xpercent/format.pixel_aspect/height*width}}
  }
  Output {
   name Output1
   xpos 514
   ypos -89
  }
 end_group
 Multiply {
  channels rgb
  value {{Multiply7.value/ExpoGlow.falloff i}}
  name Multiply8
  xpos -289
  ypos 194
 }
push $N13d83c00
 Group {
  name Blur6
  xpos 490
  ypos 155
  addUserKnob {20 percentBlur l "Percent Blur"}
  addUserKnob {41 xpercent l xPercent T Blur120.xpercent}
  addUserKnob {41 ypercent l yPercent T Blur120.ypercent}
 }
  Input {
   inputs 0
   name Input1
   xpos 514
   ypos -229
  }
  Blur {
   channels rgb
   size {{width/3*(xpercent/100) x1001 6.826666667e+10} {height/3*(ypercent/100)*(1/AspectRatio)}}
   crop false
   name Blur120
   xpos 514
   ypos -185
   addUserKnob {20 User}
   addUserKnob {7 xpercent l xPercent R 0 100}
   xpercent {{Blur5.xpercent*2}}
   addUserKnob {7 ypercent l yPercent R 0 100}
   ypercent {{xpercent/format.pixel_aspect/height*width}}
  }
  Output {
   name Output1
   xpos 514
   ypos -89
  }
 end_group
 Multiply {
  channels rgb
  value {{Multiply6.value/ExpoGlow.falloff i}}
  name Multiply7
  xpos -290
  ypos 155
 }
push $N13d83800
 Group {
  name Blur5
  xpos 380
  ypos 116
  addUserKnob {20 percentBlur l "Percent Blur"}
  addUserKnob {41 xpercent l xPercent T Blur120.xpercent}
  addUserKnob {41 ypercent l yPercent T Blur120.ypercent}
 }
  Input {
   inputs 0
   name Input1
   xpos 514
   ypos -229
  }
  Blur {
   channels rgb
   size {{width/3*(xpercent/100) x1001 6.826666667e+10} {height/3*(ypercent/100)*(1/AspectRatio)}}
   crop false
   name Blur120
   xpos 514
   ypos -172
   addUserKnob {20 User}
   addUserKnob {7 xpercent l xPercent R 0 100}
   xpercent {{Blur4.xpercent*2}}
   addUserKnob {7 ypercent l yPercent R 0 100}
   ypercent {{xpercent/format.pixel_aspect/height*width}}
  }
  Output {
   name Output1
   xpos 514
   ypos -89
  }
 end_group
 Multiply {
  channels rgb
  value {{Multiply5.value/ExpoGlow.falloff i}}
  name Multiply6
  xpos -290
  ypos 116
 }
push $N13d83400
 Group {
  name Blur4
  xpos 270
  ypos 77
  addUserKnob {20 percentBlur l "Percent Blur"}
  addUserKnob {41 xpercent l xPercent T Blur120.xpercent}
  addUserKnob {41 ypercent l yPercent T Blur120.ypercent}
 }
  Input {
   inputs 0
   name Input1
   xpos 514
   ypos -229
  }
  Blur {
   channels rgb
   size {{width/3*(xpercent/100) x1001 6.826666667e+10} {height/3*(ypercent/100)*(1/AspectRatio)}}
   crop false
   name Blur120
   xpos 514
   ypos -179
   addUserKnob {20 User}
   addUserKnob {7 xpercent l xPercent R 0 100}
   xpercent {{Blur3.xpercent*2}}
   addUserKnob {7 ypercent l yPercent R 0 100}
   ypercent {{xpercent/format.pixel_aspect/height*width}}
  }
  Output {
   name Output1
   xpos 514
   ypos -89
  }
 end_group
 Multiply {
  channels rgb
  value {{Multiply4.value/ExpoGlow.falloff i}}
  name Multiply5
  xpos -292
  ypos 77
 }
push $N13d83000
 Group {
  name Blur3
  xpos 160
  ypos 42
  addUserKnob {20 percentBlur l "Percent Blur"}
  addUserKnob {41 xpercent l xPercent T Blur120.xpercent}
  addUserKnob {41 ypercent l yPercent T Blur120.ypercent}
 }
  Input {
   inputs 0
   name Input1
   xpos 514
   ypos -229
  }
  Blur {
   channels rgb
   size {{width/3*(xpercent/100) i x1001 6.826666667e+10} {height/3*(ypercent/100)*(1/AspectRatio) i}}
   crop false
   name Blur120
   xpos 514
   ypos -189
   addUserKnob {20 User}
   addUserKnob {7 xpercent l xPercent R 0 100}
   xpercent {{Blur2.xpercent*2 i}}
   addUserKnob {7 ypercent l yPercent R 0 100}
   ypercent {{xpercent/format.pixel_aspect/height*width i}}
  }
  Output {
   name Output1
   xpos 514
   ypos -89
  }
 end_group
 Multiply {
  channels rgb
  value {{Multiply3.value/ExpoGlow.falloff i}}
  name Multiply4
  xpos -291
  ypos 42
 }
push $N13d82c00
 Group {
  name Blur2
  xpos 50
  ypos 5
  addUserKnob {20 percentBlur l "Percent Blur"}
  addUserKnob {41 xpercent l xPercent T Blur120.xpercent}
  addUserKnob {41 ypercent l yPercent T Blur120.ypercent}
 }
  Input {
   inputs 0
   name Input1
   xpos 514
   ypos -229
  }
  Blur {
   channels rgb
   size {{width/3*(xpercent/100) i x1001 6.826666667e+10} {height/3*(ypercent/100)*(1/AspectRatio) i}}
   crop false
   name Blur120
   xpos 514
   ypos -184
   addUserKnob {20 User}
   addUserKnob {7 xpercent l xPercent R 0 100}
   xpercent {{Blur1.xpercent*2 i}}
   addUserKnob {7 ypercent l yPercent R 0 100}
   ypercent {{xpercent/format.pixel_aspect/height*width i}}
  }
  Output {
   name Output1
   xpos 514
   ypos -89
  }
 end_group
 Multiply {
  channels rgb
  value {{Multiply2.value/ExpoGlow.falloff i}}
  name Multiply3
  xpos -292
  ypos 5
 }
push $N13d82800
 Group {
  name Blur1
  xpos -70
  ypos -35
  addUserKnob {20 percentBlur l "Percent Blur"}
  addUserKnob {41 xpercent l xPercent T Blur120.xpercent}
  addUserKnob {41 ypercent l yPercent T Blur120.ypercent}
 }
  Input {
   inputs 0
   name Input1
   xpos 514
   ypos -229
  }
  Blur {
   channels rgb
   size {{width/3*(xpercent/100) i x1001 6.826666667e+10} {height/3*(ypercent/100)*(1/AspectRatio) i}}
   crop false
   name Blur120
   xpos 514
   ypos -189
   addUserKnob {20 User}
   addUserKnob {7 xpercent l xPercent R 0 100}
   xpercent {{Blur.xpercent*2 i}}
   addUserKnob {7 ypercent l yPercent R 0 100}
   ypercent {{xpercent/format.pixel_aspect/height*width i}}
  }
  Output {
   name Output1
   xpos 514
   ypos -89
  }
 end_group
 Multiply {
  channels rgb
  value {{Multiply1.value/ExpoGlow.falloff i}}
  name Multiply2
  xpos -293
  ypos -36
 }
push $N13cd3400
push $N13d82400
 Group {
  name Blur
  xpos -180
  ypos -76
  addUserKnob {20 percentBlur l "Percent Blur"}
  addUserKnob {41 xpercent l xPercent T Blur120.xpercent}
  addUserKnob {41 ypercent l yPercent T Blur120.ypercent}
 }
  Input {
   inputs 0
   name Input1
   xpos 514
   ypos -229
  }
  Blur {
   channels rgb
   size {{width/3*(xpercent/100) x1001 6.826666667e+10} {height/3*(ypercent/100)*(1/AspectRatio)}}
   crop false
   name Blur120
   xpos 514
   ypos -175
   addUserKnob {20 User}
   addUserKnob {7 xpercent l xPercent R 0 100}
   xpercent {{ExpoGlow.blur_amount}}
   addUserKnob {7 ypercent l yPercent R 0 100}
   ypercent {{xpercent/format.pixel_aspect/height*width}}
  }
  Output {
   name Output1
   xpos 514
   ypos -89
  }
 end_group
 Multiply {
  channels rgb
  name Multiply1
  xpos -290
  ypos -76
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge1
  xpos -430
  ypos -76
  disable {{!ExpoGlow.add_source}}
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge2
  xpos -430
  ypos -36
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge3
  xpos -430
  ypos 5
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge4
  xpos -430
  ypos 42
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge5
  xpos -430
  ypos 78
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge6
  xpos -430
  ypos 116
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge7
  xpos -430
  ypos 155
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge8
  xpos -430
  ypos 194
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge9
  xpos -430
  ypos 235
 }
 Grade {
  black_clamp false
  name breakConcatenation
  xpos -484
  ypos 305
 }
 Reformat {
  type "to box"
  box_width {{Format.width}}
  box_height {{Format.height}}
  resize none
  pbb {{1-parent.CroptoFormat}}
  name Reformat1
  xpos -484
  ypos 345
 }
 Output {
  name Output1
  xpos -484
  ypos 383
 }
end_group
Grade {
 white {1.649999976 0.7209215164 0.03299996629 0.9999998212}
 name Grade15
 xpos -8309
 ypos 599
}
push $N12687000
Blur {
 size 30
 name Blur2
 xpos -8745
 ypos 187
}
push $N13ca9400
Shuffle2 {
 fromInput1 {{0} B}
 fromInput2 {{0} B}
 mappings "4 rgba.alpha 0 3 rgba.alpha 0 3 black -1 -1 rgba.red 0 0 black -1 -1 rgba.green 0 1 black -1 -1 rgba.blue 0 2"
 name Shuffle1
 xpos -8669
 ypos -273
}
Read {
 inputs 0
 file_type exr
 file C:/3D_Temp/PP/Footage/TV_012/V1-0012_TV_%05d.exr
 format "3840 2160 0 0 3840 2160 1 UHD_4K"
 first 86736
 last 86775
 origfirst 86736
 origlast 86775
 origset true
 name Read1
 xpos -8148
 ypos -1066
}
Read {
 inputs 0
 file_type exr
 file C:/3D_Temp/PP/Footage/TV_005/V1-0005_TV_%05d.exr
 format "3840 2160 0 0 3840 2160 1 UHD_4K"
 first 86456
 last 86498
 origfirst 86456
 origlast 86498
 origset true
 name Read8
 xpos -8016
 ypos -1062
}
clone $Cf55e8800 {
 inputs 2
 xpos -8086
 ypos -953
 selected false
}
Retime {
 input.first 86736
 input.last 86775
 output.first 1001
 output.first_lock true
 output.last 1040
 time ""
 name Retime1
 xpos -8086
 ypos -911
}
Group {
 name apDespill
 help "apDespill v2.0 by Adrian Pueyo\n\nGizmo to despill an image, with options to despill any hue (and not only the primaries), select different algorithms for de/respilling, and protect tones from the despill.\n\nIf you just want a basic despill, its default values should already be enough and the tool will avoid any extra calculations.\n\nv2 includes a new \"absolute\" mode which lets you basically perform a key, or do a \"despill to color\" operation. Also, the despill color, respill color and limit can now be plugged as image inputs if you wish, letting you perform a fully image-based despill or key, sort of iKeylight. Additionally, it allows you to perform the despill under a colorspace sandwich, for the artists who prefer to loop through different colorspaces in order to find one that works. Thanks to Tony Lyons the best feedback!\n\nadrianpueyo.com, 2014-2021"
 onCreate "n = nuke.thisNode()\nn\['tolerance'].setRange(0,2)\nn\['prot1_tolerance'].setFlag(0x00000004)\nn\['prot1_effect'].setFlag(0x00000004)"
 knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\nkn = k.name()\nif kn == \"color\":\n    kv = k.getValue()\n    custom_weight_labels = \[\"green - blue\", \"red - blue\", \"red - green\", \" \"]\n    n\[\"custom_weight\"].setLabel(custom_weight_labels\[int(kv)])\n    n\[\"pick\"].setVisible(k.getValue() == 3)\nelif kn == \"mode\":\n    n\[\"custom_weight\"].setVisible(n\[\"mode\"].getValue()==3)\nelif kn in \[\"out\",\"output_alpha\"]:\n    n\[\"respill_math\"].setEnabled(n\[\"out\"].getValue()==0 or n\[\"output_alpha\"].getValue()==1)\n    n\[\"respill_color\"].setEnabled(n\[\"out\"].getValue()==0)\n    n\[\"inverted_spill_matte\"].setEnabled(n\[\"output_alpha\"].value())\nelif kn == \"prot1_activate\":\n    protA = n\[\"prot1_activate\"].value()\n    n\[\"prot1_preview\"].setEnabled(protA)\n    for i in \[\"prot1\", \"prot1_tolerance\", \"prot1_falloff\",\"prot1_effect\"]:\n        n\[i].setVisible(protA)\nelif kn == \"inputChange\":\n    n.knobs()\[\"limit_channel\"].setVisible(n.input(3) is not None)\n    n.knobs()\[\"invert_limit_channel\"].setVisible(n.input(3) is not None)\n    color_enabled = nuke.toNode(\"apDespillKernel\")\[\"apDespillKernel_use_color_input\"].getValue()==0\n    n\[\"color\"].setEnabled(color_enabled)\n    n.knobs()\[\"pick\"].setEnabled(color_enabled)\n    n\[\"info_using_input_color\"].setVisible(not color_enabled)\nelif kn == \"colorspace_shift\":\n    kv = k.value()\n    for i in \[\"colorspace_out\", \"illuminant_out\", \"primary_out\"]:\n        n.knobs()\[i].setEnabled(kv)\n    for i in \[\"colorspace_in\", \"illuminant_in\", \"primary_in\"]:\n        n.knobs()\[i].setEnabled(kv and n\[\"input_colorspace\"].value())\n    n\[\"input_colorspace\"].setEnabled(kv)\nelif kn == \"input_colorspace\":\n    kv = k.value()\n    for i in \[\"colorspace_in\", \"illuminant_in\", \"primary_in\"]:\n        n.knobs()\[i].setVisible(kv)\n        n.knobs()\[i].setEnabled(kv)\nelif kn == \"imagebased\":\n    kv = k.value()\n    input_names = \[\"color\",\"limit\",\"respill\"]\n    if kv:\n        for i_name in input_names:\n            i_fullname = \"Input\"+i_name\n            if not nuke.exists(i_fullname):\n                i_node = nuke.nodes.Input()\n                i_node\[\"name\"].setValue(i_fullname)\n            else:\n                i_node = nuke.toNode(i_fullname)\n            dot = nuke.toNode(\"Dot\"+i_name)\n            i_node.setXYpos(dot.xpos(),dot.ypos()-40)\n            dot.setInput(0,i_node)\n    else:\n        # If something connected, do nothing\n        if not any(\[n.input(i) for i in \[2,3,4]]):\n            for i_name in input_names:\n                if nuke.exists(\"Input\"+i_name):\n                    nuke.delete(nuke.toNode(\"Input\"+i_name))\n        else:\n            k.setValue(True)"
 tile_color 0x8b8b8bff
 xpos -8086
 ypos -868
 addUserKnob {20 apDespill}
 addUserKnob {6 pick_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 imagebased l image-based t "Show or hide image-based inputs.\n\nThis doesn't change anything internally except hiding inputs, just to avoid intimidating arrows on the node graph.\n\nNote: While any image-based input is connected, this won't let you hide them." +STARTLINE}
 addUserKnob {6 absolute_mode l "absolute mode" t "Absolute mode performs a keying algorithm instead of a regular despill, so that you can do a \"spill to colour\" or even use this node as an image-based Keylight." -STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {4 color t "Select a primary as a starting point, or custom to show RGB controls to select any color.\n\nNote: If an image is plugged on the color input, this will get overwritten by the input." M {red green blue custom "" "" ""}}
 color custom
 addUserKnob {26 info_using_input_color l " " -STARTLINE +HIDDEN T "<i><font color=#AAA> (Using color from input)"}
 addUserKnob {18 pick t "Pick the color you'd like to use for the despill. \n\nPlease use ctrl/cmd+alt+click for picking.\n\nNOTE: If a despill color image input is plugged, this value will be ignored."}
 pick {0.01208538841 0.04410633817 0.07612729818}
 addUserKnob {6 pick_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 pick_panelDropped true
 addUserKnob {6 dfg_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {4 out l output t "Quick switch to output the despilled image or the substracted one." M {despill spill}}
 addUserKnob {6 output_alpha l "output spill matte in alpha" t "Output the spill luminance in the alpha channel." +STARTLINE}
 output_alpha true
 addUserKnob {6 inverted_spill_matte l inverted t "Invert the output spill matte (in the alpha channel), especially useful when the despill is set to Absolute mode, in which case this will output a keying-like alpha." -STARTLINE}
 inverted_spill_matte true
 addUserKnob {4 mode l "despill math" t "average = avg of other two channels\nmaximum = max of other two channels\nminimum = min of other two channels\ncustom = select custom weights" M {average maximum minimum custom ""}}
 addUserKnob {7 custom_weight l " " t "-1 = only capped by the first channel\n0 = capped by avg of both\n1 = only capped by the second channel" -STARTLINE +HIDDEN R -1 1}
 addUserKnob {26 ""}
 addUserKnob {6 colorspace_shift l "alt colorspace" t "This allows for the popular artistic approach to refining the despill where you browse through colorspace conversions (mainly white point and primaries) and choose one that matches your desired despill bias.\n\n<b>Tip:</b> Double click on a dropdown and use the Page Up and Page Down keys on your keyboard to browse quickly through the items.\n\n<b>Note:</b> There's no need at all for the values of these dropdowns to match your working colorspace, so you can leave it as-is or tweak it if you prefer, regardless of the colorspace you're comping at (e.g. ACEScg). It is literally an artistic conversion prior to the despill algorithm that then gets reverted." +STARTLINE}
 colorspace_shift true
 addUserKnob {6 input_colorspace l "input colorspace" t "Also tweak the input colorspace for the back and forth colorspace conversion. This is generally not needed however, as this colorspace conversion is generally only used for artistic purposes." -STARTLINE}
 addUserKnob {6 log_space l log t "Perform Lin2Log -> Despill -> Log2Lin." -STARTLINE}
 addUserKnob {41 colorspace_in l "in colorspace" +DISABLED +HIDDEN T Colorspace1.colorspace_in}
 addUserKnob {41 illuminant_in l "" -STARTLINE +DISABLED +HIDDEN T Colorspace1.illuminant_in}
 addUserKnob {41 primary_in l "" -STARTLINE +DISABLED +HIDDEN T Colorspace1.primary_in}
 addUserKnob {41 colorspace_out l "despill space" T Colorspace1.colorspace_out}
 addUserKnob {41 illuminant_out l "" -STARTLINE T Colorspace1.illuminant_out}
 addUserKnob {41 primary_out l "" -STARTLINE T Colorspace1.primary_out}
 addUserKnob {26 ""}
 addUserKnob {7 hue_offset l "hue offset" t "Rotate the despill vectors to despill an arbitrary tone other than the primaries or the picked color.\nNote: A rotation of +-120 degrees is the same as selecting a different color channel." R -30 30}
 addUserKnob {7 tolerance l limit t "Use this to multiply the hue tolerance (the limiter value). You can move it all the way down to 0 to completely remove a hue from your image.\n\n<b>NOTE:</b> If an image is plugged into the <i>limit</i> input, this will act as a multiplier." R 0 2}
 tolerance 1
 addUserKnob {41 limit_channel l "limit channel" +HIDDEN T CopyLimit.from0}
 addUserKnob {6 invert_limit_channel l invert t "The recommended workflow for the image-based limit is keeping this invert turned on, so that the higher the value of the limit channel, the lower the limit gets." -STARTLINE +HIDDEN}
 invert_limit_channel true
 addUserKnob {6 prot1_activate l "protect tones" t "Enable controls to select tones to protect from despilling." +STARTLINE}
 addUserKnob {6 prot1_preview l preview t "Output the protected tones." -STARTLINE +DISABLED}
 addUserKnob {18 prot1 l protect t "Pick the central hue to protect.\n(ctrl/cmd+alt+click)" +HIDDEN}
 prot1 {0 0 0}
 addUserKnob {6 prot1_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {7 prot1_tolerance l tolerance t "Amount of hues to include in the selection." +HIDDEN}
 prot1_tolerance 0.2
 addUserKnob {7 prot1_falloff l falloff t "Falloff for the hue selection. A higher falloff will make hues apart from the picked one lose weight more quickly." +HIDDEN R 0 4}
 prot1_falloff 2
 addUserKnob {7 prot1_effect l effect t "Multiplier for the hue protection, and for the spill limit value." +HIDDEN R 0 10}
 prot1_effect 1
 addUserKnob {26 respill_divider l "" +STARTLINE}
 addUserKnob {4 respill_math l "spill math" t "Settings for the math for desaturating the the spill before adding it back." M {"Rec 709" "Ccir 601" "Rec 2020" Average Maximum "" "" "" "" ""}}
 addUserKnob {18 respill_color l "respill color" t "RGB multiplier for the desaturated spill when adding it back.\n\nIf used on non-degrained plates (which should be avoided anyway), any value other than 1 here will most likely produce grain artifacts.\n\nNOTE: If a respill image input is plugged, this value will act as a multiplier." R 0 4}
 respill_color {1 0.00687 0}
 addUserKnob {6 respill_color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 respill_color_panelDropped true
 addUserKnob {26 ""}
 addUserKnob {41 maskChannelMask l mask T Merge.maskChannelMask}
 addUserKnob {41 inject -STARTLINE T Merge.inject}
 addUserKnob {41 invert_mask l invert -STARTLINE T Merge.invert_mask}
 addUserKnob {41 fringe -STARTLINE T Merge.fringe}
 addUserKnob {41 mix T Merge.mix}
 addUserKnob {26 version_author l "" t "apDespill v2.0\n13 April, 2021" +STARTLINE T "<span style=\"color:#666\"><br/><b>apDespill v2.0</b> - <a href=\"http://www.adrianpueyo.com\" style=\"color:#666;text-decoration: none;\">adrianpueyo.com</a>, 2014-2021</span>"}
}
 Input {
  inputs 0
  name Inputmask
  xpos 273
  ypos -370
  number 1
 }
 Dot {
  name Dot1
  note_font_size 41
  xpos 307
  ypos -267
 }
set N13f7cc00 [stack 0]
 Dot {
  name Dot5
  note_font_size 41
  xpos 307
  ypos -237
 }
 Dot {
  inputs 0
  name Dotrespill
  label Dotrespill
  note_font "Verdana Bold"
  xpos 1190
  ypos -525
 }
 AddChannels {
  channels rgba
  format_size true
  name AddRGBA_spill
  xpos 1156
  ypos -442
 }
 Dot {
  inputs 0
  name Dotcolor
  label Dotcolor
  note_font "Verdana Bold"
  xpos 1080
  ypos -593
 }
 AddChannels {
  channels rgba
  format_size true
  name AddRGBA_color
  xpos 1046
  ypos -499
 }
 Dot {
  inputs 0
  name Dotlimit
  label Dotlimit
  note_font "Verdana Bold"
  xpos 936
  ypos -732
 }
 Shuffle {
  name Shuffle_limit
  xpos 902
  ypos -670
 }
 Input {
  inputs 0
  name Inputimage
  xpos 449
  ypos -761
 }
set N14f88c00 [stack 0]
 Dot {
  name Dot2
  note_font_size 41
  xpos 788
  ypos -758
 }
 Shuffle {
  alpha black
  name Shuffle
  xpos 754
  ypos -694
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name CopyLimit
  xpos 754
  ypos -670
 }
 Invert {
  channels alpha
  name InvertLimit
  xpos 754
  ypos -611
  disable {{!invert_limit_channel}}
 }
 Colorspace {
  name Colorspace1
  label "\[value colorspace_in] >> \[value colorspace_out]"
  xpos 754
  ypos -544
  disable {{!parent.colorspace_shift}}
 }
 Log2Lin {
  operation lin2log
  name Log2Lin1
  xpos 754
  ypos -508
  disable {{!log_space}}
 }
 BlinkScript {
  inputs 3
  recompileCount 94
  ProgramGroup 1
  KernelDescription "2 \"apDespillKernel\" iterate pixelWise 857ee5211c9dc340b8743026c9778403c1424a4ec1afa5c7990e55b71f93720c 4 \"src\" Read Point \"color_src\" Read Point \"spill_src\" Read Point \"dst\" Write Point 21 \"limit\" Float 1 AACAPw== \"shift\" Float 1 AAAAAA== \"weights\" Float 1 AAAAAA== \"outmode\" Int 1 AAAAAA== \"output_alpha\" Int 1 AAAAAA== \"output_alpha_inverted\" Int 1 AAAAAA== \"clr\" Int 1 AAAAAA== \"mode\" Int 1 AAAAAA== \"respill_math\" Int 1 AAAAAA== \"respill_color\" Float 4 AAAAAAAAAAAAAAAAAAAAAA== \"prot1_on\" Int 1 AAAAAA== \"prot1_preview\" Int 1 AAAAAA== \"prot1\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"prot1_tolerance\" Float 1 AAAAAA== \"prot1_mult\" Float 1 AAAAAA== \"prot1_falloff\" Float 1 AAAAAA== \"pickSpill\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"despill_method\" Int 1 AAAAAA== \"use_color_input\" Int 1 AAAAAA== \"use_spill_input\" Int 1 AAAAAA== \"use_limit_input\" Int 1 AAAAAA== 21 \"limit\" 1 1 \"shift\" 1 1 \"weights\" 1 1 \"outmode\" 1 1 \"output_alpha\" 1 1 \"output_alpha_inverted\" 1 1 \"clr\" 1 1 \"mode\" 1 1 \"respill_math\" 1 1 \"respill_color\" 4 1 \"prot1_on\" 1 1 \"prot1_preview\" 1 1 \"prot1\" 3 1 \"prot1_tolerance\" 1 1 \"prot1_mult\" 1 1 \"prot1_falloff\" 1 1 \"pickSpill\" 3 1 \"despill_method\" 1 1 \"use_color_input\" 1 1 \"use_spill_input\" 1 1 \"use_limit_input\" 1 1 7 \"_usePicked\" Int 1 1 AAAAAA== \"_clr\" Int 1 1 AAAAAA== \"_ret\" Int 1 1 AAAAAA== \"_hueShift\" Float 1 1 AAAAAA== \"_autoShift\" Float 1 1 AAAAAA== \"despillColor\" Float 3 1 AAAAAAAAAAAAAAAAAAAAAA== \"vNorm\" Float 3 1 AAAAAAAAAAAAAAAAAAAAAA=="
  kernelSource "//---------------------------------------------------------\n// apDespillKernel - apDespill v1.0 by Adrian Pueyo\n//\n// Despill an image, with options to despill any hue (and\n// not only the primaries), select different algorithms for\n// des/respilling, and protect tones from the despill.\n//\n// v2.0: Ability to plug image inputs for the controls,\n// and to perform a full key and respill.\n//\n// adrianpueyo.com, 2014-2017\n// ---------------------------------------------------------\n\ninline float y_convert_ccir601(const float4 in)\{\n  return in.x * 0.299f + in.y * 0.587f + in.z * 0.114f;\n\}\n\ninline float y_convert_rec709(const float4 in)\{\n  return in.x * 0.2125f + in.y * 0.7154f + in.z * 0.0721f;\n\}\n\ninline float y_convert_rec2020(const float4 in)\{\n  return in.x * 0.2627f + in.y * 0.678f + in.z * 0.0593f;\n\}\n\ninline float4 hueRotate(const float4 in, const float H)\{\n  if(H==0.0f)\{\n    return in;\n  \}else\{\n    float cosH = cos(H*PI/180);\n    float sinH = sin(H*PI/180);\n    float3 ret;\n    ret.x = (in.x+in.y+in.z)*(1-cosH)/3 + in.x*cosH + (-in.y/sqrt(3.0f)+in.z/sqrt(3.0f))*sinH;\n    ret.y = (in.x+in.y+in.z)*(1-cosH)/3 + in.y*cosH + (in.x/sqrt(3.0f)-in.z/sqrt(3.0f))*sinH;\n    ret.z = (in.x+in.y+in.z)*(1-cosH)/3 + in.z*cosH + (-in.x/sqrt(3.0f)+in.y/sqrt(3.0f))*sinH;\n    return float4(ret.x,ret.y,ret.z,in\[3]);\n  \}\n\}\n\nfloat3 vecToPlane(float3 v1, float3 v2 = float3(1.0f,1.0f,1.0f))\{\n  float3 v1onv2;\n  v1onv2 = v2 * float((float(dot(v2,v1))/float(dot(v2,v2)))); //Projection of vector on another (plane's normal)\n  return v1-v1onv2; //Projection of vector on plane\n\}\n\ninline float3 myCross(float3 a, float3 b)\{\n  return float3(float(a.y*b.z-a.z*b.y),float(a.z*b.x-a.x*b.z),float(a.x*b.y-a.y*b.x));\n\}\n\ninline float colorAngle(const float3 v1, const float3 v2)\{\n  const float3 vN=float3(1.0f,1.0f,1.0f);\n  float ang = acos(float(dot(v1,v2))/float(sqrt(dot(v1,v1)*dot(v2,v2))));\n  float3 crs = myCross(v1,v2);\n  if (dot(vN, crs) > 0) \{\n    ang = -ang;\n  \}\n  return ang;\n\}\n\n//Main function to calculate the despill for a float4 colour. If prot1_preview is True, returns the prot1 result instead.\ninline float4 apDespillMain(float4 src_color, float hueShift, int clr, int mode, float limit, float weights, int prot1_preview, int prot1_on, float3 prot1, float prot1_tolerance, float prot1_mult, float prot1_falloff)\{\n    //1. HueRotate IN\n    float4 despilled = hueRotate(src_color, hueShift);\n\n    //2. Calculate the limit\n    float resultLimit = 0.0f;\n    int2 others;\n    if(clr==0)\{//If red (and if _usePicked, also set red)\n      others = int2(1,2);\n    \}else if(clr==1)\{\n      others=int2(0,2);\n    \}else if(clr==2)\{\n      others=int2(0,1);\n    \}\n\n    if(mode==0)\{//average\n      resultLimit = (despilled\[others\[0]]+despilled\[others\[1]])/2;\n    \}else if(mode==1)\{//max\n      resultLimit = max(despilled\[others\[0]],despilled\[others\[1]]);\n    \}else if(mode==2)\{//min\n      resultLimit = min(despilled\[others\[0]],despilled\[others\[1]]);\n    \}else\{//custom\n      resultLimit = despilled\[others\[0]]*weights+despilled\[others\[1]]*(1-weights);\n    \}\n\n    //3. Protect tones\n    float prot1_result;\n    if(prot1_on==1&&(prot1\[0]!=prot1\[1]||prot1\[0]!=prot1\[2]||prot1\[1]!=prot1\[2]))\{\n      float cos_prot1_angle;\n      cos_prot1_angle = (src_color\[0]*prot1\[0]+src_color\[1]*prot1\[1]+src_color\[2]*prot1\[2]) / (sqrt(prot1\[0]*prot1\[0]+prot1\[1]*prot1\[1]+prot1\[2]*prot1\[2]) * sqrt(src_color\[0]*src_color\[0]+src_color\[1]*src_color\[1]+src_color\[2]*src_color\[2]));\n      prot1_result = pow(clamp(cos_prot1_angle,0.0f,1.0f),1/pow(prot1_tolerance,prot1_falloff));\n      resultLimit = resultLimit*(1+prot1_result*prot1_mult);\n    \}\n\n    //4. Calculate the despill and HueRotate OUT\n    for (int component = 0; component < 3; component++)\{\n      despilled\[component] = component==clr?min(despilled\[component],resultLimit*limit):despilled\[component];\n    \}\n    despilled = hueRotate(despilled,-hueShift);\n    despilled\[3] = prot1_result;\n    return despilled;\n\}\n\ninline float getLuma(float4 src_color, int luma_math)\{\n  float luma;\n  if(luma_math==0)\{\n    luma = y_convert_rec709(src_color);\n  \}else if(luma_math==1)\{\n    luma = y_convert_ccir601(src_color);\n  \}else if(luma_math==2)\{\n    luma = y_convert_rec2020(src_color);    \n  \}else if(luma_math==3)\{\n    luma = (src_color\[0]+src_color\[1]+src_color\[2])/3;\n  \}else\{\n    luma = max(max(src_color\[0],src_color\[1]),src_color\[2]);\n  \}\n  return luma;\n\}\n\nkernel apDespillKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> src;\n  Image<eRead, eAccessPoint, eEdgeClamped> color_src;\n  Image<eRead, eAccessPoint, eEdgeClamped> spill_src; //Acts as a multiplier for the respill color\n  Image<eWrite> dst;\n\n  param:\n    float limit;\n    float shift;\n    float weights;\n    int outmode;//0=despill,1=spill\n    int output_alpha;\n    int output_alpha_inverted;\n    int clr; //0=red,1=green,2=blue\n    int mode; //0=average,1=maximum,2=minimum,3=custom\n    int respill_math; //0=Rec709,1=Ccir601,2=Avg,3=Max\n    float4 respill_color;\n    int prot1_on;\n    int prot1_preview;\n    float3 prot1;\n    float prot1_tolerance;\n    float prot1_mult;\n    float prot1_falloff;\n    float3 pickSpill;\n    int despill_method; //0=despill,1=key/\"absolute\"\n\n    int use_color_input;\n    int use_spill_input;\n    int use_limit_input; //Should be shuffled in the src's alpha\n\n  local:\n    int _usePicked;\n    int _clr;\n    int _ret;\n    float _hueShift;\n    float _autoShift;\n    float3 despillColor;\n    float3 vNorm;\n\n  void define() \{\n    defineParam(limit, \"limit\", 1.0f);\n    defineParam(shift, \"shift\", 0.0f);\n  \}\n\n  void init() \{\n    //1. Calculate which color to affect\n    _ret = 0;\n    if(use_color_input==1)\{\n      _clr = 0;\n      _usePicked = 1;\n    \}else if(clr!=3)\{//red green or blue\n      _usePicked = 0;\n      _clr = clr;\n    \}else if(pickSpill.x==pickSpill.y && pickSpill.x==pickSpill.z)\{\n      _ret = 1;//if \"custom\" selected but has a gray value, avoid any calculations\n    \}else\{\n      _usePicked = 1;\n      _clr = 0;\n    \}\n    vNorm = float3(1.0f,1.0f,1.0f);\n    if(use_color_input==0)\{\n      //2. Calculate the necessary hue shift\n      _autoShift = 0.0f;\n      if(_usePicked==1)\{\n        _autoShift = colorAngle(vecToPlane(pickSpill,vNorm),vecToPlane(float3(1.0f,0.0f,0.0f),vNorm));\n        _autoShift = _autoShift*180/PI;//to deg\n      \}\n      _hueShift = shift-_autoShift;\n    \}\n  \}\n\n  void process()\{\n    if(_ret == 1)\{ dst()=src(); return; \} //Avoid any calculations if no despill selected\n\n    //0. If color from input, calculate the necessary hue shift\n    float hueShift = 0.0f, autoShift = 0.0f;\n    float3 despillColor;\n    if(use_color_input==1)\{\n      despillColor = float3(color_src(0),color_src(1),color_src(2));\n      autoShift = colorAngle(vecToPlane(despillColor,vNorm),vecToPlane(float3(1.0f,0.0f,0.0f),vNorm));\n      autoShift = autoShift*180/PI;//to deg\n      hueShift = shift-autoShift;\n    \}else\{\n      if(_usePicked == 1)\{\n        despillColor = pickSpill;\n      \}else\{\n        despillColor = float3(_clr==0?1.0f:0.0f,_clr==1?1.0f:0.0f,_clr==2?1.0f:0.0f);\n      \}\n      \n      hueShift = _hueShift;\n    \}\n\n    float limit_result = use_limit_input==1?limit*src(3):limit;\n\n    //1. Despill the source image\n    float4 despilled = apDespillMain(src(), hueShift, _clr, mode, limit_result, weights, prot1_preview, prot1_on, prot1, prot1_tolerance, prot1_mult, prot1_falloff);\n    if(prot1_preview==1 && prot1_on==1)\{\n      dst() = src()*clamp(despilled\[3]*prot1_mult,0.0f,1.0f);\n      return;\n    \}\n    float4 spill = src()-despilled;\n    float spill_luma = getLuma(spill, respill_math);\n\n    //2. Process the key if key method selected\n    float4 result;\n    float4 despilled_full, spill_full; //Will account for the key if method selected is key\n    float spill_luma_full;\n    if(despill_method==0)\{\n      //Despill Method = Despill\n      despilled_full = despilled;\n      spill_full = spill;\n      spill_luma_full = spill_luma;\n    \}else\{\n      //Despill Method = Key\n      float4 despillColor4 = float4(despillColor.x,despillColor.y,despillColor.z,1.0f); //For simplicity\n\n      //2.1. Despill the picked despill colour itself, for normalizing the spill\n      float4 pickSpill_despilled = apDespillMain(despillColor4, hueShift, _clr, mode, limit_result, weights, prot1_preview, prot1_on, prot1, prot1_tolerance, prot1_mult, prot1_falloff);\n      float4 pickSpill_spill = despillColor4-pickSpill_despilled;\n      float pickSpill_spill_luma = getLuma(pickSpill_spill, respill_math);\n\n      spill_luma_full = pickSpill_spill_luma == 0? 0:spill_luma/pickSpill_spill_luma;\n      spill_full = despillColor4*spill_luma_full;\n      despilled_full = src()-spill_full;\n    \}\n\n\n    float4 respill_color_result = use_spill_input==1?spill_src()*respill_color:respill_color;\n    //3. Output\n    if(outmode==0)\{ //Despill\n      result = despilled_full+spill_luma_full*respill_color_result;\n    \}else\{ //Spill\n      result = spill_full;\n    \}\n\n    if(output_alpha==0)\{\n      result\[3]=src(3);\n    \}else\{\n      if(output_alpha_inverted == 0)\{\n        result\[3]=spill_luma_full;\n      \}else\{\n        result\[3]=1-spill_luma_full;\n      \}\n    \}\n\n    dst() = result;\n\n  \}\n\};"
  useGPUIfAvailable false
  vectorize false
  rebuild ""
  apDespillKernel_limit {{parent.tolerance}}
  apDespillKernel_shift {{parent.hue_offset}}
  apDespillKernel_weights {{(parent.custom_weight+1)/2}}
  apDespillKernel_outmode {{parent.out}}
  apDespillKernel_output_alpha {{parent.output_alpha}}
  apDespillKernel_output_alpha_inverted {{parent.inverted_spill_matte}}
  apDespillKernel_clr {{parent.color}}
  apDespillKernel_mode {{parent.mode}}
  apDespillKernel_respill_math {{parent.respill_math}}
  apDespillKernel_respill_color {{parent.respill_color.r} {parent.respill_color.g} {parent.respill_color.b} 1}
  apDespillKernel_prot1_on {{parent.prot1_activate}}
  apDespillKernel_prot1_preview {{parent.prot1_preview}}
  apDespillKernel_prot1 {{parent.prot1} {parent.prot1} {parent.prot1}}
  apDespillKernel_prot1_tolerance {{parent.prot1_tolerance}}
  apDespillKernel_prot1_mult {{parent.prot1_effect}}
  apDespillKernel_prot1_falloff {{parent.prot1_falloff}}
  apDespillKernel_pickSpill {{parent.pick} {parent.pick} {parent.pick}}
  apDespillKernel_despill_method {{parent.absolute_mode}}
  apDespillKernel_use_color_input {{"\[\nif \{ \[lsearch -exact \[channels \[input this 1].input] rgba.red] >= 0\} \{\n    return 1\n\} else \{\n    return 0\n\}\n]"}}
  apDespillKernel_use_spill_input {{"\[\nif \{ \[lsearch -exact \[channels \[input this 2].input] rgba.red] >= 0\} \{\n    return 1\n\} else \{\n    return 0\n\}\n]"}}
  apDespillKernel_use_limit_input {{"\[exists parent.input3]"}}
  rebuild_finalise ""
  name apDespillKernel
  xpos 754
  ypos -448
 }
 Log2Lin {
  name Log2Lin2
  xpos 754
  ypos -378
  disable {{!log_space}}
 }
 Colorspace {
  channels {{{parent.Colorspace5.channels}}}
  colorspace_in {{parent.Colorspace1.colorspace_out}}
  illuminant_in {{parent.Colorspace1.illuminant_out}}
  primary_in {{parent.Colorspace1.primary_out}}
  colorspace_out {{parent.Colorspace1.colorspace_in}}
  illuminant_out {{parent.Colorspace1.illuminant_in}}
  primary_out {{parent.Colorspace1.primary_in}}
  name Colorspace2
  label "\[value colorspace_in] >> \[value colorspace_out]"
  xpos 754
  ypos -354
  disable {{!parent.colorspace_shift}}
 }
 Dot {
  name Dot3
  note_font_size 41
  xpos 788
  ypos -267
 }
set N14fb7400 [stack 0]
 Dot {
  name Dot4
  note_font_size 41
  xpos 788
  ypos -237
 }
push $N13f7cc00
push $N14fb7400
push $N14f88c00
 Merge2 {
  inputs 2+1
  operation copy
  bbox B
  Achannels {rgba.red rgba.green rgba.blue -rgba.alpha}
  Bchannels {rgba.red rgba.green rgba.blue -rgba.alpha}
  output {rgba.red rgba.green rgba.blue -rgba.alpha}
  name Merge
  xpos 449
  ypos -270
 }
 Copy {
  inputs 2+1
  from0 rgba.alpha
  to0 rgba.alpha
  bbox B
  maskChannelMask {{{parent.Merge.maskChannelMask}}}
  maskChannelInput {{{parent.Merge.maskChannelInput}}}
  inject {{parent.Merge.inject}}
  invert_mask {{parent.Merge.invert_mask}}
  fringe {{parent.Merge.fringe}}
  name CopyAlpha
  xpos 449
  ypos -246
  disable {{!parent.output_alpha}}
 }
 Output {
  name Output
  xpos 449
  ypos -166
 }
end_group
Grade {
 inputs 1+1
 white {0.400000006 0.3231999874 0.2800000012 0.5}
 name Grade1
 xpos -8086
 ypos -273
}
Dot {
 name Dot5
 xpos -8052
 ypos -180
}
set N14ffec00 [stack 0]
Dot {
 name Dot6
 xpos -8588
 ypos -180
}
Merge2 {
 inputs 2
 operation mask
 name Merge8
 xpos -8622
 ypos 193
}
ColorCorrect {
 contrast 2
 midtones.gain 0.5
 highlights.gain 0.5
 name ColorCorrect1
 xpos -8283
 ypos 193
}
Saturation {
 saturation 0
 name Saturation1
 xpos -8283
 ypos 217
}
Grade {
 white {1 0.135014 0.535078 1}
 white_panelDropped true
 name Grade4
 xpos -8283
 ypos 241
}
Multiply {
 value 0.46
 name Multiply1
 xpos -8283
 ypos 265
}
Roto {
 inputs 0
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x44804000
        {0 0}
        {x440b8cd1 x4546519f}
        {0 0}
        {0 0}
        {x454fbccc xc482f661}
        {0 0}
        {0 0}
        {x458620cc xc4346cc5}
        {0 0}
        {0 0}
        {x44a35000 x4562d19b}
        {0 0}}}     idem}
     {tx x44804000 x4510c000 x44a3b000}
     {a osw x41200000 osf 0 str 1 spx x44f00000 spy x44870000 sb 1 ltn x44804000 ltm x44804000 tt x40800000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1920 1080}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1026
 lifetime_end 1026
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto14
 xpos -8196
 ypos -75
}
Blur {
 size 800
 name Blur12
 xpos -8196
 ypos -39
}
Invert {
 name Invert8
 xpos -8196
 ypos -3
}
push $N12687400
push $N13ca9800
Dot {
 name Dot8
 xpos -8362
 ypos -120
}
set N1503f400 [stack 0]
Blur {
 size 40
 name Blur4
 xpos -8396
 ypos -8
}
Merge2 {
 inputs 2
 operation stencil
 name Merge11
 xpos -8396
 ypos 38
}
Multiply {
 value 0.24
 name Multiply2
 xpos -8306
 ypos 32
}
Group {
 inputs 2
 name PxF_IDefocus1
 help "Variable blur/defocus/convolve based on a control channel."
 onCreate "m = nuke.thisNode\nfl = nuke.toNode('Flare1')\n\nfl\['position'].setEnabled(False)"
 knobChanged "m = nuke.thisNode()\nkc = nuke.thisKnob()\n\n\n\nif kc.name() in \[\"filter\", \"slices\"]:\n    i = nuke.toNode('img')\n    i2 = nuke.toNode('Gamma1')\n    i3 = nuke.toNode('Switch1')\n    o = nuke.toNode('mask_keymix')    \n    \n    for n in nuke.allNodes():\n      if \"static\" not in n\['label'].getValue():\n        nuke.delete(n)\n    \n    \n    slices = int(m\['slices'].value())\n    step = int(1)\n    ii = i\n    for x in range(1,slices+step,step):\n      \n      defoExpression = 'pow(parent.size/parent.slices*' + str(x) + '/parent.size,parent.sliceGamma)*parent.size'\n      \n    \n      k = nuke.nodes.Keyer()\n      k.setInput(0, i2)\n      k\['operation'].setValue(\"red keyer\")\n      k\['range'].setExpression(\"(1/parent.slices*\" + str(x) +\")-1/parent.slices\", 0)\n      k\['range'].setExpression(\"(1/parent.slices*\" + str(x-1) + \") + (1/parent.slices*parent.overlap)\", 1)\n      k\['range'].setValue(1.0, 2)\n      k\['range'].setValue(1.0, 3)\n    \n     \n      f = m\['filter'].value()\n\n      if f == \"defocus\":\n        d = nuke.nodes.Defocus()\n        d.setInput(0, i)\n        d\['defocus'].setExpression(defoExpression)\n        d\['ratio'].setExpression('parent.aspect')\n\n      if f in \[\"box\", \"triangle\", \"quadratic\", \"gaussian\"]:\n        d = nuke.nodes.Blur()\n        d.setInput(0, i)\n        d\['size'].setSingleValue(False)\n        #d\['size'].setExpression('parent.size/parent.slices*' + str(x) + \"*parent.aspect\", 0 )\n        d\['size'].setExpression(defoExpression + '*parent.aspect' , 0)\n        #d\['size'].setExpression('parent.size/parent.slices*' + str(x), 1)\n        d\['size'].setExpression(defoExpression , 1) \n        d\['filter'].setValue(m\['filter'].value())\n\n      if f == \"bokeh\":\n        r1 = nuke.nodes.Reformat()\n        r1.setInput(0, i3)\n        r1\['type'].setValue(\"to box\")\n        r1\['box_width'].setExpression(defoExpression + \"*2 > 3 ? \" + defoExpression + \"*2 \" + \": 3\" )\n        r1\['pbb'].setValue(1)\n        \n        r15 = nuke.nodes.Reformat()\n        r15.setInput(0, r1)\n        r15\['type'].setValue(\"scale\")\n        r15\['resize'].setValue(\"deform\")\n        r15\['scale'].setSingleValue(False)\n        r15\['scale'].setValue(1,1)\n        r15\['scale'].setExpression('parent.aspect',0)\n        r15\['pbb'].setValue(1)\n        \n        t1 = nuke.nodes.Transform()\n        t1.setInput(0, r15)\n        t1\['translate'].setExpression(\"fmod(width,2)?0:0.5\", 0)\n        t1\['translate'].setExpression(\"fmod(height,2)?0:0.5\", 1)\n        \n        r2 = nuke.nodes.Reformat()\n        r2.setInput(0, t1)\n        r2\['type'].setValue(\"to box\")\n        r2\['box_width'].setExpression(\"fmod(width,2)?width:width+1\")\n        r2\['box_height'].setExpression(\"fmod(height,2)?height:height+1\")\n        r2\['resize'].setValue(\"none\")\n        r2\['pbb'].setValue(1)\n        \n        c1 = nuke.nodes.Crop()\n        c1.setInput(0,r2)\n        c1\['box'].setValue(-1,0)\n        c1\['box'].setValue(-1,1)\n        c1\['box'].setExpression('width+1',2)\n        c1\['box'].setExpression('height+1',3)\n\n        d = nuke.nodes.Convolve2()\n        d.setInput(0, i)\n        d.setInput(1, c1)\n        d\['useGPUIfAvailable'].setExpression('parent.useGPU')\n        d\['use_input_channels'].setExpression('parent.filterChannel')\n        d\['mix'].setExpression(defoExpression + \"*2 > 3 ? 1 : \" + defoExpression + \"*2/3\")\n        \n    \n        \n    \n    \n      km = nuke.nodes.Keymix()\n      km.setInput(0, ii)\n      km.setInput(1, d)\n      km.setInput(2, k)\n      km\['bbox'].setValue(\"A side\")\n    \n      ii = km\n    \n    o.setInput(0, ii)\n\n\n"
 tile_color 0x733520ff
 xpos -8196
 ypos 38
 addUserKnob {20 IDefocus}
 addUserKnob {4 filter t "box, triangle, quadratic, gaussian = Blur node\ndefocus = Defocus node\nbokeh = Convolve node. See 'bokeh' tab to customize bokeh or plug your own in the 'bokeh' input." M {box triangle quadratic gaussian defocus bokeh "" "" "" "" "" ""}}
 filter defocus
 addUserKnob {6 useGPU l "use GPU if available" t "Enable GPU rendering on Convolve node." +STARTLINE}
 useGPU true
 addUserKnob {4 controlChannel t "Which channel of the 'map' input used to drive the defocus." M {red green blue alpha "" "" "" "" ""}}
 controlChannel alpha
 addUserKnob {7 size l "max size" t "Maximum amount of defocus (i.e when the control channel is 1.0)." R 0 100}
 size 15
 addUserKnob {7 aspect t "Aspect ratio of the kernel. Use this to simulate 'oval' bokeh from an anamorphic lens." R 0 4}
 aspect 1
 addUserKnob {3 slices t "How many slices are generated from the 'map' image. More slices are more precise, but slower."}
 slices 10
 addUserKnob {7 sliceGamma t "Adds a bias to the slices. A value of 1.0 is a linear bias (i.e. no bias). Values greater than 1.0 bias the slices so that smaller defocus values get more slices. " R 0 5}
 sliceGamma 2.2
 addUserKnob {7 overlap t "Percentage of overlap between slices. An overlap of 0 means hard slices with no soft transition. "}
 overlap 0.5
 addUserKnob {7 mix t "Dissolve between the original (0) and the full effect (1)."}
 mix 1
 addUserKnob {26 ""}
 addUserKnob {26 Credits l "" t "PxF_IDefocus 1.3.1 - &copy; 2014-2023 - Xavier Bourque - pixelfudger.com \n\nPixelfudger gizmos are free to use for personal and commercial use as long as you leave the credit text intact in the gizmo's knobs and in the source files. " +STARTLINE T "<font size=2>PxF_IDefocus 1.3.1 - &copy; 2014-2023 - </font><a href=\"http://www.xavierbourque.com\"><font color=\"#bbbbbb\" size=2>Xavier Bourque</a></font> - <a href=\"http://www.pixelfudger.com\"><font color=\"#bbbbbb\" size=2>pixelfudger.com</a></font> - <a href=\"http://www.pixelfudger.com/userguides/PxF_IDefocus.html\"><font color=\"#bbbbbb\" size=2>Video Tutorial</a></font>"}
 addUserKnob {20 Bokeh}
 addUserKnob {6 viewKernel l "view bokeh" t "View the image being used as the kernel when the filter mode is set to 'Bokeh'. Use this to see what you're doing when adjusting the kernel shape.\n\nDon't forget to turn it off when you're done!" +STARTLINE}
 addUserKnob {26 "" l "@b;Colors"}
 addUserKnob {7 ringWidth t "Thickness of the 'donut' around the edge of the kernel."}
 ringWidth 0.25
 addUserKnob {41 ring_color l "ring color" t "Color of the 'donut' around the edge of the kernel." T Flare1.ring_color}
 addUserKnob {41 inner_color l "inner color" t "Color of the center of the kernel." T Flare1.inner_color}
 addUserKnob {41 outer_falloff l "outer falloff" t "Falloff on the outer edge of the 'donut'." T Flare1.outer_falloff}
 addUserKnob {41 inner_falloff l "inner falloff" t "Falloff on the inner edge of the 'donut'." T Flare1.inner_falloff}
 addUserKnob {26 "" l "@b;Shape"}
 addUserKnob {41 corners t "How many 'blades' are in the iris." T Flare1.corners}
 addUserKnob {41 flattening l "edge flattening" t "0 = round aperture (no blades).\n1 = flat edges between corners." T Flare1.flattening}
 addUserKnob {41 sharpness l "corner sharpness" T Flare1.sharpness}
 addUserKnob {41 corners_angle l angle t "Rotate the aperture." T Flare1.corners_angle}
 addUserKnob {26 Noise l "@b;Noise"}
 addUserKnob {6 enableNoise l enable t "Add noise to the bokeh." +STARTLINE}
 enableNoise true
 addUserKnob {7 noiseSize l size R 0 50}
 noiseSize 35
 addUserKnob {7 noiseGain l gain t "Gain of the noise."}
 noiseGain 0.85
 addUserKnob {7 noiseGamma l gamma t "Gamma of the noise."}
 noiseGamma 0.85
 addUserKnob {7 noiseMix l mix t "Adjusts how much noise is present in the bokeh."}
 noiseMix 0.5
 addUserKnob {26 ChromaAb l "@b;Chroma Aberration"}
 addUserKnob {6 chromaAbEnable l enable t "Enable chroma aberration on the bokeh.\n\nMake sure to set filter channels to rgb colour." +STARTLINE}
 chromaAbEnable true
 addUserKnob {7 chromaAbScale l scale t "Amount of chroma aberration on the bokeh. 1.0 = no chroma aberration." R 0 2}
 chromaAbScale 1.02
 addUserKnob {26 ""}
 addUserKnob {4 filterChannel l "filter channel" t "When using Bokeh mode, which channels to use from the bokeh image.\n\nrgb luma: Use the RGB luminance of the bokeh input to defocus all channels.\n\nrgb colour: Use the RGB channels to defocus RGB and RGB luminance to defocus the alpha." M {"rgb luminance" "rgb colour" "" ""}}
 filterChannel "rgb colour"
}
 Input {
  inputs 0
  name bokeh
  label static
  xpos 4496
  ypos -1111
  number 2
 }
 Keyer {
  operation "luminance key"
  name Keyer4
  label static
  xpos 4496
  ypos -1028
 }
 Reformat {
  inputs 0
  type "to box"
  box_width 501
  box_height 501
  box_fixed true
  name Reformat4
  label static
  xpos 4714
  ypos -1369
 }
set N150f0c00 [stack 0]
 Noise {
  size {{parent.noiseSize i}}
  gain {{parent.noiseGain i}}
  gamma {{parent.noiseGamma i}}
  center {1440 810}
  name Noise1
  label static
  xpos 4825
  ypos -1305
 }
push $N150f0c00
 Flare {
  position {250 250}
  radius {{0 i} {"249 - (parent.ringWidth*249)" i} {249 i}}
  inner_color 0.75
  outer_falloff 0.35
  inner_falloff 10
  vis_in 0
  vis_out 1
  vis_mask_size 0
  corners 8
  flattening 0.9
  sharpness 0.99
  name Flare1
  label static
  xpos 4717
  ypos -1303
 }
 Merge2 {
  inputs 2
  operation multiply
  mix {{parent.noiseMix i}}
  name Merge1
  label static
  xpos 4717
  ypos -1232
  disable {{parent.enableNoise?0:1 i}}
 }
 Shuffle {
  alpha red
  name Shuffle2
  label static
  xpos 4717
  ypos -1153
 }
 TransformMasked {
  channels {rgba.red -rgba.green -rgba.blue none}
  scale {{parent.chromaAbScale}}
  center {250.5 250.5}
  name Transform6
  label static
  xpos 4717
  ypos -1077
  disable {{"parent.chromaAbEnable ? 0 : 1"}}
 }
 TransformMasked {
  channels {-rgba.red -rgba.green rgba.blue none}
  scale {{"1 / parent.chromaAbScale"}}
  center {250.5 250.5}
  name Transform7
  label static
  xpos 4717
  ypos -1014
  disable {{"parent.chromaAbEnable ? 0 : 1"}}
 }
 Switch {
  inputs 2
  which {{"\[exists parent.input2]" i}}
  name Switch1
  label static
  xpos 4717
  ypos -912
 }
 Input {
  inputs 0
  name mask
  label static
  xpos 4439
  ypos -46
  number 3
 }
 Input {
  inputs 0
  name img
  label static
  xpos 3511
  ypos -1238
 }
set N15131800 [stack 0]
 Input {
  inputs 0
  name map
  label static
  xpos 1952
  ypos -1413
  number 1
 }
set N15131c00 [stack 0]
 Shuffle {
  red alpha
  green black
  blue black
  alpha black
  name Shuffle5
  label "static\nalpha"
  xpos 2052
  ypos -1219
 }
push $N15131c00
 Shuffle {
  red blue
  green black
  blue black
  alpha black
  name Shuffle4
  label "static\nblue"
  xpos 1957
  ypos -1220
 }
push $N15131c00
 Shuffle {
  red green
  green black
  blue black
  alpha black
  name Shuffle3
  label "static\ngreen"
  xpos 1862
  ypos -1215
 }
push $N15131c00
 Shuffle {
  green black
  blue black
  alpha black
  name Shuffle1
  label "static\nred"
  xpos 1766
  ypos -1217
 }
 Switch {
  inputs 4
  which {{parent.controlChannel i}}
  name Switch3
  label static
  xpos 1952
  ypos -1116
 }
 Gamma {
  channels rgba
  value {{parent.sliceGamma i}}
  name Gamma1
  label static
  xpos 1952
  ypos -935
 }
set N1515f400 [stack 0]
 Keyer {
  operation "red keyer"
  range {{(1/parent.slices*10)-1/parent.slices} {"(1/parent.slices*9) + (1/parent.slices*parent.overlap)"} 1 1}
  name Keyer11
 }
push $N15131800
 Defocus {
  defocus {{pow(parent.size/parent.slices*10/parent.size,parent.sliceGamma)*parent.size}}
  ratio {{parent.aspect}}
  name Defocus10
 }
push $N1515f400
 Keyer {
  operation "red keyer"
  range {{(1/parent.slices*9)-1/parent.slices} {"(1/parent.slices*8) + (1/parent.slices*parent.overlap)"} 1 1}
  name Keyer10
 }
push $N15131800
 Defocus {
  defocus {{pow(parent.size/parent.slices*9/parent.size,parent.sliceGamma)*parent.size}}
  ratio {{parent.aspect}}
  name Defocus9
 }
push $N1515f400
 Keyer {
  operation "red keyer"
  range {{(1/parent.slices*8)-1/parent.slices} {"(1/parent.slices*7) + (1/parent.slices*parent.overlap)"} 1 1}
  name Keyer9
 }
push $N15131800
 Defocus {
  defocus {{pow(parent.size/parent.slices*8/parent.size,parent.sliceGamma)*parent.size}}
  ratio {{parent.aspect}}
  name Defocus8
 }
push $N1515f400
 Keyer {
  operation "red keyer"
  range {{(1/parent.slices*7)-1/parent.slices} {"(1/parent.slices*6) + (1/parent.slices*parent.overlap)"} 1 1}
  name Keyer8
 }
push $N15131800
 Defocus {
  defocus {{pow(parent.size/parent.slices*7/parent.size,parent.sliceGamma)*parent.size}}
  ratio {{parent.aspect}}
  name Defocus7
 }
push $N1515f400
 Keyer {
  operation "red keyer"
  range {{(1/parent.slices*6)-1/parent.slices} {"(1/parent.slices*5) + (1/parent.slices*parent.overlap)"} 1 1}
  name Keyer7
 }
push $N15131800
 Defocus {
  defocus {{pow(parent.size/parent.slices*6/parent.size,parent.sliceGamma)*parent.size}}
  ratio {{parent.aspect}}
  name Defocus6
 }
push $N1515f400
 Keyer {
  operation "red keyer"
  range {{(1/parent.slices*5)-1/parent.slices} {"(1/parent.slices*4) + (1/parent.slices*parent.overlap)"} 1 1}
  name Keyer6
 }
push $N15131800
 Defocus {
  defocus {{pow(parent.size/parent.slices*5/parent.size,parent.sliceGamma)*parent.size}}
  ratio {{parent.aspect}}
  name Defocus5
 }
push $N1515f400
 Keyer {
  operation "red keyer"
  range {{(1/parent.slices*4)-1/parent.slices} {"(1/parent.slices*3) + (1/parent.slices*parent.overlap)"} 1 1}
  name Keyer5
 }
push $N15131800
 Defocus {
  defocus {{pow(parent.size/parent.slices*4/parent.size,parent.sliceGamma)*parent.size}}
  ratio {{parent.aspect}}
  name Defocus4
 }
push $N1515f400
 Keyer {
  operation "red keyer"
  range {{(1/parent.slices*3)-1/parent.slices} {"(1/parent.slices*2) + (1/parent.slices*parent.overlap)"} 1 1}
  name Keyer3
 }
push $N15131800
 Defocus {
  defocus {{pow(parent.size/parent.slices*3/parent.size,parent.sliceGamma)*parent.size}}
  ratio {{parent.aspect}}
  name Defocus3
 }
push $N1515f400
 Keyer {
  operation "red keyer"
  range {{(1/parent.slices*2)-1/parent.slices} {"(1/parent.slices*1) + (1/parent.slices*parent.overlap)"} 1 1}
  name Keyer2
 }
push $N15131800
 Defocus {
  defocus {{pow(parent.size/parent.slices*2/parent.size,parent.sliceGamma)*parent.size}}
  ratio {{parent.aspect}}
  name Defocus2
 }
push $N1515f400
 Keyer {
  operation "red keyer"
  range {{(1/parent.slices*1)-1/parent.slices} {"(1/parent.slices*0) + (1/parent.slices*parent.overlap)"} 1 1}
  name Keyer1
 }
push $N15131800
 Defocus {
  defocus {{pow(parent.size/parent.slices*1/parent.size,parent.sliceGamma)*parent.size}}
  ratio {{parent.aspect}}
  name Defocus1
 }
push $N15131800
 Keymix {
  inputs 3
  bbox A
  name Keymix1
 }
 Keymix {
  inputs 3
  bbox A
  name Keymix2
 }
 Keymix {
  inputs 3
  bbox A
  name Keymix3
 }
 Keymix {
  inputs 3
  bbox A
  name Keymix4
 }
 Keymix {
  inputs 3
  bbox A
  name Keymix5
 }
 Keymix {
  inputs 3
  bbox A
  name Keymix6
 }
 Keymix {
  inputs 3
  bbox A
  name Keymix7
 }
 Keymix {
  inputs 3
  bbox A
  name Keymix8
 }
 Keymix {
  inputs 3
  bbox A
  name Keymix9
 }
 Keymix {
  inputs 3
  bbox A
  name Keymix10
 }
 Keymix {
  inputs 3
  invertMask true
  bbox B
  name mask_keymix
  label static
  xpos 4061
  ypos -34
  disable {{"\[exists parent.input3] ? 0 : 1" x1 0}}
 }
push $N15131800
 Dissolve {
  inputs 2
  which {{parent.mix}}
  name Dissolve1
  label static
  xpos 4061
  ypos 86
 }
 Switch {
  inputs 2
  which {{parent.viewKernel i}}
  name Switch2
  label static
  xpos 4060
  ypos 203
 }
 Output {
  name Output1
  label static
  xpos 4060
  ypos 275
 }
end_group
push $N1503f400
push $N14ffec00
Merge2 {
 inputs 2
 operation screen
 name Merge1
 xpos -8086
 ypos -123
}
Dot {
 name Dot10
 label LIGHTWRAP
 note_font "Verdana Bold"
 note_font_size 21
 xpos -8052
 ypos 6
}
Merge2 {
 inputs 2
 name Merge12
 xpos -8086
 ypos 38
}
Merge2 {
 inputs 2
 operation screen
 mix 0.09
 name Merge9
 xpos -8086
 ypos 271
}
Merge2 {
 inputs 2
 operation screen
 name Merge10
 xpos -8086
 ypos 599
}
Crop {
 box {300.2000122 0 3540 2160}
 name Crop2
 xpos -8086
 ypos 666
}
set N15261400 [stack 0]
push $N15261400
push $N15261400
Viewer {
 inputs 3
 frame_range 1001-1043
 frame_range_lock true
 input_number 2
 colour_sample_bbox {0.1041666642 0.08333333582 0.104687497 0.08385416865}
 samplepoints {{-0.3270833194 -0.03333333507}
   }
 monitorOutOutputTransform rec709
 name Viewer1
 xpos -8086
 ypos 821
}
push $N15261400
Write {
 file C:/3D_Temp/PP/Render/TV_0012_V001/TV_0012_V001_###.exr
 file_type exr
 compression DWAB
 dw_compression_level 50
 first_part rgba
 version 23
 name Write1
 xpos -8086
 ypos 744
}
